{"version":3,"file":"ngx-goox-lib.mjs","sources":["../../../projects/ngx-goox-lib/src/lib/TimeFrame.ts","../../../projects/ngx-goox-lib/src/lib/TimeDataPoint.ts","../../../projects/ngx-goox-lib/src/lib/TimeSeries.ts","../../../projects/ngx-goox-lib/src/lib/BaseEntity.ts","../../../projects/ngx-goox-lib/src/lib/Tuple.ts","../../../projects/ngx-goox-lib/src/lib/ConfirmStatusCode.ts","../../../projects/ngx-goox-lib/src/lib/PriorityCode.ts","../../../projects/ngx-goox-lib/src/lib/ValidationFlag.ts","../../../projects/ngx-goox-lib/src/lib/PaymentMethodCode.ts","../../../projects/ngx-goox-lib/src/lib/UserStatusCode.ts","../../../projects/ngx-goox-lib/src/lib/AirplaneStatusCode.ts","../../../projects/ngx-goox-lib/src/lib/BillingStatusCode.ts","../../../projects/ngx-goox-lib/src/lib/CampaignStatusCode.ts","../../../projects/ngx-goox-lib/src/lib/CurrencyCode.ts","../../../projects/ngx-goox-lib/src/lib/FlightPurposeCode.ts","../../../projects/ngx-goox-lib/src/lib/MessageTypeCode.ts","../../../projects/ngx-goox-lib/src/lib/UserTypeCode.ts","../../../projects/ngx-goox-lib/src/lib/TransactionTypeCode.ts","../../../projects/ngx-goox-lib/src/lib/AssessmentCode.ts","../../../projects/ngx-goox-lib/src/lib/FlightStateCode.ts","../../../projects/ngx-goox-lib/src/lib/FlightStatusCode.ts","../../../projects/ngx-goox-lib/src/lib/LeadStatusCode.ts","../../../projects/ngx-goox-lib/src/lib/MaintenanceActionCode.ts","../../../projects/ngx-goox-lib/src/lib/StatusCode.ts","../../../projects/ngx-goox-lib/src/lib/AccountStatusCode.ts","../../../projects/ngx-goox-lib/src/lib/AirplaneValidationFlag.ts","../../../projects/ngx-goox-lib/src/lib/CampaignTypeCode.ts","../../../projects/ngx-goox-lib/src/lib/FlightTypeCode.ts","../../../projects/ngx-goox-lib/src/lib/TicketStatusCode.ts","../../../projects/ngx-goox-lib/src/lib/MessageConfirm.ts","../../../projects/ngx-goox-lib/src/lib/SystemConfig.ts","../../../projects/ngx-goox-lib/src/lib/Booking.ts","../../../projects/ngx-goox-lib/src/lib/Credit.ts","../../../projects/ngx-goox-lib/src/lib/TOLData.ts","../../../projects/ngx-goox-lib/src/lib/Lesson.ts","../../../projects/ngx-goox-lib/src/lib/BillingRecord.ts","../../../projects/ngx-goox-lib/src/lib/Maintenance.ts","../../../projects/ngx-goox-lib/src/lib/SystemMessage.ts","../../../projects/ngx-goox-lib/src/lib/FlightTicket.ts","../../../projects/ngx-goox-lib/src/lib/Account.ts","../../../projects/ngx-goox-lib/src/lib/AuditLog.ts","../../../projects/ngx-goox-lib/src/lib/Campaign.ts","../../../projects/ngx-goox-lib/src/lib/DocumentRevision.ts","../../../projects/ngx-goox-lib/src/lib/SpecialRisks.ts","../../../projects/ngx-goox-lib/src/lib/Mitigation.ts","../../../projects/ngx-goox-lib/src/lib/StringKeyValue.ts","../../../projects/ngx-goox-lib/src/lib/LoginParams.ts","../../../projects/ngx-goox-lib/src/lib/Flight.ts","../../../projects/ngx-goox-lib/src/lib/CrewDutyDayRisks.ts","../../../projects/ngx-goox-lib/src/lib/DestinationRisks.ts","../../../projects/ngx-goox-lib/src/lib/TripRisks.ts","../../../projects/ngx-goox-lib/src/lib/TokenData.ts","../../../projects/ngx-goox-lib/src/lib/Engine.ts","../../../projects/ngx-goox-lib/src/lib/Magneto.ts","../../../projects/ngx-goox-lib/src/lib/Fuel.ts","../../../projects/ngx-goox-lib/src/lib/Certificate.ts","../../../projects/ngx-goox-lib/src/lib/ReFuel.ts","../../../projects/ngx-goox-lib/src/lib/WeatherRisks.ts","../../../projects/ngx-goox-lib/src/lib/Lead.ts","../../../projects/ngx-goox-lib/src/lib/Document.ts","../../../projects/ngx-goox-lib/src/lib/OnBoard.ts","../../../projects/ngx-goox-lib/src/lib/PilotQualificationsRisks.ts","../../../projects/ngx-goox-lib/src/lib/User.ts","../../../projects/ngx-goox-lib/src/lib/Contact.ts","../../../projects/ngx-goox-lib/src/lib/RiskAssessment.ts","../../../projects/ngx-goox-lib/src/lib/Address.ts","../../../projects/ngx-goox-lib/src/lib/Airplane.ts","../../../projects/ngx-goox-lib/src/lib/Propeller.ts","../../../projects/ngx-goox-lib/src/lib/DepartureRisks.ts","../../../projects/ngx-goox-lib/src/lib/Billing.ts","../../../projects/ngx-goox-lib/src/utils/BaseRestResponse.ts","../../../projects/ngx-goox-lib/src/utils/ActionResponse.ts","../../../projects/ngx-goox-lib/src/utils/EntityResponse.ts","../../../projects/ngx-goox-lib/src/utils/EntitiesResponse.ts","../../../projects/ngx-goox-lib/src/utils/rest-util.ts","../../../projects/ngx-goox-lib/src/config.ts","../../../projects/ngx-goox-lib/src/lib/CampaignsEndPoint.ts","../../../projects/ngx-goox-lib/src/lib/LeadsEndPoint.ts","../../../projects/ngx-goox-lib/src/lib/MaintenancesEndPoint.ts","../../../projects/ngx-goox-lib/src/lib/SystemMessagesEndPoint.ts","../../../projects/ngx-goox-lib/src/lib/UserEndPoint.ts","../../../projects/ngx-goox-lib/src/lib/AccountsEndPoint.ts","../../../projects/ngx-goox-lib/src/lib/AuditLogsEndPoint.ts","../../../projects/ngx-goox-lib/src/lib/BookingsEndPoint.ts","../../../projects/ngx-goox-lib/src/lib/DocumentsEndPoint.ts","../../../projects/ngx-goox-lib/src/lib/MessageConfirmsEndPoint.ts","../../../projects/ngx-goox-lib/src/lib/UsersEndPoint.ts","../../../projects/ngx-goox-lib/src/lib/AirplanesEndPoint.ts","../../../projects/ngx-goox-lib/src/lib/ContactsEndPoint.ts","../../../projects/ngx-goox-lib/src/lib/CreditsEndPoint.ts","../../../projects/ngx-goox-lib/src/lib/CertificatesEndPoint.ts","../../../projects/ngx-goox-lib/src/lib/FlightTicketsEndPoint.ts","../../../projects/ngx-goox-lib/src/lib/FlightsEndPoint.ts","../../../projects/ngx-goox-lib/src/lib/services.export.ts","../../../projects/ngx-goox-lib/src/ngx-goox-lib.module.ts","../../../projects/ngx-goox-lib/src/public-api.ts","../../../projects/ngx-goox-lib/src/ngx-goox-lib.ts"],"sourcesContent":["\n\n\n\nexport class TimeFrame {\n \n    // From Timestamp \n    public from: number;\n \n    // To Timestamp \n    public to: number;\n \n     constructor(from?: number, to?: number) { \n        if (from !== undefined) { this.from = from; }\n        if (to !== undefined) { this.to = to; }\n    }\n\n}\n\n\n\n","\n\n\n\n// TimeDataPoint model represents a generic datapoint in time\nexport class TimeDataPoint<T> {\n \n    // Datapoint Timestamp \n    public timestamp: number;\n \n    // Generic value \n    public value: T;\n \n     constructor(timestamp?: number, value?: T) { \n        if (timestamp !== undefined) { this.timestamp = timestamp; }\n        if (value !== undefined) { this.value = value; }\n    }\n\n}\n\n\n\n","\nimport { TimeFrame } from '.';\nimport { TimeDataPoint } from '.';\n\n\n\n// TimeSeries is a set of data points over time\nexport class TimeSeries<T> {\n \n    // Name of the time series \n    public name: string;\n \n    // Range of the series (from ... to) \n    public range: TimeFrame;\n \n    // Series data points \n    public values: TimeDataPoint<T>[];\n \n     constructor(name?: string, range?: TimeFrame, values?: TimeDataPoint<T>[]) { \n        if (name !== undefined) { this.name = name; }\n        if (range !== undefined) { this.range = range; }\n        if (values !== undefined) { this.values = values; }\n    }\n\n}\n\n\n\n","\n\n\n\n// Base class for all entities\nexport class BaseEntity {\n \n    // Unique object Id \n    public id: string;\n \n    // When the object was created [Epoch milliseconds Timestamp] \n    public createdOn: number;\n \n    // When the object was last updated [Epoch milliseconds Timestamp] \n    public updatedOn: number;\n \n     constructor(id?: string, createdOn?: number, updatedOn?: number) { \n        if (id !== undefined) { this.id = id; }\n        if (createdOn !== undefined) { this.createdOn = createdOn; }\n        if (updatedOn !== undefined) { this.updatedOn = updatedOn; }\n    }\n\n}\n\n\n\n","\n\n\n\n// Tuple is a generic key-value pair\nexport class Tuple<K,T> {\n \n    // Generic key \n    public key: K;\n \n    // Generic value \n    public value: T;\n \n     constructor(key?: K, value?: T) { \n        if (key !== undefined) { this.key = key; }\n        if (value !== undefined) { this.value = value; }\n    }\n\n}\n\n\n\n","\nimport { Tuple } from '.';\n\n\n// ConfirmStatusCode represents the contact confirmation status: PENDING | APPROVED | REJECTED ...\nexport enum ConfirmStatusCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Pending not read yet [1] \n    PENDING = 1,\n \n    // Approved by the contact [2] \n    APPROVED = 2,\n \n    // Rejected by the contact [3] \n    REJECTED = 3,\n \n}\n\n// Return list of ConfirmStatusCode values and their display names\nexport function GetConfirmStatusCodes() : Tuple<ConfirmStatusCode, string>[] {\n\tlet result : Tuple<ConfirmStatusCode, string>[] = [];\n\n    \n\tresult.push(new Tuple<ConfirmStatusCode, string>(ConfirmStatusCode.PENDING, 'ConfirmStatusCode.PENDING'))\n\t\n\tresult.push(new Tuple<ConfirmStatusCode, string>(ConfirmStatusCode.APPROVED, 'ConfirmStatusCode.APPROVED'))\n\t\n\tresult.push(new Tuple<ConfirmStatusCode, string>(ConfirmStatusCode.REJECTED, 'ConfirmStatusCode.REJECTED'))\n\t\n\n    return result;\n}\n\n// Return map of ConfirmStatusCode values and their display names\nexport function MapConfirmStatusCodes() : Map<ConfirmStatusCode, string> {\n    let result = new Map<ConfirmStatusCode, string>();\n\n    \n\tresult.set(ConfirmStatusCode.UNDEFINED, 'Undefined');\n\t\n\tresult.set(ConfirmStatusCode.PENDING, 'Pending');\n\t\n\tresult.set(ConfirmStatusCode.APPROVED, 'Approved');\n\t\n\tresult.set(ConfirmStatusCode.REJECTED, 'Rejected');\n\t\n\n    return result;\n}\n","\nimport { Tuple } from '.';\n\n\n// PriorityCode represents a priority: LOW | MEDIUM | HIGH\nexport enum PriorityCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // No priority [1] \n    NONE = 1,\n \n    // Low priority [2] \n    LOW = 2,\n \n    // Medium priority [3] \n    MEDIUM = 3,\n \n    // High priority [4] \n    HIGH = 4,\n \n}\n\n// Return list of PriorityCode values and their display names\nexport function GetPriorityCodes() : Tuple<PriorityCode, string>[] {\n\tlet result : Tuple<PriorityCode, string>[] = [];\n\n    \n\tresult.push(new Tuple<PriorityCode, string>(PriorityCode.NONE, 'PriorityCode.NONE'))\n\t\n\tresult.push(new Tuple<PriorityCode, string>(PriorityCode.LOW, 'PriorityCode.LOW'))\n\t\n\tresult.push(new Tuple<PriorityCode, string>(PriorityCode.MEDIUM, 'PriorityCode.MEDIUM'))\n\t\n\tresult.push(new Tuple<PriorityCode, string>(PriorityCode.HIGH, 'PriorityCode.HIGH'))\n\t\n\n    return result;\n}\n\n// Return map of PriorityCode values and their display names\nexport function MapPriorityCodes() : Map<PriorityCode, string> {\n    let result = new Map<PriorityCode, string>();\n\n    \n\tresult.set(PriorityCode.UNDEFINED, 'Undefined');\n\t\n\tresult.set(PriorityCode.NONE, 'None');\n\t\n\tresult.set(PriorityCode.LOW, 'Low');\n\t\n\tresult.set(PriorityCode.MEDIUM, 'Medium');\n\t\n\tresult.set(PriorityCode.HIGH, 'High');\n\t\n\n    return result;\n}\n","\nimport { Tuple } from '.';\n\n\n// ValidationFlag represents combination of validations\nexport enum ValidationFlag {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Valid medical certificate  [1] \n    MEDICAL_CERT = 1,\n \n    // Valid pilot license [2] \n    PILOT_LICENSE = 2,\n \n    // Single Engine Certificate [4] \n    SINGLE_ENG_CERT = 4,\n \n    // Dual Engine Certificate [8] \n    DUAL_ENG_CERT = 8,\n \n    // 666 Instruments Certificate [16] \n    INST_666_CERT = 16,\n \n    // REC Instruments Certificate [32] \n    INST_REC_CERT = 32,\n \n    // Day time fly [64] \n    DAYTIME_FLY = 64,\n \n    // Nighttime fly [128] \n    NIGHTTIME_FLY = 128,\n \n    // Night CVFR [256] \n    NIGHT_CVFR_CUR = 256,\n \n    // Route exam [512] \n    ROUTE_EXAM = 512,\n \n    // DI Certificate [1024] \n    DI_CERT = 1024,\n \n    // International [2048] \n    INTERNATIONAL = 2048,\n \n    // English Proficiency [4096] \n    ENGLISH_PROF = 4096,\n \n    // Instructor license [8192] \n    INSTRUCTOR_LICENSE = 8192,\n \n    // Company check ? [16384] \n    COMPANY_CHECK = 16384,\n \n    // Company Examiner ? [32768] \n    COMPANY_EXAMIN = 32768,\n \n    // Commercial 172p [65536] \n    COMMERCIAL_172P = 65536,\n \n    // Commercial 172xp [131072] \n    COMMERCIAL_172XP = 131072,\n \n    // Commercial 172xp [262144] \n    COMMERCIAL_207 = 262144,\n \n}\n\n// Return list of ValidationFlag values and their display names\nexport function GetValidationFlags() : Tuple<ValidationFlag, string>[] {\n\tlet result : Tuple<ValidationFlag, string>[] = [];\n\n    \n\tresult.push(new Tuple<ValidationFlag, string>(ValidationFlag.MEDICAL_CERT, 'ValidationFlag.MEDICAL_CERT'))\n\t\n\tresult.push(new Tuple<ValidationFlag, string>(ValidationFlag.PILOT_LICENSE, 'ValidationFlag.PILOT_LICENSE'))\n\t\n\tresult.push(new Tuple<ValidationFlag, string>(ValidationFlag.SINGLE_ENG_CERT, 'ValidationFlag.SINGLE_ENG_CERT'))\n\t\n\tresult.push(new Tuple<ValidationFlag, string>(ValidationFlag.DUAL_ENG_CERT, 'ValidationFlag.DUAL_ENG_CERT'))\n\t\n\tresult.push(new Tuple<ValidationFlag, string>(ValidationFlag.INST_666_CERT, 'ValidationFlag.INST_666_CERT'))\n\t\n\tresult.push(new Tuple<ValidationFlag, string>(ValidationFlag.INST_REC_CERT, 'ValidationFlag.INST_REC_CERT'))\n\t\n\tresult.push(new Tuple<ValidationFlag, string>(ValidationFlag.DAYTIME_FLY, 'ValidationFlag.DAYTIME_FLY'))\n\t\n\tresult.push(new Tuple<ValidationFlag, string>(ValidationFlag.NIGHTTIME_FLY, 'ValidationFlag.NIGHTTIME_FLY'))\n\t\n\tresult.push(new Tuple<ValidationFlag, string>(ValidationFlag.NIGHT_CVFR_CUR, 'ValidationFlag.NIGHT_CVFR_CUR'))\n\t\n\tresult.push(new Tuple<ValidationFlag, string>(ValidationFlag.ROUTE_EXAM, 'ValidationFlag.ROUTE_EXAM'))\n\t\n\tresult.push(new Tuple<ValidationFlag, string>(ValidationFlag.DI_CERT, 'ValidationFlag.DI_CERT'))\n\t\n\tresult.push(new Tuple<ValidationFlag, string>(ValidationFlag.INTERNATIONAL, 'ValidationFlag.INTERNATIONAL'))\n\t\n\tresult.push(new Tuple<ValidationFlag, string>(ValidationFlag.ENGLISH_PROF, 'ValidationFlag.ENGLISH_PROF'))\n\t\n\tresult.push(new Tuple<ValidationFlag, string>(ValidationFlag.INSTRUCTOR_LICENSE, 'ValidationFlag.INSTRUCTOR_LICENSE'))\n\t\n\tresult.push(new Tuple<ValidationFlag, string>(ValidationFlag.COMPANY_CHECK, 'ValidationFlag.COMPANY_CHECK'))\n\t\n\tresult.push(new Tuple<ValidationFlag, string>(ValidationFlag.COMPANY_EXAMIN, 'ValidationFlag.COMPANY_EXAMIN'))\n\t\n\tresult.push(new Tuple<ValidationFlag, string>(ValidationFlag.COMMERCIAL_172P, 'ValidationFlag.COMMERCIAL_172P'))\n\t\n\tresult.push(new Tuple<ValidationFlag, string>(ValidationFlag.COMMERCIAL_172XP, 'ValidationFlag.COMMERCIAL_172XP'))\n\t\n\tresult.push(new Tuple<ValidationFlag, string>(ValidationFlag.COMMERCIAL_207, 'ValidationFlag.COMMERCIAL_207'))\n\t\n\n    return result;\n}\n\n// Return map of ValidationFlag values and their display names\nexport function MapValidationFlags() : Map<ValidationFlag, string> {\n    let result = new Map<ValidationFlag, string>();\n\n    \n\tresult.set(ValidationFlag.UNDEFINED, 'Undefined');\n\t\n\tresult.set(ValidationFlag.MEDICAL_CERT, 'Medical Cert');\n\t\n\tresult.set(ValidationFlag.PILOT_LICENSE, 'Pilot License');\n\t\n\tresult.set(ValidationFlag.SINGLE_ENG_CERT, 'Single Eng Cert');\n\t\n\tresult.set(ValidationFlag.DUAL_ENG_CERT, 'Dual Eng Cert');\n\t\n\tresult.set(ValidationFlag.INST_666_CERT, 'Inst 666 Cert');\n\t\n\tresult.set(ValidationFlag.INST_REC_CERT, 'Inst Rec Cert');\n\t\n\tresult.set(ValidationFlag.DAYTIME_FLY, 'Daytime Fly');\n\t\n\tresult.set(ValidationFlag.NIGHTTIME_FLY, 'Nighttime Fly');\n\t\n\tresult.set(ValidationFlag.NIGHT_CVFR_CUR, 'Night Cvfr Cur');\n\t\n\tresult.set(ValidationFlag.ROUTE_EXAM, 'Route Exam');\n\t\n\tresult.set(ValidationFlag.DI_CERT, 'Di Cert');\n\t\n\tresult.set(ValidationFlag.INTERNATIONAL, 'International');\n\t\n\tresult.set(ValidationFlag.ENGLISH_PROF, 'English Prof');\n\t\n\tresult.set(ValidationFlag.INSTRUCTOR_LICENSE, 'Instructor License');\n\t\n\tresult.set(ValidationFlag.COMPANY_CHECK, 'Company Check');\n\t\n\tresult.set(ValidationFlag.COMPANY_EXAMIN, 'Company Examin');\n\t\n\tresult.set(ValidationFlag.COMMERCIAL_172P, 'Commercial 172p');\n\t\n\tresult.set(ValidationFlag.COMMERCIAL_172XP, 'Commercial 172xp');\n\t\n\tresult.set(ValidationFlag.COMMERCIAL_207, 'Commercial 207');\n\t\n\n    return result;\n}\n","\nimport { Tuple } from '.';\n\n\n// PaymentMethodCode represents a payment method:  CASH | CHECK | BANK TRANSFER | CREDIT ...\nexport enum PaymentMethodCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // None paid [1] \n    NONE = 1,\n \n    // Credit client balance [2] \n    CREDIT_CLIENT = 2,\n \n    // Paid with credit card [3] \n    CARD = 3,\n \n    // Paid with check [4] \n    CHECK = 4,\n \n    // Paid with cash [5] \n    CASH = 5,\n \n    // Paid with bank transfer [6] \n    BANK = 6,\n \n}\n\n// Return list of PaymentMethodCode values and their display names\nexport function GetPaymentMethodCodes() : Tuple<PaymentMethodCode, string>[] {\n\tlet result : Tuple<PaymentMethodCode, string>[] = [];\n\n    \n\tresult.push(new Tuple<PaymentMethodCode, string>(PaymentMethodCode.NONE, 'PaymentMethodCode.NONE'))\n\t\n\tresult.push(new Tuple<PaymentMethodCode, string>(PaymentMethodCode.CREDIT_CLIENT, 'PaymentMethodCode.CREDIT_CLIENT'))\n\t\n\tresult.push(new Tuple<PaymentMethodCode, string>(PaymentMethodCode.CARD, 'PaymentMethodCode.CARD'))\n\t\n\tresult.push(new Tuple<PaymentMethodCode, string>(PaymentMethodCode.CHECK, 'PaymentMethodCode.CHECK'))\n\t\n\tresult.push(new Tuple<PaymentMethodCode, string>(PaymentMethodCode.CASH, 'PaymentMethodCode.CASH'))\n\t\n\tresult.push(new Tuple<PaymentMethodCode, string>(PaymentMethodCode.BANK, 'PaymentMethodCode.BANK'))\n\t\n\n    return result;\n}\n\n// Return map of PaymentMethodCode values and their display names\nexport function MapPaymentMethodCodes() : Map<PaymentMethodCode, string> {\n    let result = new Map<PaymentMethodCode, string>();\n\n    \n\tresult.set(PaymentMethodCode.UNDEFINED, 'Undefined');\n\t\n\tresult.set(PaymentMethodCode.NONE, 'None');\n\t\n\tresult.set(PaymentMethodCode.CREDIT_CLIENT, 'Credit Client');\n\t\n\tresult.set(PaymentMethodCode.CARD, 'Card');\n\t\n\tresult.set(PaymentMethodCode.CHECK, 'Check');\n\t\n\tresult.set(PaymentMethodCode.CASH, 'Cash');\n\t\n\tresult.set(PaymentMethodCode.BANK, 'Bank');\n\t\n\n    return result;\n}\n","\nimport { Tuple } from '.';\n\n\n// UserStatusCode represents the user status: PENDING | ACTIVE | BLOCKED ...\nexport enum UserStatusCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // User is registered and pending verification [1] \n    PENDING = 1,\n \n    // Active user in the system [2] \n    ACTIVE = 2,\n \n    // Blocked user (only account system can unblock the user) [3] \n    BLOCKED = 3,\n \n    // Suspended user (about to be deleted) [4] \n    SUSPENDED = 4,\n \n}\n\n// Return list of UserStatusCode values and their display names\nexport function GetUserStatusCodes() : Tuple<UserStatusCode, string>[] {\n\tlet result : Tuple<UserStatusCode, string>[] = [];\n\n    \n\tresult.push(new Tuple<UserStatusCode, string>(UserStatusCode.PENDING, 'UserStatusCode.PENDING'))\n\t\n\tresult.push(new Tuple<UserStatusCode, string>(UserStatusCode.ACTIVE, 'UserStatusCode.ACTIVE'))\n\t\n\tresult.push(new Tuple<UserStatusCode, string>(UserStatusCode.BLOCKED, 'UserStatusCode.BLOCKED'))\n\t\n\tresult.push(new Tuple<UserStatusCode, string>(UserStatusCode.SUSPENDED, 'UserStatusCode.SUSPENDED'))\n\t\n\n    return result;\n}\n\n// Return map of UserStatusCode values and their display names\nexport function MapUserStatusCodes() : Map<UserStatusCode, string> {\n    let result = new Map<UserStatusCode, string>();\n\n    \n\tresult.set(UserStatusCode.UNDEFINED, 'Undefined');\n\t\n\tresult.set(UserStatusCode.PENDING, 'Pending');\n\t\n\tresult.set(UserStatusCode.ACTIVE, 'Active');\n\t\n\tresult.set(UserStatusCode.BLOCKED, 'Blocked');\n\t\n\tresult.set(UserStatusCode.SUSPENDED, 'Suspended');\n\t\n\n    return result;\n}\n","\nimport { Tuple } from '.';\n\n\n// AirplaneStatusCode represents the airplane status: ACTIVE | INACTIVE | MAINTENANCE ...\nexport enum AirplaneStatusCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Active airplane [1] \n    ACTIVE = 1,\n \n    // Inactive airplane [2] \n    INACTIVE = 2,\n \n}\n\n// Return list of AirplaneStatusCode values and their display names\nexport function GetAirplaneStatusCodes() : Tuple<AirplaneStatusCode, string>[] {\n\tlet result : Tuple<AirplaneStatusCode, string>[] = [];\n\n    \n\tresult.push(new Tuple<AirplaneStatusCode, string>(AirplaneStatusCode.ACTIVE, 'AirplaneStatusCode.ACTIVE'))\n\t\n\tresult.push(new Tuple<AirplaneStatusCode, string>(AirplaneStatusCode.INACTIVE, 'AirplaneStatusCode.INACTIVE'))\n\t\n\n    return result;\n}\n\n// Return map of AirplaneStatusCode values and their display names\nexport function MapAirplaneStatusCodes() : Map<AirplaneStatusCode, string> {\n    let result = new Map<AirplaneStatusCode, string>();\n\n    \n\tresult.set(AirplaneStatusCode.UNDEFINED, 'Undefined');\n\t\n\tresult.set(AirplaneStatusCode.ACTIVE, 'Active');\n\t\n\tresult.set(AirplaneStatusCode.INACTIVE, 'Inactive');\n\t\n\n    return result;\n}\n","\nimport { Tuple } from '.';\n\n\n// BillingStatusCode represents a flight billing status:  ...\nexport enum BillingStatusCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Unapproved [1] \n    UNAPPROVED = 1,\n \n    // Approved [2] \n    APPROVED = 2,\n \n    // Auto invoice created [3] \n    CREATED_INVOICE = 3,\n \n    // Auto invoice pending [4] \n    PENDING_INVOICE = 4,\n \n    // Manual invoice [5] \n    MANUAL_INVOICE = 5,\n \n    // Closed [6] \n    CLOSED = 6,\n \n    // Credit Client [7] \n    CREDIT = 7,\n \n    // Cancelled invoice [8] \n    CANCELLED = 8,\n \n    // Irrelevant status [9] \n    CANCELLED_BY_CLIENT = 9,\n \n    // Irrelevant status [10] \n    IRRELEVANT = 10,\n \n}\n\n// Return list of BillingStatusCode values and their display names\nexport function GetBillingStatusCodes() : Tuple<BillingStatusCode, string>[] {\n\tlet result : Tuple<BillingStatusCode, string>[] = [];\n\n    \n\tresult.push(new Tuple<BillingStatusCode, string>(BillingStatusCode.UNAPPROVED, 'BillingStatusCode.UNAPPROVED'))\n\t\n\tresult.push(new Tuple<BillingStatusCode, string>(BillingStatusCode.APPROVED, 'BillingStatusCode.APPROVED'))\n\t\n\tresult.push(new Tuple<BillingStatusCode, string>(BillingStatusCode.CREATED_INVOICE, 'BillingStatusCode.CREATED_INVOICE'))\n\t\n\tresult.push(new Tuple<BillingStatusCode, string>(BillingStatusCode.PENDING_INVOICE, 'BillingStatusCode.PENDING_INVOICE'))\n\t\n\tresult.push(new Tuple<BillingStatusCode, string>(BillingStatusCode.MANUAL_INVOICE, 'BillingStatusCode.MANUAL_INVOICE'))\n\t\n\tresult.push(new Tuple<BillingStatusCode, string>(BillingStatusCode.CLOSED, 'BillingStatusCode.CLOSED'))\n\t\n\tresult.push(new Tuple<BillingStatusCode, string>(BillingStatusCode.CREDIT, 'BillingStatusCode.CREDIT'))\n\t\n\tresult.push(new Tuple<BillingStatusCode, string>(BillingStatusCode.CANCELLED, 'BillingStatusCode.CANCELLED'))\n\t\n\tresult.push(new Tuple<BillingStatusCode, string>(BillingStatusCode.CANCELLED_BY_CLIENT, 'BillingStatusCode.CANCELLED_BY_CLIENT'))\n\t\n\tresult.push(new Tuple<BillingStatusCode, string>(BillingStatusCode.IRRELEVANT, 'BillingStatusCode.IRRELEVANT'))\n\t\n\n    return result;\n}\n\n// Return map of BillingStatusCode values and their display names\nexport function MapBillingStatusCodes() : Map<BillingStatusCode, string> {\n    let result = new Map<BillingStatusCode, string>();\n\n    \n\tresult.set(BillingStatusCode.UNDEFINED, 'Undefined');\n\t\n\tresult.set(BillingStatusCode.UNAPPROVED, 'Unapproved');\n\t\n\tresult.set(BillingStatusCode.APPROVED, 'Approved');\n\t\n\tresult.set(BillingStatusCode.CREATED_INVOICE, 'Created Invoice');\n\t\n\tresult.set(BillingStatusCode.PENDING_INVOICE, 'Pending Invoice');\n\t\n\tresult.set(BillingStatusCode.MANUAL_INVOICE, 'Manual Invoice');\n\t\n\tresult.set(BillingStatusCode.CLOSED, 'Closed');\n\t\n\tresult.set(BillingStatusCode.CREDIT, 'Credit');\n\t\n\tresult.set(BillingStatusCode.CANCELLED, 'Cancelled');\n\t\n\tresult.set(BillingStatusCode.CANCELLED_BY_CLIENT, 'Cancelled By Client');\n\t\n\tresult.set(BillingStatusCode.IRRELEVANT, 'Irrelevant');\n\t\n\n    return result;\n}\n","\nimport { Tuple } from '.';\n\n\n// CampaignStatusCode represents the campaign status: PLANNING | ACTIVE | COMPLETED ...\nexport enum CampaignStatusCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Planned campaign [1] \n    PLANNING = 1,\n \n    // Active campaign [2] \n    ACTIVE = 2,\n \n    // `Completed campaign [3] \n    COMPLETED = 3,\n \n    // Suspended (about to be deleted) [4] \n    SUSPENDED = 4,\n \n}\n\n// Return list of CampaignStatusCode values and their display names\nexport function GetCampaignStatusCodes() : Tuple<CampaignStatusCode, string>[] {\n\tlet result : Tuple<CampaignStatusCode, string>[] = [];\n\n    \n\tresult.push(new Tuple<CampaignStatusCode, string>(CampaignStatusCode.PLANNING, 'CampaignStatusCode.PLANNING'))\n\t\n\tresult.push(new Tuple<CampaignStatusCode, string>(CampaignStatusCode.ACTIVE, 'CampaignStatusCode.ACTIVE'))\n\t\n\tresult.push(new Tuple<CampaignStatusCode, string>(CampaignStatusCode.COMPLETED, 'CampaignStatusCode.COMPLETED'))\n\t\n\tresult.push(new Tuple<CampaignStatusCode, string>(CampaignStatusCode.SUSPENDED, 'CampaignStatusCode.SUSPENDED'))\n\t\n\n    return result;\n}\n\n// Return map of CampaignStatusCode values and their display names\nexport function MapCampaignStatusCodes() : Map<CampaignStatusCode, string> {\n    let result = new Map<CampaignStatusCode, string>();\n\n    \n\tresult.set(CampaignStatusCode.UNDEFINED, 'Undefined');\n\t\n\tresult.set(CampaignStatusCode.PLANNING, 'Planning');\n\t\n\tresult.set(CampaignStatusCode.ACTIVE, 'Active');\n\t\n\tresult.set(CampaignStatusCode.COMPLETED, 'Completed');\n\t\n\tresult.set(CampaignStatusCode.SUSPENDED, 'Suspended');\n\t\n\n    return result;\n}\n","\nimport { Tuple } from '.';\n\n\n// CurrencyCode represents the currency: ILS | USD | EUR ...\nexport enum CurrencyCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // ILS [1] \n    ILS = 1,\n \n    // USD [2] \n    USD = 2,\n \n    // EURO [3] \n    EUR = 3,\n \n}\n\n// Return list of CurrencyCode values and their display names\nexport function GetCurrencyCodes() : Tuple<CurrencyCode, string>[] {\n\tlet result : Tuple<CurrencyCode, string>[] = [];\n\n    \n\tresult.push(new Tuple<CurrencyCode, string>(CurrencyCode.ILS, 'CurrencyCode.ILS'))\n\t\n\tresult.push(new Tuple<CurrencyCode, string>(CurrencyCode.USD, 'CurrencyCode.USD'))\n\t\n\tresult.push(new Tuple<CurrencyCode, string>(CurrencyCode.EUR, 'CurrencyCode.EUR'))\n\t\n\n    return result;\n}\n\n// Return map of CurrencyCode values and their display names\nexport function MapCurrencyCodes() : Map<CurrencyCode, string> {\n    let result = new Map<CurrencyCode, string>();\n\n    \n\tresult.set(CurrencyCode.UNDEFINED, 'Undefined');\n\t\n\tresult.set(CurrencyCode.ILS, 'Ils');\n\t\n\tresult.set(CurrencyCode.USD, 'Usd');\n\t\n\tresult.set(CurrencyCode.EUR, 'Eur');\n\t\n\n    return result;\n}\n","\nimport { Tuple } from '.';\n\n\n// FlightPurposeCode represents a flight purpose:  GENERAL | PRIVATE | COMMERCIAL ...\nexport enum FlightPurposeCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Introductory Flight [1] \n    INTRODUCTORY = 1,\n \n    // Flight Lesson [2] \n    FLIGHT_LESSON = 2,\n \n    // Airplane Rental Flight [3] \n    RENTAL = 3,\n \n    // Private Flight [4] \n    PRIVATE = 4,\n \n    // Vertical Photographic [5] \n    VERTICAL_PHOTO = 5,\n \n    // Diagonal Photographic [6] \n    DIAGONAL_PHOTO = 6,\n \n    // Round Flight [7] \n    ROUND = 7,\n \n    // Initial / Recurrent CAA Test [8] \n    CAA_TEST = 8,\n \n    // Transfer Flight (to transfer airplane) [9] \n    TRANSFER = 9,\n \n    // Commercial air taxi to transfer passengers [10] \n    AIR_TAXI = 10,\n \n    // Engine Running [11] \n    ENGINE_RUNNING = 11,\n \n    // Other purpose (elaborate on next field) [12] \n    OTHER = 12,\n \n}\n\n// Return list of FlightPurposeCode values and their display names\nexport function GetFlightPurposeCodes() : Tuple<FlightPurposeCode, string>[] {\n\tlet result : Tuple<FlightPurposeCode, string>[] = [];\n\n    \n\tresult.push(new Tuple<FlightPurposeCode, string>(FlightPurposeCode.INTRODUCTORY, 'FlightPurposeCode.INTRODUCTORY'))\n\t\n\tresult.push(new Tuple<FlightPurposeCode, string>(FlightPurposeCode.FLIGHT_LESSON, 'FlightPurposeCode.FLIGHT_LESSON'))\n\t\n\tresult.push(new Tuple<FlightPurposeCode, string>(FlightPurposeCode.RENTAL, 'FlightPurposeCode.RENTAL'))\n\t\n\tresult.push(new Tuple<FlightPurposeCode, string>(FlightPurposeCode.PRIVATE, 'FlightPurposeCode.PRIVATE'))\n\t\n\tresult.push(new Tuple<FlightPurposeCode, string>(FlightPurposeCode.VERTICAL_PHOTO, 'FlightPurposeCode.VERTICAL_PHOTO'))\n\t\n\tresult.push(new Tuple<FlightPurposeCode, string>(FlightPurposeCode.DIAGONAL_PHOTO, 'FlightPurposeCode.DIAGONAL_PHOTO'))\n\t\n\tresult.push(new Tuple<FlightPurposeCode, string>(FlightPurposeCode.ROUND, 'FlightPurposeCode.ROUND'))\n\t\n\tresult.push(new Tuple<FlightPurposeCode, string>(FlightPurposeCode.CAA_TEST, 'FlightPurposeCode.CAA_TEST'))\n\t\n\tresult.push(new Tuple<FlightPurposeCode, string>(FlightPurposeCode.TRANSFER, 'FlightPurposeCode.TRANSFER'))\n\t\n\tresult.push(new Tuple<FlightPurposeCode, string>(FlightPurposeCode.AIR_TAXI, 'FlightPurposeCode.AIR_TAXI'))\n\t\n\tresult.push(new Tuple<FlightPurposeCode, string>(FlightPurposeCode.ENGINE_RUNNING, 'FlightPurposeCode.ENGINE_RUNNING'))\n\t\n\tresult.push(new Tuple<FlightPurposeCode, string>(FlightPurposeCode.OTHER, 'FlightPurposeCode.OTHER'))\n\t\n\n    return result;\n}\n\n// Return map of FlightPurposeCode values and their display names\nexport function MapFlightPurposeCodes() : Map<FlightPurposeCode, string> {\n    let result = new Map<FlightPurposeCode, string>();\n\n    \n\tresult.set(FlightPurposeCode.UNDEFINED, 'Undefined');\n\t\n\tresult.set(FlightPurposeCode.INTRODUCTORY, 'Introductory');\n\t\n\tresult.set(FlightPurposeCode.FLIGHT_LESSON, 'Flight Lesson');\n\t\n\tresult.set(FlightPurposeCode.RENTAL, 'Rental');\n\t\n\tresult.set(FlightPurposeCode.PRIVATE, 'Private');\n\t\n\tresult.set(FlightPurposeCode.VERTICAL_PHOTO, 'Vertical Photo');\n\t\n\tresult.set(FlightPurposeCode.DIAGONAL_PHOTO, 'Diagonal Photo');\n\t\n\tresult.set(FlightPurposeCode.ROUND, 'Round');\n\t\n\tresult.set(FlightPurposeCode.CAA_TEST, 'Caa Test');\n\t\n\tresult.set(FlightPurposeCode.TRANSFER, 'Transfer');\n\t\n\tresult.set(FlightPurposeCode.AIR_TAXI, 'Air Taxi');\n\t\n\tresult.set(FlightPurposeCode.ENGINE_RUNNING, 'Engine Running');\n\t\n\tresult.set(FlightPurposeCode.OTHER, 'Other');\n\t\n\n    return result;\n}\n","\nimport { Tuple } from '.';\n\n\n// MessageTypeCode represents the message type: ALERT | INFO | POLICY\nexport enum MessageTypeCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Company information [1] \n    INFO = 1,\n \n    // Memorandum [2] \n    MEMO = 2,\n \n    // Distribution and Reissue procedures [3] \n    EXTERNAL_PROCEDURE = 3,\n \n    // Internal procedures [4] \n    INTERNAL_PROCEDURE = 4,\n \n    // Incident_OR_Hazard Report_Low_Human_Mitigation required [5] \n    INCIDENT = 5,\n \n    // Policy and Procedural Changes [6] \n    POLICY = 6,\n \n    // Repair Stations Audit_IANR_OPS 344_2 [7] \n    REPAIR = 7,\n \n}\n\n// Return list of MessageTypeCode values and their display names\nexport function GetMessageTypeCodes() : Tuple<MessageTypeCode, string>[] {\n\tlet result : Tuple<MessageTypeCode, string>[] = [];\n\n    \n\tresult.push(new Tuple<MessageTypeCode, string>(MessageTypeCode.INFO, 'MessageTypeCode.INFO'))\n\t\n\tresult.push(new Tuple<MessageTypeCode, string>(MessageTypeCode.MEMO, 'MessageTypeCode.MEMO'))\n\t\n\tresult.push(new Tuple<MessageTypeCode, string>(MessageTypeCode.EXTERNAL_PROCEDURE, 'MessageTypeCode.EXTERNAL_PROCEDURE'))\n\t\n\tresult.push(new Tuple<MessageTypeCode, string>(MessageTypeCode.INTERNAL_PROCEDURE, 'MessageTypeCode.INTERNAL_PROCEDURE'))\n\t\n\tresult.push(new Tuple<MessageTypeCode, string>(MessageTypeCode.INCIDENT, 'MessageTypeCode.INCIDENT'))\n\t\n\tresult.push(new Tuple<MessageTypeCode, string>(MessageTypeCode.POLICY, 'MessageTypeCode.POLICY'))\n\t\n\tresult.push(new Tuple<MessageTypeCode, string>(MessageTypeCode.REPAIR, 'MessageTypeCode.REPAIR'))\n\t\n\n    return result;\n}\n\n// Return map of MessageTypeCode values and their display names\nexport function MapMessageTypeCodes() : Map<MessageTypeCode, string> {\n    let result = new Map<MessageTypeCode, string>();\n\n    \n\tresult.set(MessageTypeCode.UNDEFINED, 'Undefined');\n\t\n\tresult.set(MessageTypeCode.INFO, 'Info');\n\t\n\tresult.set(MessageTypeCode.MEMO, 'Memo');\n\t\n\tresult.set(MessageTypeCode.EXTERNAL_PROCEDURE, 'External Procedure');\n\t\n\tresult.set(MessageTypeCode.INTERNAL_PROCEDURE, 'Internal Procedure');\n\t\n\tresult.set(MessageTypeCode.INCIDENT, 'Incident');\n\t\n\tresult.set(MessageTypeCode.POLICY, 'Policy');\n\t\n\tresult.set(MessageTypeCode.REPAIR, 'Repair');\n\t\n\n    return result;\n}\n","\nimport { Tuple } from '.';\n\n\n// UserTypeCode represents the user type: SYSADMIN | SUPPORT | USER ...\nexport enum UserTypeCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // System administrator has access to all accounts and permissions to perform all actions [1] \n    SYSADMIN = 1,\n \n    // Support user has view permissions only for all accounts that enabled option Enable Support [2] \n    SUPPORT = 2,\n \n    // Account user - has access to specific accounts with role based access control [3] \n    USER = 3,\n \n    // Service Account - to be used by other systems to perform actions using the API (can't login as a user to the portal) [4] \n    SERVICE = 4,\n \n}\n\n// Return list of UserTypeCode values and their display names\nexport function GetUserTypeCodes() : Tuple<UserTypeCode, string>[] {\n\tlet result : Tuple<UserTypeCode, string>[] = [];\n\n    \n\tresult.push(new Tuple<UserTypeCode, string>(UserTypeCode.SYSADMIN, 'UserTypeCode.SYSADMIN'))\n\t\n\tresult.push(new Tuple<UserTypeCode, string>(UserTypeCode.SUPPORT, 'UserTypeCode.SUPPORT'))\n\t\n\tresult.push(new Tuple<UserTypeCode, string>(UserTypeCode.USER, 'UserTypeCode.USER'))\n\t\n\tresult.push(new Tuple<UserTypeCode, string>(UserTypeCode.SERVICE, 'UserTypeCode.SERVICE'))\n\t\n\n    return result;\n}\n\n// Return map of UserTypeCode values and their display names\nexport function MapUserTypeCodes() : Map<UserTypeCode, string> {\n    let result = new Map<UserTypeCode, string>();\n\n    \n\tresult.set(UserTypeCode.UNDEFINED, 'Undefined');\n\t\n\tresult.set(UserTypeCode.SYSADMIN, 'Sysadmin');\n\t\n\tresult.set(UserTypeCode.SUPPORT, 'Support');\n\t\n\tresult.set(UserTypeCode.USER, 'User');\n\t\n\tresult.set(UserTypeCode.SERVICE, 'Service');\n\t\n\n    return result;\n}\n","\nimport { Tuple } from '.';\n\n\n// TransactionTypeCode represents the credit transaction type\nexport enum TransactionTypeCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Payment for Flight auto charged by the system (Debit) - Auto calculated from flight diary [1] \n    FLIGHT = 1,\n \n    // Payment for Instruction (Debit) [2] \n    INSTRUCTION = 2,\n \n    // Payment for Purchasing a Product / Service (Debit) [3] \n    PURCHASE = 3,\n \n    // Credit from client (Credit) [4] \n    PAYMENT = 4,\n \n    // Bonus added to client (Credit) [5] \n    BONUS = 5,\n \n    // Refund for client (Credit) [6] \n    REFUND = 6,\n \n}\n\n// Return list of TransactionTypeCode values and their display names\nexport function GetTransactionTypeCodes() : Tuple<TransactionTypeCode, string>[] {\n\tlet result : Tuple<TransactionTypeCode, string>[] = [];\n\n    \n\tresult.push(new Tuple<TransactionTypeCode, string>(TransactionTypeCode.FLIGHT, 'TransactionTypeCode.FLIGHT'))\n\t\n\tresult.push(new Tuple<TransactionTypeCode, string>(TransactionTypeCode.INSTRUCTION, 'TransactionTypeCode.INSTRUCTION'))\n\t\n\tresult.push(new Tuple<TransactionTypeCode, string>(TransactionTypeCode.PURCHASE, 'TransactionTypeCode.PURCHASE'))\n\t\n\tresult.push(new Tuple<TransactionTypeCode, string>(TransactionTypeCode.PAYMENT, 'TransactionTypeCode.PAYMENT'))\n\t\n\tresult.push(new Tuple<TransactionTypeCode, string>(TransactionTypeCode.BONUS, 'TransactionTypeCode.BONUS'))\n\t\n\tresult.push(new Tuple<TransactionTypeCode, string>(TransactionTypeCode.REFUND, 'TransactionTypeCode.REFUND'))\n\t\n\n    return result;\n}\n\n// Return map of TransactionTypeCode values and their display names\nexport function MapTransactionTypeCodes() : Map<TransactionTypeCode, string> {\n    let result = new Map<TransactionTypeCode, string>();\n\n    \n\tresult.set(TransactionTypeCode.UNDEFINED, 'Undefined');\n\t\n\tresult.set(TransactionTypeCode.FLIGHT, 'Flight');\n\t\n\tresult.set(TransactionTypeCode.INSTRUCTION, 'Instruction');\n\t\n\tresult.set(TransactionTypeCode.PURCHASE, 'Purchase');\n\t\n\tresult.set(TransactionTypeCode.PAYMENT, 'Payment');\n\t\n\tresult.set(TransactionTypeCode.BONUS, 'Bonus');\n\t\n\tresult.set(TransactionTypeCode.REFUND, 'Refund');\n\t\n\n    return result;\n}\n","\nimport { Tuple } from '.';\n\n\n// AssessmentCode represents the assessment score: EXCELLENT | SATISFACTORY | INCOMPLETE ...\nexport enum AssessmentCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Excellent [1] \n    EXCELLENT = 1,\n \n    // Satisfactory [2] \n    SATISFACTORY = 2,\n \n    // Below Average [3] \n    BELOW_AVERAGE = 3,\n \n    // Unsatisfactory [4] \n    UNSATISFACTORY = 4,\n \n    // Incomplete [5] \n    INCOMPLETE = 5,\n \n    // Repeat exercise is required [6] \n    REPEAT = 6,\n \n    // Demonstration only [7] \n    DEMO = 7,\n \n}\n\n// Return list of AssessmentCode values and their display names\nexport function GetAssessmentCodes() : Tuple<AssessmentCode, string>[] {\n\tlet result : Tuple<AssessmentCode, string>[] = [];\n\n    \n\tresult.push(new Tuple<AssessmentCode, string>(AssessmentCode.EXCELLENT, 'AssessmentCode.EXCELLENT'))\n\t\n\tresult.push(new Tuple<AssessmentCode, string>(AssessmentCode.SATISFACTORY, 'AssessmentCode.SATISFACTORY'))\n\t\n\tresult.push(new Tuple<AssessmentCode, string>(AssessmentCode.BELOW_AVERAGE, 'AssessmentCode.BELOW_AVERAGE'))\n\t\n\tresult.push(new Tuple<AssessmentCode, string>(AssessmentCode.UNSATISFACTORY, 'AssessmentCode.UNSATISFACTORY'))\n\t\n\tresult.push(new Tuple<AssessmentCode, string>(AssessmentCode.INCOMPLETE, 'AssessmentCode.INCOMPLETE'))\n\t\n\tresult.push(new Tuple<AssessmentCode, string>(AssessmentCode.REPEAT, 'AssessmentCode.REPEAT'))\n\t\n\tresult.push(new Tuple<AssessmentCode, string>(AssessmentCode.DEMO, 'AssessmentCode.DEMO'))\n\t\n\n    return result;\n}\n\n// Return map of AssessmentCode values and their display names\nexport function MapAssessmentCodes() : Map<AssessmentCode, string> {\n    let result = new Map<AssessmentCode, string>();\n\n    \n\tresult.set(AssessmentCode.UNDEFINED, 'Undefined');\n\t\n\tresult.set(AssessmentCode.EXCELLENT, 'Excellent');\n\t\n\tresult.set(AssessmentCode.SATISFACTORY, 'Satisfactory');\n\t\n\tresult.set(AssessmentCode.BELOW_AVERAGE, 'Below Average');\n\t\n\tresult.set(AssessmentCode.UNSATISFACTORY, 'Unsatisfactory');\n\t\n\tresult.set(AssessmentCode.INCOMPLETE, 'Incomplete');\n\t\n\tresult.set(AssessmentCode.REPEAT, 'Repeat');\n\t\n\tresult.set(AssessmentCode.DEMO, 'Demo');\n\t\n\n    return result;\n}\n","\nimport { Tuple } from '.';\n\n\n// FlightStateCode represents a flight state which can't be modified manually: PENDING | ACTIVE | COMPLETED  ...\nexport enum FlightStateCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Pending (Not started) [1] \n    PENDING = 1,\n \n    // Active (on flight) [2] \n    ACTIVE = 2,\n \n    // Completed [3] \n    COMPLETED = 3,\n \n}\n\n// Return list of FlightStateCode values and their display names\nexport function GetFlightStateCodes() : Tuple<FlightStateCode, string>[] {\n\tlet result : Tuple<FlightStateCode, string>[] = [];\n\n    \n\tresult.push(new Tuple<FlightStateCode, string>(FlightStateCode.PENDING, 'FlightStateCode.PENDING'))\n\t\n\tresult.push(new Tuple<FlightStateCode, string>(FlightStateCode.ACTIVE, 'FlightStateCode.ACTIVE'))\n\t\n\tresult.push(new Tuple<FlightStateCode, string>(FlightStateCode.COMPLETED, 'FlightStateCode.COMPLETED'))\n\t\n\n    return result;\n}\n\n// Return map of FlightStateCode values and their display names\nexport function MapFlightStateCodes() : Map<FlightStateCode, string> {\n    let result = new Map<FlightStateCode, string>();\n\n    \n\tresult.set(FlightStateCode.UNDEFINED, 'Undefined');\n\t\n\tresult.set(FlightStateCode.PENDING, 'Pending');\n\t\n\tresult.set(FlightStateCode.ACTIVE, 'Active');\n\t\n\tresult.set(FlightStateCode.COMPLETED, 'Completed');\n\t\n\n    return result;\n}\n","\nimport { Tuple } from '.';\n\n\n// FlightStatusCode represents a flight status can be changed by the operator:  ...\nexport enum FlightStatusCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Registered flight [1] \n    REGISTERED = 1,\n \n    // Pending deletion [2] \n    DELETE = 2,\n \n    // Cancelled by Aya [3] \n    CANCELLED = 3,\n \n    // Aborted - cancelled by client [4] \n    ABORTED = 4,\n \n}\n\n// Return list of FlightStatusCode values and their display names\nexport function GetFlightStatusCodes() : Tuple<FlightStatusCode, string>[] {\n\tlet result : Tuple<FlightStatusCode, string>[] = [];\n\n    \n\tresult.push(new Tuple<FlightStatusCode, string>(FlightStatusCode.REGISTERED, 'FlightStatusCode.REGISTERED'))\n\t\n\tresult.push(new Tuple<FlightStatusCode, string>(FlightStatusCode.DELETE, 'FlightStatusCode.DELETE'))\n\t\n\tresult.push(new Tuple<FlightStatusCode, string>(FlightStatusCode.CANCELLED, 'FlightStatusCode.CANCELLED'))\n\t\n\tresult.push(new Tuple<FlightStatusCode, string>(FlightStatusCode.ABORTED, 'FlightStatusCode.ABORTED'))\n\t\n\n    return result;\n}\n\n// Return map of FlightStatusCode values and their display names\nexport function MapFlightStatusCodes() : Map<FlightStatusCode, string> {\n    let result = new Map<FlightStatusCode, string>();\n\n    \n\tresult.set(FlightStatusCode.UNDEFINED, 'Undefined');\n\t\n\tresult.set(FlightStatusCode.REGISTERED, 'Registered');\n\t\n\tresult.set(FlightStatusCode.DELETE, 'Delete');\n\t\n\tresult.set(FlightStatusCode.CANCELLED, 'Cancelled');\n\t\n\tresult.set(FlightStatusCode.ABORTED, 'Aborted');\n\t\n\n    return result;\n}\n","\nimport { Tuple } from '.';\n\n\n// LeadStatusCode represents the lead status: NEW | INPROCESS | ASSIGNED ...\nexport enum LeadStatusCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // New Lead [1] \n    NEW = 1,\n \n    // Lead in process [2] \n    INPROCESS = 2,\n \n    // Lead assigned [3] \n    ASSIGNED = 3,\n \n    // Lead converted [4] \n    CONVERTED = 4,\n \n    // Lead irrelevant [5] \n    IRRELEVANT = 5,\n \n    // Lead redirected [6] \n    REDIRECTED = 6,\n \n    // Lead recycled [7] \n    RECYCLED = 7,\n \n    // Lead is no longer exists [8] \n    DEAD = 8,\n \n}\n\n// Return list of LeadStatusCode values and their display names\nexport function GetLeadStatusCodes() : Tuple<LeadStatusCode, string>[] {\n\tlet result : Tuple<LeadStatusCode, string>[] = [];\n\n    \n\tresult.push(new Tuple<LeadStatusCode, string>(LeadStatusCode.NEW, 'LeadStatusCode.NEW'))\n\t\n\tresult.push(new Tuple<LeadStatusCode, string>(LeadStatusCode.INPROCESS, 'LeadStatusCode.INPROCESS'))\n\t\n\tresult.push(new Tuple<LeadStatusCode, string>(LeadStatusCode.ASSIGNED, 'LeadStatusCode.ASSIGNED'))\n\t\n\tresult.push(new Tuple<LeadStatusCode, string>(LeadStatusCode.CONVERTED, 'LeadStatusCode.CONVERTED'))\n\t\n\tresult.push(new Tuple<LeadStatusCode, string>(LeadStatusCode.IRRELEVANT, 'LeadStatusCode.IRRELEVANT'))\n\t\n\tresult.push(new Tuple<LeadStatusCode, string>(LeadStatusCode.REDIRECTED, 'LeadStatusCode.REDIRECTED'))\n\t\n\tresult.push(new Tuple<LeadStatusCode, string>(LeadStatusCode.RECYCLED, 'LeadStatusCode.RECYCLED'))\n\t\n\tresult.push(new Tuple<LeadStatusCode, string>(LeadStatusCode.DEAD, 'LeadStatusCode.DEAD'))\n\t\n\n    return result;\n}\n\n// Return map of LeadStatusCode values and their display names\nexport function MapLeadStatusCodes() : Map<LeadStatusCode, string> {\n    let result = new Map<LeadStatusCode, string>();\n\n    \n\tresult.set(LeadStatusCode.UNDEFINED, 'Undefined');\n\t\n\tresult.set(LeadStatusCode.NEW, 'New');\n\t\n\tresult.set(LeadStatusCode.INPROCESS, 'Inprocess');\n\t\n\tresult.set(LeadStatusCode.ASSIGNED, 'Assigned');\n\t\n\tresult.set(LeadStatusCode.CONVERTED, 'Converted');\n\t\n\tresult.set(LeadStatusCode.IRRELEVANT, 'Irrelevant');\n\t\n\tresult.set(LeadStatusCode.REDIRECTED, 'Redirected');\n\t\n\tresult.set(LeadStatusCode.RECYCLED, 'Recycled');\n\t\n\tresult.set(LeadStatusCode.DEAD, 'Dead');\n\t\n\n    return result;\n}\n","\nimport { Tuple } from '.';\n\n\n// MaintenanceActionCode represents a maintenance action\nexport enum MaintenanceActionCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // No action required [1] \n    NONE = 1,\n \n    // Inspection action [2] \n    INSPECTION = 2,\n \n    // Overhaul action [3] \n    OVERHAUL = 3,\n \n    // Reissue certificate [4] \n    REISSUE = 4,\n \n    // Replace component [5] \n    REPLACEMENT = 5,\n \n    // Weight action [6] \n    WEIGHT = 6,\n \n}\n\n// Return list of MaintenanceActionCode values and their display names\nexport function GetMaintenanceActionCodes() : Tuple<MaintenanceActionCode, string>[] {\n\tlet result : Tuple<MaintenanceActionCode, string>[] = [];\n\n    \n\tresult.push(new Tuple<MaintenanceActionCode, string>(MaintenanceActionCode.NONE, 'MaintenanceActionCode.NONE'))\n\t\n\tresult.push(new Tuple<MaintenanceActionCode, string>(MaintenanceActionCode.INSPECTION, 'MaintenanceActionCode.INSPECTION'))\n\t\n\tresult.push(new Tuple<MaintenanceActionCode, string>(MaintenanceActionCode.OVERHAUL, 'MaintenanceActionCode.OVERHAUL'))\n\t\n\tresult.push(new Tuple<MaintenanceActionCode, string>(MaintenanceActionCode.REISSUE, 'MaintenanceActionCode.REISSUE'))\n\t\n\tresult.push(new Tuple<MaintenanceActionCode, string>(MaintenanceActionCode.REPLACEMENT, 'MaintenanceActionCode.REPLACEMENT'))\n\t\n\tresult.push(new Tuple<MaintenanceActionCode, string>(MaintenanceActionCode.WEIGHT, 'MaintenanceActionCode.WEIGHT'))\n\t\n\n    return result;\n}\n\n// Return map of MaintenanceActionCode values and their display names\nexport function MapMaintenanceActionCodes() : Map<MaintenanceActionCode, string> {\n    let result = new Map<MaintenanceActionCode, string>();\n\n    \n\tresult.set(MaintenanceActionCode.UNDEFINED, 'Undefined');\n\t\n\tresult.set(MaintenanceActionCode.NONE, 'None');\n\t\n\tresult.set(MaintenanceActionCode.INSPECTION, 'Inspection');\n\t\n\tresult.set(MaintenanceActionCode.OVERHAUL, 'Overhaul');\n\t\n\tresult.set(MaintenanceActionCode.REISSUE, 'Reissue');\n\t\n\tresult.set(MaintenanceActionCode.REPLACEMENT, 'Replacement');\n\t\n\tresult.set(MaintenanceActionCode.WEIGHT, 'Weight');\n\t\n\n    return result;\n}\n","\nimport { Tuple } from '.';\n\n\n// StatusCode represents a general workflow status: PENDING | IN_PROGRESS | DONE ...\nexport enum StatusCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Flow not started yet [1] \n    PENDING = 1,\n \n    // Flow in process [2] \n    IN_PROCESS = 2,\n \n    // Flow completed [3] \n    COMPLETED = 3,\n \n    // Flow cancelled by user [4] \n    CANCELLED = 4,\n \n    // Flow automatically cancelled by the system [5] \n    AUTO_CANCELLED = 5,\n \n}\n\n// Return list of StatusCode values and their display names\nexport function GetStatusCodes() : Tuple<StatusCode, string>[] {\n\tlet result : Tuple<StatusCode, string>[] = [];\n\n    \n\tresult.push(new Tuple<StatusCode, string>(StatusCode.PENDING, 'StatusCode.PENDING'))\n\t\n\tresult.push(new Tuple<StatusCode, string>(StatusCode.IN_PROCESS, 'StatusCode.IN_PROCESS'))\n\t\n\tresult.push(new Tuple<StatusCode, string>(StatusCode.COMPLETED, 'StatusCode.COMPLETED'))\n\t\n\tresult.push(new Tuple<StatusCode, string>(StatusCode.CANCELLED, 'StatusCode.CANCELLED'))\n\t\n\tresult.push(new Tuple<StatusCode, string>(StatusCode.AUTO_CANCELLED, 'StatusCode.AUTO_CANCELLED'))\n\t\n\n    return result;\n}\n\n// Return map of StatusCode values and their display names\nexport function MapStatusCodes() : Map<StatusCode, string> {\n    let result = new Map<StatusCode, string>();\n\n    \n\tresult.set(StatusCode.UNDEFINED, 'Undefined');\n\t\n\tresult.set(StatusCode.PENDING, 'Pending');\n\t\n\tresult.set(StatusCode.IN_PROCESS, 'In Process');\n\t\n\tresult.set(StatusCode.COMPLETED, 'Completed');\n\t\n\tresult.set(StatusCode.CANCELLED, 'Cancelled');\n\t\n\tresult.set(StatusCode.AUTO_CANCELLED, 'Auto Cancelled');\n\t\n\n    return result;\n}\n","\nimport { Tuple } from '.';\n\n\n// AccountStatusCode represents the account status: ACTIVE | INACTIVE | BLOCKED ...\nexport enum AccountStatusCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Active account in the system [1] \n    ACTIVE = 1,\n \n    // Inactive account in the system [2] \n    INACTIVE = 2,\n \n    // Blocked account [3] \n    BLOCKED = 3,\n \n    // Suspended account (about to be deleted) [4] \n    SUSPENDED = 4,\n \n}\n\n// Return list of AccountStatusCode values and their display names\nexport function GetAccountStatusCodes() : Tuple<AccountStatusCode, string>[] {\n\tlet result : Tuple<AccountStatusCode, string>[] = [];\n\n    \n\tresult.push(new Tuple<AccountStatusCode, string>(AccountStatusCode.ACTIVE, 'AccountStatusCode.ACTIVE'))\n\t\n\tresult.push(new Tuple<AccountStatusCode, string>(AccountStatusCode.INACTIVE, 'AccountStatusCode.INACTIVE'))\n\t\n\tresult.push(new Tuple<AccountStatusCode, string>(AccountStatusCode.BLOCKED, 'AccountStatusCode.BLOCKED'))\n\t\n\tresult.push(new Tuple<AccountStatusCode, string>(AccountStatusCode.SUSPENDED, 'AccountStatusCode.SUSPENDED'))\n\t\n\n    return result;\n}\n\n// Return map of AccountStatusCode values and their display names\nexport function MapAccountStatusCodes() : Map<AccountStatusCode, string> {\n    let result = new Map<AccountStatusCode, string>();\n\n    \n\tresult.set(AccountStatusCode.UNDEFINED, 'Undefined');\n\t\n\tresult.set(AccountStatusCode.ACTIVE, 'Active');\n\t\n\tresult.set(AccountStatusCode.INACTIVE, 'Inactive');\n\t\n\tresult.set(AccountStatusCode.BLOCKED, 'Blocked');\n\t\n\tresult.set(AccountStatusCode.SUSPENDED, 'Suspended');\n\t\n\n    return result;\n}\n","\nimport { Tuple } from '.';\n\n\n// AirplaneValidationFlag represents combination of airplane validations\nexport enum AirplaneValidationFlag {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Valid airworthiness (isairplanevalidairworthiness_c) [1] \n    AIRWORTHINESS = 1,\n \n    // Valid airplane insurance (isairplanevalidinsurance_c)  [2] \n    INSURANCE = 2,\n \n    // Valid flight manual (isairplanevalidflightmanual_c) [4] \n    FLIGHT_MANUAL = 4,\n \n    // Valid radio station license (isairplanevalidradiostation_c) [8] \n    RADIO_STATION = 8,\n \n    // Certification Of Registration (isairplanevalidcertofregis_c)[16] \n    REGISTRATION_CERT = 16,\n \n    // Valid first-aid kit (isairplanevalidfirstaidkit_c) [32] \n    FIRST_AID_KIT = 32,\n \n    // Valid fire extinguisher (isairplanevalidfireextinguis_c) [64] \n    FIRE_EXTINGUISHER = 64,\n \n    // Valid operation spec (isairplanevalidoperationspec_c) [128] \n    OPERATION_SPEC = 128,\n \n    // Valid 337 certificate for camera hole (isairplanevalid337cameraho_c) [256] \n    VALID_337_CAMERA = 256,\n \n    // Valid 337 certificate for exhaust (isairplanevalid337exhaust_c) [512] \n    VALID_337_EXHAUST = 512,\n \n    // Valid stc camera hole (isairplanevalidstccameraho_c) [1024] \n    VALID_STC_CAMERA = 1024,\n \n    // Valid stc certificate for exhaust (isairplanevalidstcexhaust_c) [2048] \n    VALID_STC_EXHAUST = 2048,\n \n    // Valid flight logbook (isairplanevalidflightlogboo_c) [4096] \n    FLIGHT_LOGBOOK = 4096,\n \n    // Valid air operator certificate AOC (isairplanevalidairoperatorce_c) [8192] \n    AIR_OPERATOR = 8192,\n \n    // Aircraft weight certificate (isairplanevalidaircraftweigh_c) [16384] \n    AIRCRAFT_WEIGHT = 16384,\n \n    // Valid propeller overhaul (isairplanevalidpropellerover_c) [32768] \n    PROPELLER_OVERHAUL = 32768,\n \n    // Single engine overhaul (isairplanevalidsingleengineo_c) [65536] \n    SINGLE_ENGINE_OVERHAUL = 65536,\n \n    // Left engine overhaul (isairplanevalidleftengineove_c) [131072] \n    LEFT_ENGINE_OVERHAUL = 131072,\n \n    // Right engine overhaul (isairplanevalidrightengineov_c) [262144] \n    RIGHT_ENGINE_OVERHAUL = 262144,\n \n    // Left engine propeller overhaul (isairplanevalidleftenginepro_c) [524288] \n    LEFT_PROPELLER_OVERHAUL = 524288,\n \n    // Right engine propeller overhaul (isairplanevalidrightenginepr_c) [1048576] \n    RIGHT_PROPELLER_OVERHAUL = 1048576,\n \n    // CVFR_ATS aeronautical maps (isairplanevalidcvfr_atsaeron_c) [2097152] \n    CVFR_ATS = 2097152,\n \n    // Weight and Balance Form (isairplanevalidweightandbaln_c) [4194304] \n    WEIGHT_BALANCE_FORM = 4194304,\n \n    // Airplane checklist (isairplanevalidairplanechec_c) [8388608] \n    CHECK_LIST = 8388608,\n \n    // Noise Certificate (isairplanevalidnoisecertifi_c) [16777216] \n    NOISE_CERT = 16777216,\n \n}\n\n// Return list of AirplaneValidationFlag values and their display names\nexport function GetAirplaneValidationFlags() : Tuple<AirplaneValidationFlag, string>[] {\n\tlet result : Tuple<AirplaneValidationFlag, string>[] = [];\n\n    \n\tresult.push(new Tuple<AirplaneValidationFlag, string>(AirplaneValidationFlag.AIRWORTHINESS, 'AirplaneValidationFlag.AIRWORTHINESS'))\n\t\n\tresult.push(new Tuple<AirplaneValidationFlag, string>(AirplaneValidationFlag.INSURANCE, 'AirplaneValidationFlag.INSURANCE'))\n\t\n\tresult.push(new Tuple<AirplaneValidationFlag, string>(AirplaneValidationFlag.FLIGHT_MANUAL, 'AirplaneValidationFlag.FLIGHT_MANUAL'))\n\t\n\tresult.push(new Tuple<AirplaneValidationFlag, string>(AirplaneValidationFlag.RADIO_STATION, 'AirplaneValidationFlag.RADIO_STATION'))\n\t\n\tresult.push(new Tuple<AirplaneValidationFlag, string>(AirplaneValidationFlag.REGISTRATION_CERT, 'AirplaneValidationFlag.REGISTRATION_CERT'))\n\t\n\tresult.push(new Tuple<AirplaneValidationFlag, string>(AirplaneValidationFlag.FIRST_AID_KIT, 'AirplaneValidationFlag.FIRST_AID_KIT'))\n\t\n\tresult.push(new Tuple<AirplaneValidationFlag, string>(AirplaneValidationFlag.FIRE_EXTINGUISHER, 'AirplaneValidationFlag.FIRE_EXTINGUISHER'))\n\t\n\tresult.push(new Tuple<AirplaneValidationFlag, string>(AirplaneValidationFlag.OPERATION_SPEC, 'AirplaneValidationFlag.OPERATION_SPEC'))\n\t\n\tresult.push(new Tuple<AirplaneValidationFlag, string>(AirplaneValidationFlag.VALID_337_CAMERA, 'AirplaneValidationFlag.VALID_337_CAMERA'))\n\t\n\tresult.push(new Tuple<AirplaneValidationFlag, string>(AirplaneValidationFlag.VALID_337_EXHAUST, 'AirplaneValidationFlag.VALID_337_EXHAUST'))\n\t\n\tresult.push(new Tuple<AirplaneValidationFlag, string>(AirplaneValidationFlag.VALID_STC_CAMERA, 'AirplaneValidationFlag.VALID_STC_CAMERA'))\n\t\n\tresult.push(new Tuple<AirplaneValidationFlag, string>(AirplaneValidationFlag.VALID_STC_EXHAUST, 'AirplaneValidationFlag.VALID_STC_EXHAUST'))\n\t\n\tresult.push(new Tuple<AirplaneValidationFlag, string>(AirplaneValidationFlag.FLIGHT_LOGBOOK, 'AirplaneValidationFlag.FLIGHT_LOGBOOK'))\n\t\n\tresult.push(new Tuple<AirplaneValidationFlag, string>(AirplaneValidationFlag.AIR_OPERATOR, 'AirplaneValidationFlag.AIR_OPERATOR'))\n\t\n\tresult.push(new Tuple<AirplaneValidationFlag, string>(AirplaneValidationFlag.AIRCRAFT_WEIGHT, 'AirplaneValidationFlag.AIRCRAFT_WEIGHT'))\n\t\n\tresult.push(new Tuple<AirplaneValidationFlag, string>(AirplaneValidationFlag.PROPELLER_OVERHAUL, 'AirplaneValidationFlag.PROPELLER_OVERHAUL'))\n\t\n\tresult.push(new Tuple<AirplaneValidationFlag, string>(AirplaneValidationFlag.SINGLE_ENGINE_OVERHAUL, 'AirplaneValidationFlag.SINGLE_ENGINE_OVERHAUL'))\n\t\n\tresult.push(new Tuple<AirplaneValidationFlag, string>(AirplaneValidationFlag.LEFT_ENGINE_OVERHAUL, 'AirplaneValidationFlag.LEFT_ENGINE_OVERHAUL'))\n\t\n\tresult.push(new Tuple<AirplaneValidationFlag, string>(AirplaneValidationFlag.RIGHT_ENGINE_OVERHAUL, 'AirplaneValidationFlag.RIGHT_ENGINE_OVERHAUL'))\n\t\n\tresult.push(new Tuple<AirplaneValidationFlag, string>(AirplaneValidationFlag.LEFT_PROPELLER_OVERHAUL, 'AirplaneValidationFlag.LEFT_PROPELLER_OVERHAUL'))\n\t\n\tresult.push(new Tuple<AirplaneValidationFlag, string>(AirplaneValidationFlag.RIGHT_PROPELLER_OVERHAUL, 'AirplaneValidationFlag.RIGHT_PROPELLER_OVERHAUL'))\n\t\n\tresult.push(new Tuple<AirplaneValidationFlag, string>(AirplaneValidationFlag.CVFR_ATS, 'AirplaneValidationFlag.CVFR_ATS'))\n\t\n\tresult.push(new Tuple<AirplaneValidationFlag, string>(AirplaneValidationFlag.WEIGHT_BALANCE_FORM, 'AirplaneValidationFlag.WEIGHT_BALANCE_FORM'))\n\t\n\tresult.push(new Tuple<AirplaneValidationFlag, string>(AirplaneValidationFlag.CHECK_LIST, 'AirplaneValidationFlag.CHECK_LIST'))\n\t\n\tresult.push(new Tuple<AirplaneValidationFlag, string>(AirplaneValidationFlag.NOISE_CERT, 'AirplaneValidationFlag.NOISE_CERT'))\n\t\n\n    return result;\n}\n\n// Return map of AirplaneValidationFlag values and their display names\nexport function MapAirplaneValidationFlags() : Map<AirplaneValidationFlag, string> {\n    let result = new Map<AirplaneValidationFlag, string>();\n\n    \n\tresult.set(AirplaneValidationFlag.UNDEFINED, 'Undefined');\n\t\n\tresult.set(AirplaneValidationFlag.AIRWORTHINESS, 'Airworthiness');\n\t\n\tresult.set(AirplaneValidationFlag.INSURANCE, 'Insurance');\n\t\n\tresult.set(AirplaneValidationFlag.FLIGHT_MANUAL, 'Flight Manual');\n\t\n\tresult.set(AirplaneValidationFlag.RADIO_STATION, 'Radio Station');\n\t\n\tresult.set(AirplaneValidationFlag.REGISTRATION_CERT, 'Registration Cert');\n\t\n\tresult.set(AirplaneValidationFlag.FIRST_AID_KIT, 'First Aid Kit');\n\t\n\tresult.set(AirplaneValidationFlag.FIRE_EXTINGUISHER, 'Fire Extinguisher');\n\t\n\tresult.set(AirplaneValidationFlag.OPERATION_SPEC, 'Operation Spec');\n\t\n\tresult.set(AirplaneValidationFlag.VALID_337_CAMERA, 'Valid 337 Camera');\n\t\n\tresult.set(AirplaneValidationFlag.VALID_337_EXHAUST, 'Valid 337 Exhaust');\n\t\n\tresult.set(AirplaneValidationFlag.VALID_STC_CAMERA, 'Valid Stc Camera');\n\t\n\tresult.set(AirplaneValidationFlag.VALID_STC_EXHAUST, 'Valid Stc Exhaust');\n\t\n\tresult.set(AirplaneValidationFlag.FLIGHT_LOGBOOK, 'Flight Logbook');\n\t\n\tresult.set(AirplaneValidationFlag.AIR_OPERATOR, 'Air Operator');\n\t\n\tresult.set(AirplaneValidationFlag.AIRCRAFT_WEIGHT, 'Aircraft Weight');\n\t\n\tresult.set(AirplaneValidationFlag.PROPELLER_OVERHAUL, 'Propeller Overhaul');\n\t\n\tresult.set(AirplaneValidationFlag.SINGLE_ENGINE_OVERHAUL, 'Single Engine Overhaul');\n\t\n\tresult.set(AirplaneValidationFlag.LEFT_ENGINE_OVERHAUL, 'Left Engine Overhaul');\n\t\n\tresult.set(AirplaneValidationFlag.RIGHT_ENGINE_OVERHAUL, 'Right Engine Overhaul');\n\t\n\tresult.set(AirplaneValidationFlag.LEFT_PROPELLER_OVERHAUL, 'Left Propeller Overhaul');\n\t\n\tresult.set(AirplaneValidationFlag.RIGHT_PROPELLER_OVERHAUL, 'Right Propeller Overhaul');\n\t\n\tresult.set(AirplaneValidationFlag.CVFR_ATS, 'Cvfr Ats');\n\t\n\tresult.set(AirplaneValidationFlag.WEIGHT_BALANCE_FORM, 'Weight Balance Form');\n\t\n\tresult.set(AirplaneValidationFlag.CHECK_LIST, 'Check List');\n\t\n\tresult.set(AirplaneValidationFlag.NOISE_CERT, 'Noise Cert');\n\t\n\n    return result;\n}\n","\nimport { Tuple } from '.';\n\n\n// CampaignTypeCode represents the campaign type: WEB | EMAIL | TELESALES\nexport enum CampaignTypeCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Web [1] \n    WEB = 1,\n \n    // Mail [2] \n    EMAIL = 2,\n \n    // Telephone Sales [3] \n    TELESALES = 3,\n \n}\n\n// Return list of CampaignTypeCode values and their display names\nexport function GetCampaignTypeCodes() : Tuple<CampaignTypeCode, string>[] {\n\tlet result : Tuple<CampaignTypeCode, string>[] = [];\n\n    \n\tresult.push(new Tuple<CampaignTypeCode, string>(CampaignTypeCode.WEB, 'CampaignTypeCode.WEB'))\n\t\n\tresult.push(new Tuple<CampaignTypeCode, string>(CampaignTypeCode.EMAIL, 'CampaignTypeCode.EMAIL'))\n\t\n\tresult.push(new Tuple<CampaignTypeCode, string>(CampaignTypeCode.TELESALES, 'CampaignTypeCode.TELESALES'))\n\t\n\n    return result;\n}\n\n// Return map of CampaignTypeCode values and their display names\nexport function MapCampaignTypeCodes() : Map<CampaignTypeCode, string> {\n    let result = new Map<CampaignTypeCode, string>();\n\n    \n\tresult.set(CampaignTypeCode.UNDEFINED, 'Undefined');\n\t\n\tresult.set(CampaignTypeCode.WEB, 'Web');\n\t\n\tresult.set(CampaignTypeCode.EMAIL, 'Email');\n\t\n\tresult.set(CampaignTypeCode.TELESALES, 'Telesales');\n\t\n\n    return result;\n}\n","\nimport { Tuple } from '.';\n\n\n// FlightTypeCode represents a flight type:  GENERAL | PRIVATE | COMMERCIAL ...\nexport enum FlightTypeCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // General Purpose Flight [1] \n    GENERAL = 1,\n \n    // Other Flight [2] \n    OTHER = 2,\n \n    // Private Flight [3] \n    PRIVATE = 3,\n \n    // Private Flight with IFR [4] \n    PRIVATE_IFR = 4,\n \n    // Commercial Flight [5] \n    COMMERCIAL = 5,\n \n    // Commercial Flight with IFR [6] \n    COMMERCIAL_IFR = 6,\n \n    // Instruction Flight [7] \n    INSTRUCTION = 7,\n \n    // Instruction Flight with CVFR [8] \n    INSTRUCTION_CVFR = 8,\n \n    // Instruction Flight with IFR [9] \n    INSTRUCTION_IFR = 9,\n \n    // Instruction Flight with Navigation [10] \n    INSTRUCTION_NAV = 10,\n \n    // Instruction Night Flight [11] \n    INSTRUCTION_NIGHT = 11,\n \n}\n\n// Return list of FlightTypeCode values and their display names\nexport function GetFlightTypeCodes() : Tuple<FlightTypeCode, string>[] {\n\tlet result : Tuple<FlightTypeCode, string>[] = [];\n\n    \n\tresult.push(new Tuple<FlightTypeCode, string>(FlightTypeCode.GENERAL, 'FlightTypeCode.GENERAL'))\n\t\n\tresult.push(new Tuple<FlightTypeCode, string>(FlightTypeCode.OTHER, 'FlightTypeCode.OTHER'))\n\t\n\tresult.push(new Tuple<FlightTypeCode, string>(FlightTypeCode.PRIVATE, 'FlightTypeCode.PRIVATE'))\n\t\n\tresult.push(new Tuple<FlightTypeCode, string>(FlightTypeCode.PRIVATE_IFR, 'FlightTypeCode.PRIVATE_IFR'))\n\t\n\tresult.push(new Tuple<FlightTypeCode, string>(FlightTypeCode.COMMERCIAL, 'FlightTypeCode.COMMERCIAL'))\n\t\n\tresult.push(new Tuple<FlightTypeCode, string>(FlightTypeCode.COMMERCIAL_IFR, 'FlightTypeCode.COMMERCIAL_IFR'))\n\t\n\tresult.push(new Tuple<FlightTypeCode, string>(FlightTypeCode.INSTRUCTION, 'FlightTypeCode.INSTRUCTION'))\n\t\n\tresult.push(new Tuple<FlightTypeCode, string>(FlightTypeCode.INSTRUCTION_CVFR, 'FlightTypeCode.INSTRUCTION_CVFR'))\n\t\n\tresult.push(new Tuple<FlightTypeCode, string>(FlightTypeCode.INSTRUCTION_IFR, 'FlightTypeCode.INSTRUCTION_IFR'))\n\t\n\tresult.push(new Tuple<FlightTypeCode, string>(FlightTypeCode.INSTRUCTION_NAV, 'FlightTypeCode.INSTRUCTION_NAV'))\n\t\n\tresult.push(new Tuple<FlightTypeCode, string>(FlightTypeCode.INSTRUCTION_NIGHT, 'FlightTypeCode.INSTRUCTION_NIGHT'))\n\t\n\n    return result;\n}\n\n// Return map of FlightTypeCode values and their display names\nexport function MapFlightTypeCodes() : Map<FlightTypeCode, string> {\n    let result = new Map<FlightTypeCode, string>();\n\n    \n\tresult.set(FlightTypeCode.UNDEFINED, 'Undefined');\n\t\n\tresult.set(FlightTypeCode.GENERAL, 'General');\n\t\n\tresult.set(FlightTypeCode.OTHER, 'Other');\n\t\n\tresult.set(FlightTypeCode.PRIVATE, 'Private');\n\t\n\tresult.set(FlightTypeCode.PRIVATE_IFR, 'Private Ifr');\n\t\n\tresult.set(FlightTypeCode.COMMERCIAL, 'Commercial');\n\t\n\tresult.set(FlightTypeCode.COMMERCIAL_IFR, 'Commercial Ifr');\n\t\n\tresult.set(FlightTypeCode.INSTRUCTION, 'Instruction');\n\t\n\tresult.set(FlightTypeCode.INSTRUCTION_CVFR, 'Instruction Cvfr');\n\t\n\tresult.set(FlightTypeCode.INSTRUCTION_IFR, 'Instruction Ifr');\n\t\n\tresult.set(FlightTypeCode.INSTRUCTION_NAV, 'Instruction Nav');\n\t\n\tresult.set(FlightTypeCode.INSTRUCTION_NIGHT, 'Instruction Night');\n\t\n\n    return result;\n}\n","\nimport { Tuple } from '.';\n\n\n// TicketStatusCode represents a flight ticket status:  ...\nexport enum TicketStatusCode {\n \n    // Undefined [0] \n    UNDEFINED = 0,\n \n    // Pending [1] \n    PENDING = 1,\n \n    // Sent to client [2] \n    SENT = 2,\n \n}\n\n// Return list of TicketStatusCode values and their display names\nexport function GetTicketStatusCodes() : Tuple<TicketStatusCode, string>[] {\n\tlet result : Tuple<TicketStatusCode, string>[] = [];\n\n    \n\tresult.push(new Tuple<TicketStatusCode, string>(TicketStatusCode.PENDING, 'TicketStatusCode.PENDING'))\n\t\n\tresult.push(new Tuple<TicketStatusCode, string>(TicketStatusCode.SENT, 'TicketStatusCode.SENT'))\n\t\n\n    return result;\n}\n\n// Return map of TicketStatusCode values and their display names\nexport function MapTicketStatusCodes() : Map<TicketStatusCode, string> {\n    let result = new Map<TicketStatusCode, string>();\n\n    \n\tresult.set(TicketStatusCode.UNDEFINED, 'Undefined');\n\t\n\tresult.set(TicketStatusCode.PENDING, 'Pending');\n\t\n\tresult.set(TicketStatusCode.SENT, 'Sent');\n\t\n\n    return result;\n}\n","\nimport { ConfirmStatusCode } from '.';\nimport { MessageTypeCode } from '.';\nimport { PriorityCode } from '.';\nimport { BaseEntity } from '.';\n\n\n\n// MessageConfirm entity is a system message confirmation by users\nexport class MessageConfirm extends BaseEntity {\n \n    // System Message ID \n    public messageId: string;\n \n    // Linked contact ID \n    public contactId: string;\n \n    // Contact reply status \n    public replyStatus: ConfirmStatusCode;\n \n    // Time of reply sent by the contact [epoch time milliseconds] \n    public replyOn: number;\n \n    // Read and sign form link \n    public replyUrl: string;\n \n    // Message subject [Calculated field, not stored] \n    public subject: string;\n \n    // Message description [Calculated field, not stored] \n    public description: string;\n \n    // Message type [Calculated field, not stored] \n    public type: MessageTypeCode;\n \n    // Message priority [Calculated field, not stored] \n    public priority: PriorityCode;\n \n \n}\n\n\n\n","\nimport { BaseEntity } from '.';\n\n\n\n// SystemConfig is a global System Configuration variable\nexport class SystemConfig extends BaseEntity {\n \n    // String value \n    public strVal: string;\n \n    // Int value \n    public intVal: number;\n \n \n}\n\n\n\n","\nimport { BaseEntity } from '.';\n\n\n\n// Booking entity is a flight booking request to secure an airplane for specific time slot\nexport class Booking extends BaseEntity {\n \n    // Account ID \n    public accountId: string;\n \n    // Contact ID \n    public contactId: string;\n \n    // Airplane ID \n    public airplaneId: string;\n \n    // When to ask for the airplane [Epoch milliseconds] \n    public placementOn: number;\n \n    // Activity end time [Epoch milliseconds] \n    public placementTo: number;\n \n \n}\n\n\n\n","\nimport { TransactionTypeCode } from '.';\nimport { CurrencyCode } from '.';\nimport { BaseEntity } from '.';\n\n\n\n// Credit entity is an accounting action\nexport class Credit extends BaseEntity {\n \n    // Credit name \n    public name: string;\n \n    // Credit description \n    public description: string;\n \n    // Credit transaction type: FLIGHT | BONUS | PURCHASE | REFUND ... \n    public type: TransactionTypeCode;\n \n    // Amount \n    public amount: number;\n \n    // Currency \n    public currency: CurrencyCode;\n \n    // Linked to account \n    public accountId: string;\n \n    // Linked to flight \n    public flightId: string;\n \n    // User ID who updated this entry (can be \"system\") \n    public updatedBy: string;\n \n \n}\n\n\n\n","\n\n\n\n// TOLData is Takeoff and landing data\nexport class TOLData {\n \n    // Planned Time [epoch time milliseconds] \n    public planned: number;\n \n    // Actual Time [epoch time milliseconds] \n    public time: number;\n \n    // Hobs count \n    public hobs: number;\n \n    // Tachometer count \n    public tach: number;\n \n    // Airport / Field \n    public field: string;\n \n     constructor(planned?: number, time?: number, hobs?: number, tach?: number, field?: string) { \n        if (planned !== undefined) { this.planned = planned; }\n        if (time !== undefined) { this.time = time; }\n        if (hobs !== undefined) { this.hobs = hobs; }\n        if (tach !== undefined) { this.tach = tach; }\n        if (field !== undefined) { this.field = field; }\n    }\n\n}\n\n\n\n","\nimport { AssessmentCode } from '.';\n\n\n\n// Lesson includes flight instruction lesson details\nexport class Lesson {\n \n    // Lesson number - lesson_number \n    public number: number;\n \n    // Lesson subject by the syllabus - lesson_subject \n    public subject: string;\n \n    // Instructor assessment (score) enum - lesson_score \n    public assessment: AssessmentCode;\n \n    // Pilot / Instructor comments after flight \n    public comments: string;\n \n    // First Officer / Student flight counter - student_flights_count \n    public flightCounter: number;\n \n    // Total instructed flight time - instructed_flight_time_c \n    public instructedFlightTime: number;\n \n    // Total Instrument flight time - net_instruments_flight_time_c \n    public instrumentsFlightTime: number;\n \n    // Total student Solo flight time - student_solo_flight_time \n    public soloFlightTime: number;\n \n     constructor(number?: number, subject?: string, assessment?: AssessmentCode, comments?: string, flightCounter?: number, instructedFlightTime?: number, instrumentsFlightTime?: number, soloFlightTime?: number) { \n        if (number !== undefined) { this.number = number; }\n        if (subject !== undefined) { this.subject = subject; }\n        if (assessment !== undefined) { this.assessment = assessment; }\n        if (comments !== undefined) { this.comments = comments; }\n        if (flightCounter !== undefined) { this.flightCounter = flightCounter; }\n        if (instructedFlightTime !== undefined) { this.instructedFlightTime = instructedFlightTime; }\n        if (instrumentsFlightTime !== undefined) { this.instrumentsFlightTime = instrumentsFlightTime; }\n        if (soloFlightTime !== undefined) { this.soloFlightTime = soloFlightTime; }\n    }\n\n}\n\n\n\n","\n\n\n\n// BillingRecord is a single record in the total billing of the flight\nexport class BillingRecord {\n \n    // Billing units - quantity_c / quantity_2_c \n    public units: number;\n \n    // Price per Unit - price_c / price_2_c \n    public unitPrice: number;\n \n    // Description for Invoice - invoice_description_c / invoice_description_2_c \n    public description: string;\n \n    // Flag to indicate if VAT included (false) or Exempt (true) \n    public exempt: boolean;\n \n     constructor(units?: number, unitPrice?: number, description?: string, exempt?: boolean) { \n        if (units !== undefined) { this.units = units; }\n        if (unitPrice !== undefined) { this.unitPrice = unitPrice; }\n        if (description !== undefined) { this.description = description; }\n        if (exempt !== undefined) { this.exempt = exempt; }\n    }\n\n}\n\n\n\n","\nimport { MaintenanceActionCode } from '.';\nimport { BaseEntity } from '.';\nimport { StatusCode } from '.';\n\n\n\n// Maintenance entity is an airplane airworthiness certificate\nexport class Maintenance extends BaseEntity {\n \n    // Maintenance name \n    public name: string;\n \n    // Maintenance description \n    public description: string;\n \n    // Linked airplane ID \n    public airplaneId: string;\n \n    // Linked document ID \n    public documentId: string;\n \n    // Airplane hobs counter \n    public hobs: number;\n \n    // Airplane next hobs for inspection \n    public nextHobs: number;\n \n    // Airplane tachometer counter \n    public tach: number;\n \n    // Airplane next tachometer for inspection \n    public nextTach: number;\n \n    // Maintenance Certificate is valid until the timestamp [epoch time milliseconds] \n    public validUntil: number;\n \n    // Maintenance workflow status: UNDEFINED | PENDING | IN_PROCESS | COMPLETED ... \n    public status: StatusCode;\n \n    // Airworthiness component code \n    public component: string;\n \n    // Airworthiness action code \n    public action: MaintenanceActionCode;\n \n    // Time of notification sent to contact [epoch time milliseconds] \n    public notifyAt: number;\n \n    // Notification subject \n    public subject: string;\n \n    // Notification message \n    public message: string;\n \n \n}\n\n\n\n","\nimport { BaseEntity } from '.';\nimport { MessageTypeCode } from '.';\nimport { PriorityCode } from '.';\n\n\n\n// SystemMessage entity is a system message notification that all pilots must read and confirm\nexport class SystemMessage extends BaseEntity {\n \n    // Message subject \n    public subject: string;\n \n    // Message description \n    public description: string;\n \n    // Message type \n    public type: MessageTypeCode;\n \n    // Message priority \n    public priority: PriorityCode;\n \n    // Contact groups to send the message \n    public groups: string[];\n \n \n}\n\n\n\n","\nimport { TicketStatusCode } from '.';\nimport { BaseEntity } from '.';\n\n\n\n// FlightTicket entity is a single flight in the airplane\nexport class FlightTicket extends BaseEntity {\n \n    // Flight ticket name \n    public name: string;\n \n    // Flight ticket description \n    public description: string;\n \n    // Flight ticket number \n    public ticketNumber: number;\n \n    // Flight number \n    public flightNumber: number;\n \n    // Flight Id \n    public flightId: string;\n \n    // Flight ticket status: PENDING | SENT ... \n    public status: TicketStatusCode;\n \n    // Customer name \n    public customerName: string;\n \n    // Customer email \n    public customerEmail: string;\n \n \n}\n\n\n\n","\nimport { AccountStatusCode } from '.';\nimport { Address } from '.';\nimport { BaseEntity } from '.';\n\n\n\n// Account entity is a billing account in the system\nexport class Account extends BaseEntity {\n \n    // Account name \n    public name: string;\n \n    // Account description \n    public description: string;\n \n    // Account status: UNDEFINED | ACTIVE | INACTIVE | BLOCKED | SUSPENDED \n    public status: AccountStatusCode;\n \n    // Office / Landline phone \n    public phone: string;\n \n    // Office / Landline fax \n    public fax: string;\n \n    // Mobile phone \n    public mobile: string;\n \n    // Billing address \n    public billingAddress: Address;\n \n    // Shipping address \n    public shippingAddress: Address;\n \n    // Campaign Id \n    public campaignId: string;\n \n    // Is credit enabled for this account \n    public enableCredit: boolean;\n \n    // Current account credit \n    public currentCredit: number;\n \n    // Base rate for billing \n    public baseRate: number;\n \n    // Permanent discount (percentage) \n    public percentageDiscount: number;\n \n    // Green invoice Id \n    public invoiceId: string;\n \n \n}\n\n\n\n","\nimport { UserTypeCode } from '.';\nimport { BaseEntity } from '.';\n\n\n\n// AuditLog entity is a log entry in the audit log to track users / service account actions\nexport class AuditLog extends BaseEntity {\n \n    // User Id \n    public userId: string;\n \n    // User type: UNDEFINED | SYSADMIN | USER | SERVICE_ACCOUNT \n    public userType: UserTypeCode;\n \n    // Action that was performed \n    public action: string;\n \n    // Item type \n    public itemType: string;\n \n    // Item Id \n    public itemId: string;\n \n    // Item Name \n    public itemName: string;\n \n    // Item value before change [Json] \n    public beforeChange: string;\n \n    // Item delta after change [Json] \n    public afterChange: string;\n \n \n}\n\n\n\n","\nimport { CurrencyCode } from '.';\nimport { BaseEntity } from '.';\nimport { CampaignTypeCode } from '.';\nimport { CampaignStatusCode } from '.';\n\n\n\n// Campaign entity represents a marketing campaign in the system\nexport class Campaign extends BaseEntity {\n \n    // Campaign name \n    public name: string;\n \n    // Campaign type: UNDEFINED | WEB | MAIL | TELE \n    public type: CampaignTypeCode;\n \n    // Campaign status: UNDEFINED | PLANNED | ACTIVE | COMPLETED \n    public status: CampaignStatusCode;\n \n    // Campaign content \n    public content: string;\n \n    // Campaign start date \n    public startDate: number;\n \n    // Campaign end date \n    public endDate: number;\n \n    // Campaign budget \n    public budget: number;\n \n    // Base rate \n    public baseRate: number;\n \n    // Refer URL \n    public referUrl: string;\n \n    // Actual campaign cost \n    public expectedCost: number;\n \n    // Actual campaign cost \n    public actualCost: number;\n \n    // Currency code \n    public currency: CurrencyCode;\n \n \n}\n\n\n\n","\n\n\n\n// DocumentRevision entity represents a document revision in the system\nexport class DocumentRevision {\n \n    // Document revision Id \n    public id: string;\n \n    // Document revision file name \n    public name: string;\n \n    // Document revision \n    public revision: string;\n \n    // Document revision URL \n    public url: string;\n \n    // Document revision creator \n    public createdBy: string;\n \n    // Document revision creation time [epoch time milliseconds] \n    public createdOn: number;\n \n    // Document revision MIME type \n    public mimeType: string;\n \n     constructor(id?: string, name?: string, revision?: string, url?: string, createdBy?: string, createdOn?: number, mimeType?: string) { \n        if (id !== undefined) { this.id = id; }\n        if (name !== undefined) { this.name = name; }\n        if (revision !== undefined) { this.revision = revision; }\n        if (url !== undefined) { this.url = url; }\n        if (createdBy !== undefined) { this.createdBy = createdBy; }\n        if (createdOn !== undefined) { this.createdOn = createdOn; }\n        if (mimeType !== undefined) { this.mimeType = mimeType; }\n    }\n\n}\n\n\n\n","\n\n\n\n// SpecialRisks group of special / other risk values\nexport class SpecialRisks {\n \n    // Special Flight Permit operation (ferry permit) \n    public specialFlightPermit: number;\n \n    // MEL / CDL Items (items related to safety of flight) \n    public specialMelCdlItems: number;\n \n    // Special flight limitations based on AFM equipment limitations \n    public specialFlightLimitAfm: number;\n \n     constructor(specialFlightPermit?: number, specialMelCdlItems?: number, specialFlightLimitAfm?: number) { \n        if (specialFlightPermit !== undefined) { this.specialFlightPermit = specialFlightPermit; }\n        if (specialMelCdlItems !== undefined) { this.specialMelCdlItems = specialMelCdlItems; }\n        if (specialFlightLimitAfm !== undefined) { this.specialFlightLimitAfm = specialFlightLimitAfm; }\n    }\n\n}\n\n\n\n","\n\n\n\n// Mitigation risks mitigation strategy\nexport class Mitigation {\n \n    // Operations Manager evaluation \n    public operationManagerEval: boolean;\n \n    // Document mitigation \n    public documentMitigation: boolean;\n \n    // Mitigation strategies - Risk Assessment Tool \n    public mitigationStrategy: string;\n \n    // Manager name \n    public managerName: string;\n \n    // Manager ID number \n    public idNumber: string;\n \n    // Flight cannot be conducted under noted conditions \n    public flightNotApproved: boolean;\n \n    // Mitigation followup actions \n    public followUpActions: string;\n \n     constructor(operationManagerEval?: boolean, documentMitigation?: boolean, mitigationStrategy?: string, managerName?: string, idNumber?: string, flightNotApproved?: boolean, followUpActions?: string) { \n        if (operationManagerEval !== undefined) { this.operationManagerEval = operationManagerEval; }\n        if (documentMitigation !== undefined) { this.documentMitigation = documentMitigation; }\n        if (mitigationStrategy !== undefined) { this.mitigationStrategy = mitigationStrategy; }\n        if (managerName !== undefined) { this.managerName = managerName; }\n        if (idNumber !== undefined) { this.idNumber = idNumber; }\n        if (flightNotApproved !== undefined) { this.flightNotApproved = flightNotApproved; }\n        if (followUpActions !== undefined) { this.followUpActions = followUpActions; }\n    }\n\n}\n\n\n\n","\n\n\n\n// StringKeyValue model used as a string key-value pair\nexport class StringKeyValue {\n \n    // Tuple key \n    public key: string;\n \n    // Tuple value \n    public value: string;\n \n     constructor(key?: string, value?: string) { \n        if (key !== undefined) { this.key = key; }\n        if (value !== undefined) { this.value = value; }\n    }\n\n}\n\n\n\n","\n\n\n\n// LoginParams model used for authorize user by email\nexport class LoginParams {\n \n    // User email \n    public email: string;\n \n     constructor(email?: string) { \n        if (email !== undefined) { this.email = email; }\n    }\n\n}\n\n\n\n","\nimport { FlightPurposeCode } from '.';\nimport { TOLData } from '.';\nimport { ReFuel } from '.';\nimport { Billing } from '.';\nimport { BaseEntity } from '.';\nimport { FlightTypeCode } from '.';\nimport { FlightStateCode } from '.';\nimport { OnBoard } from '.';\nimport { Lesson } from '.';\nimport { RiskAssessment } from '.';\nimport { FlightStatusCode } from '.';\n\n\n\n// Flight entity is a single flight in the airplane\nexport class Flight extends BaseEntity {\n \n    // Flight name \n    public name: string;\n \n    // Flight description \n    public description: string;\n \n    // Flight number \n    public flightNumber: number;\n \n    // Flight number as string \n    public flightString: string;\n \n    // Flight destination \n    public destination: string;\n \n    // Account ID \n    public accountId: string;\n \n    // Airplane ID \n    public airplaneId: string;\n \n    // Flight type: PRIVATE | COMMERCIAL  ... \n    public type: FlightTypeCode;\n \n    // Flight status: REGISTERED | DELETE | CANCELLED ... \n    public status: FlightStatusCode;\n \n    // Flight actual state PENDING | ACTIVE | COMPLETED (can't be manually modified):   ... \n    public state: FlightStateCode;\n \n    // Purpose of the flight \n    public purpose: FlightPurposeCode;\n \n    // In case of OTHER, Purpose of the flight \n    public purposeOt: string;\n \n    // Crew and Passengers on board \n    public onBoard: OnBoard;\n \n    // Flight attending time [hh:mm] \n    public attendingTime: string;\n \n    // Flight boarding time [hh:mm] \n    public boardingTime: string;\n \n    // Takeoff data \n    public takeoff: TOLData;\n \n    // Landing data \n    public landing: TOLData;\n \n    // Weight and Balance configuration \n    public wbConfig: string;\n \n    // Weight and Balance manual specification \n    public wbManual: string;\n \n    // Flight has competency certification \n    public hasCompetency: boolean;\n \n    // Flight has a flight plan \n    public hasFlightPlan: boolean;\n \n    // Pre Flight notes \n    public preFlightNotes: string;\n \n    // Flight operation notes \n    public operationNotes: string;\n \n    // Fuel status before and after flight \n    public fuelStatus: ReFuel;\n \n    // Oil status before and after flight \n    public oilStatus: ReFuel;\n \n    // Flight lesson attributes \n    public lesson: Lesson;\n \n    // Flight billing information \n    public billing: Billing;\n \n    // Pilot certification check ? \n    public pilotCertCheck: number;\n \n    // Risk Assessment Tool & Mitigation Strategies \n    public riskAssessment: RiskAssessment;\n \n \n}\n\n\n\n","\n\n\n\n// CrewDutyDayRisks group of crew duty risk values\nexport class CrewDutyDayRisks {\n \n    // Crew duty day greater than 12 hours \n    public crewDutyDayOver12Hrs: number;\n \n    // Flight time greater than 8 hours during the duty day \n    public flightTimeOver8Hrs: number;\n \n    // Crew rest period less than 10 hours prior to the duty day \n    public crewRestLess10Hrs: number;\n \n     constructor(crewDutyDayOver12Hrs?: number, flightTimeOver8Hrs?: number, crewRestLess10Hrs?: number) { \n        if (crewDutyDayOver12Hrs !== undefined) { this.crewDutyDayOver12Hrs = crewDutyDayOver12Hrs; }\n        if (flightTimeOver8Hrs !== undefined) { this.flightTimeOver8Hrs = flightTimeOver8Hrs; }\n        if (crewRestLess10Hrs !== undefined) { this.crewRestLess10Hrs = crewRestLess10Hrs; }\n    }\n\n}\n\n\n\n","\n\n\n\n// DestinationRisks group of destination risk values\nexport class DestinationRisks {\n \n    // Mountainous airport \n    public mountainousAirport: number;\n \n    // Control tower not operational at ETA \n    public towerNotOperationalAtEta: number;\n \n    // Destination - Non-towered airport \n    public nonToweredAirport: number;\n \n    // Destination - Wet Runway \n    public wetRunway: number;\n \n    // Destination - Contaminated Runway \n    public contaminatedRunway: number;\n \n    // Stopping distance greater than 80% of available runway \n    public stoppingDistanceOver80p: number;\n \n    // Runway braking action less than good - rv_runw_brakin_actionless_t_c \n    public runwayBreakingLessGood: number;\n \n    // Approach w/o vertical guidance (best available approach) - rv_approach_w_o_vertical_gui_c \n    public approachWoVerticalGuide: number;\n \n    // Circling approach (best available approach) - rv_circling_approach_best_av_c \n    public circlingApproach: number;\n \n    // No published approaches - rv_no_published_approaches_c \n    public noPublishedApproaches: number;\n \n    // Alternate airport not selected - rv_alternate_airport_not_sel_c \n    public noAlternateAirport: number;\n \n    // Destination - Elevation of primary airport greater than 5,000 ft. MSL - rv_destelevtio_of_primary_ai_c \n    public airportElevOver5KFts: number;\n \n     constructor(mountainousAirport?: number, towerNotOperationalAtEta?: number, nonToweredAirport?: number, wetRunway?: number, contaminatedRunway?: number, stoppingDistanceOver80p?: number, runwayBreakingLessGood?: number, approachWoVerticalGuide?: number, circlingApproach?: number, noPublishedApproaches?: number, noAlternateAirport?: number, airportElevOver5KFts?: number) { \n        if (mountainousAirport !== undefined) { this.mountainousAirport = mountainousAirport; }\n        if (towerNotOperationalAtEta !== undefined) { this.towerNotOperationalAtEta = towerNotOperationalAtEta; }\n        if (nonToweredAirport !== undefined) { this.nonToweredAirport = nonToweredAirport; }\n        if (wetRunway !== undefined) { this.wetRunway = wetRunway; }\n        if (contaminatedRunway !== undefined) { this.contaminatedRunway = contaminatedRunway; }\n        if (stoppingDistanceOver80p !== undefined) { this.stoppingDistanceOver80p = stoppingDistanceOver80p; }\n        if (runwayBreakingLessGood !== undefined) { this.runwayBreakingLessGood = runwayBreakingLessGood; }\n        if (approachWoVerticalGuide !== undefined) { this.approachWoVerticalGuide = approachWoVerticalGuide; }\n        if (circlingApproach !== undefined) { this.circlingApproach = circlingApproach; }\n        if (noPublishedApproaches !== undefined) { this.noPublishedApproaches = noPublishedApproaches; }\n        if (noAlternateAirport !== undefined) { this.noAlternateAirport = noAlternateAirport; }\n        if (airportElevOver5KFts !== undefined) { this.airportElevOver5KFts = airportElevOver5KFts; }\n    }\n\n}\n\n\n\n","\n\n\n\n// TripRisks group of trip risk values\nexport class TripRisks {\n \n    // Trip - Twilight operation \n    public twilightOperation: number;\n \n    // Trip - nighttime operation \n    public nightTimeOperation: number;\n \n    // Trip - Repositioning flight (no passengers or cargo) \n    public repositioningFlight: number;\n \n    // Pop-up trip (less than 4 hours notice) \n    public popupTripLess4HrsNotice: number;\n \n    // International trip \n    public internationalTrip: number;\n \n     constructor(twilightOperation?: number, nightTimeOperation?: number, repositioningFlight?: number, popupTripLess4HrsNotice?: number, internationalTrip?: number) { \n        if (twilightOperation !== undefined) { this.twilightOperation = twilightOperation; }\n        if (nightTimeOperation !== undefined) { this.nightTimeOperation = nightTimeOperation; }\n        if (repositioningFlight !== undefined) { this.repositioningFlight = repositioningFlight; }\n        if (popupTripLess4HrsNotice !== undefined) { this.popupTripLess4HrsNotice = popupTripLess4HrsNotice; }\n        if (internationalTrip !== undefined) { this.internationalTrip = internationalTrip; }\n    }\n\n}\n\n\n\n","\nimport { UserTypeCode } from '.';\nimport { UserStatusCode } from '.';\n\n\n\n// TokenData model represents user in account which is encrypted with the JWT token\nexport class TokenData {\n \n    // Authenticated subject ID (can be user, or service account) \n    public subjectId: string;\n \n    // Subject type: UNDEFINED | SYSADMIN | USER | SERVICE_ACCOUNT \n    public subjectType: UserTypeCode;\n \n    // User status: UNDEFINED | PENDING | ACTIVE | BLOCKED | SUSPENDED \n    public status: UserStatusCode;\n \n    // Token expiration [Epoch milliseconds Timestamp] \n    public expiresIn: number;\n \n     constructor(subjectId?: string, subjectType?: UserTypeCode, status?: UserStatusCode, expiresIn?: number) { \n        if (subjectId !== undefined) { this.subjectId = subjectId; }\n        if (subjectType !== undefined) { this.subjectType = subjectType; }\n        if (status !== undefined) { this.status = status; }\n        if (expiresIn !== undefined) { this.expiresIn = expiresIn; }\n    }\n\n}\n\n\n\n","\n\n\n\n// Engine model represents engine metrics\nexport class Engine {\n \n    // Engine total time [hours] \n    public totalTime: number;\n \n    // Overhaul time frequency  [hours] \n    public overhaulFrequency: number;\n \n    // Overhaul next due [hours] \n    public overhaulNextDue: number;\n \n    // Time remaining till the next Overhaul [hours] \n    public hoursToOverhaul: number;\n \n    // Last airframe Overhaul [hours] \n    public lastAirframeOverhaul: number;\n \n     constructor(totalTime?: number, overhaulFrequency?: number, overhaulNextDue?: number, hoursToOverhaul?: number, lastAirframeOverhaul?: number) { \n        if (totalTime !== undefined) { this.totalTime = totalTime; }\n        if (overhaulFrequency !== undefined) { this.overhaulFrequency = overhaulFrequency; }\n        if (overhaulNextDue !== undefined) { this.overhaulNextDue = overhaulNextDue; }\n        if (hoursToOverhaul !== undefined) { this.hoursToOverhaul = hoursToOverhaul; }\n        if (lastAirframeOverhaul !== undefined) { this.lastAirframeOverhaul = lastAirframeOverhaul; }\n    }\n\n}\n\n\n\n","\n\n\n\n// Magneto model represents magneto metrics\nexport class Magneto {\n \n    // Inspection frequency [hours] \n    public inspectionFrequency: number;\n \n    // Last Inspection [hours] \n    public lastInspectionHours: number;\n \n    // Next Inspection [hours] \n    public nextInspectionHours: number;\n \n    // Remaining hours to the next inspection \n    public remainingHours: number;\n \n     constructor(inspectionFrequency?: number, lastInspectionHours?: number, nextInspectionHours?: number, remainingHours?: number) { \n        if (inspectionFrequency !== undefined) { this.inspectionFrequency = inspectionFrequency; }\n        if (lastInspectionHours !== undefined) { this.lastInspectionHours = lastInspectionHours; }\n        if (nextInspectionHours !== undefined) { this.nextInspectionHours = nextInspectionHours; }\n        if (remainingHours !== undefined) { this.remainingHours = remainingHours; }\n    }\n\n}\n\n\n\n","\n\n\n\n// Fuel model represents fuel metrics\nexport class Fuel {\n \n    // Fuel tank size [Liters] \n    public totalTime: number;\n \n    // Fuel consumption \n    public consumption: number;\n \n    // Fuel cost \n    public cost: number;\n \n    // Estimated fuel in tank \n    public estimatedFuelInTank: number;\n \n    // Estimated endurance \n    public estimatedEndurance: number;\n \n    // Last updated on \n    public lastUpdatedOn: number;\n \n    // Last updated by flight \n    public lastUpdatedByFlight: number;\n \n     constructor(tankSize?: number, consumption?: number, cost?: number, estimatedFuelInTank?: number, estimatedEndurance?: number, lastUpdatedOn?: number, lastUpdatedByFlight?: number) { \n        if (tankSize !== undefined) { this.totalTime = tankSize; }\n        if (consumption !== undefined) { this.consumption = consumption; }\n        if (cost !== undefined) { this.cost = cost; }\n        if (estimatedFuelInTank !== undefined) { this.estimatedFuelInTank = estimatedFuelInTank; }\n        if (estimatedEndurance !== undefined) { this.estimatedEndurance = estimatedEndurance; }\n        if (lastUpdatedOn !== undefined) { this.lastUpdatedOn = lastUpdatedOn; }\n        if (lastUpdatedByFlight !== undefined) { this.lastUpdatedByFlight = lastUpdatedByFlight; }\n    }\n\n}\n\n\n\n","\nimport { StatusCode } from '.';\nimport { BaseEntity } from '.';\n\n\n\n// Certificate entity is a contact certificate required for active pilot\nexport class Certificate extends BaseEntity {\n \n    // Certificate name \n    public name: string;\n \n    // Certificate description \n    public description: string;\n \n    // Linked contact ID \n    public contactId: string;\n \n    // Linked document ID \n    public documentId: string;\n \n    // Certificate is valid until the timestamp [epoch time milliseconds] \n    public validUntil: number;\n \n    // Certificate workflow status: UNDEFINED | PENDING | IN_PROCESS | COMPLETED ... \n    public status: StatusCode;\n \n    // Time of notification sent to contact [epoch time milliseconds] \n    public notifyAt: number;\n \n    // Notification subject \n    public subject: string;\n \n    // Notification message \n    public message: string;\n \n \n}\n\n\n\n","\n\n\n\n// ReFuel includes Fuel and Oil\nexport class ReFuel {\n \n    // Refill before flight \n    public refillBefore: number;\n \n    // Total amount on board \n    public amountOnBoard: number;\n \n    // Refill after flight \n    public refillAfter: number;\n \n     constructor(refillBefore?: number, amountOnBoard?: number, refillAfter?: number) { \n        if (refillBefore !== undefined) { this.refillBefore = refillBefore; }\n        if (amountOnBoard !== undefined) { this.amountOnBoard = amountOnBoard; }\n        if (refillAfter !== undefined) { this.refillAfter = refillAfter; }\n    }\n\n}\n\n\n\n","\n\n\n\n// WeatherRisks group of weather risk values\nexport class WeatherRisks {\n \n    // No weather reporting at destination \n    public noWeatherReporting: number;\n \n    // Thunderstorms at departure and/or destination \n    public thunderstormsExpected: number;\n \n    // Heavy rain at departure and/or destination \n    public heavyRainExpected: number;\n \n    // Frozen precipitation at departure and/or destination \n    public frozenPrecipitation: number;\n \n    // Ceiling / visibility at destination less than 500 ft. / 2 nm \n    public ceilingVisibilityLess500Fts: number;\n \n    // Cold weather operation \n    public coldWeatherOperation: number;\n \n    // Icing (moderate-severe) \n    public moderateSeverIcing: number;\n \n    // Surface winds greater than 30 knots \n    public surfaceWindsOver30Knts: number;\n \n    // Crosswinds greater than 15 knots \n    public crosswindsOver15Knots: number;\n \n    // Severe turbulence expected \n    public severeTurbulenceExpected: number;\n \n     constructor(noWeatherReporting?: number, thunderstormsExpected?: number, heavyRainExpected?: number, frozenPrecipitation?: number, ceilingVisibilityLess500Fts?: number, coldWeatherOperation?: number, moderateSeverIcing?: number, surfaceWindsOver30Knots?: number, crosswindsOver15Knots?: number, severeTurbulenceExpected?: number) { \n        if (noWeatherReporting !== undefined) { this.noWeatherReporting = noWeatherReporting; }\n        if (thunderstormsExpected !== undefined) { this.thunderstormsExpected = thunderstormsExpected; }\n        if (heavyRainExpected !== undefined) { this.heavyRainExpected = heavyRainExpected; }\n        if (frozenPrecipitation !== undefined) { this.frozenPrecipitation = frozenPrecipitation; }\n        if (ceilingVisibilityLess500Fts !== undefined) { this.ceilingVisibilityLess500Fts = ceilingVisibilityLess500Fts; }\n        if (coldWeatherOperation !== undefined) { this.coldWeatherOperation = coldWeatherOperation; }\n        if (moderateSeverIcing !== undefined) { this.moderateSeverIcing = moderateSeverIcing; }\n        if (surfaceWindsOver30Knots !== undefined) { this.surfaceWindsOver30Knts = surfaceWindsOver30Knots; }\n        if (crosswindsOver15Knots !== undefined) { this.crosswindsOver15Knots = crosswindsOver15Knots; }\n        if (severeTurbulenceExpected !== undefined) { this.severeTurbulenceExpected = severeTurbulenceExpected; }\n    }\n\n}\n\n\n\n","\nimport { Address } from '.';\nimport { LeadStatusCode } from '.';\nimport { BaseEntity } from '.';\n\n\n\n// Lead entity is a lead in the CRM system\nexport class Lead extends BaseEntity {\n \n    // First name \n    public firstName: string;\n \n    // Last name \n    public lastName: string;\n \n    // Account description \n    public description: string;\n \n    // Office / Landline phone \n    public phone: string;\n \n    // Office / Landline fax \n    public fax: string;\n \n    // Mobile phone \n    public mobile: string;\n \n    // Email address \n    public email: string;\n \n    // Primary address \n    public primaryAddress: Address;\n \n    // Lead source \n    public leadSource: string;\n \n    // Lead source description \n    public leadSourceDescription: string;\n \n    // Campaign Id \n    public campaignId: string;\n \n    // Account status: UNDEFINED | ACTIVE | INACTIVE | BLOCKED | SUSPENDED \n    public status: LeadStatusCode;\n \n    // Referred by \n    public referredBy: string;\n \n    // Notes \n    public notes: string;\n \n    // Assigned to user \n    public assignedTo: string;\n \n    // \n    public price: number;\n \n    // \n    public commission: number;\n \n    // \n    public totalCost: number;\n \n    // \n    public commissionPaid: boolean;\n \n \n}\n\n\n\n","\nimport { DocumentRevision } from '.';\nimport { BaseEntity } from '.';\n\n\n\n// Document entity represents a document in the system\nexport class Document extends BaseEntity {\n \n    // Document name \n    public name: string;\n \n    // Document description \n    public description: string;\n \n    // Document creator \n    public createdBy: string;\n \n    // Document active from [epoch time milliseconds] \n    public activeFrom: number;\n \n    // Document active until [epoch time milliseconds] \n    public activeUntil: number;\n \n    // Document category \n    public category: string;\n \n    // Document Revisions \n    public revisions: DocumentRevision[];\n \n    // Active (current) revision \n    public activeRevision: string;\n \n    // Active revision URL \n    public activeUrl: string;\n \n    // Active revision MIME type \n    public activeMimeType: string;\n \n \n}\n\n\n\n","\n\n\n\n// OnBoard includes all members on board\nexport class OnBoard {\n \n    // Captain / Instructor contact Id \n    public captain: string;\n \n    // First Officer / Student contact Id \n    public firstOfficer: string;\n \n    // Passengers names \n    public passengers: string[];\n \n    // Crew members (name:role) \n    public crew: string[];\n \n     constructor(captain?: string, firstOfficer?: string, passengers?: string[], crew?: string[]) { \n        if (captain !== undefined) { this.captain = captain; }\n        if (firstOfficer !== undefined) { this.firstOfficer = firstOfficer; }\n        if (passengers !== undefined) { this.passengers = passengers; }\n        if (crew !== undefined) { this.crew = crew; }\n    }\n\n}\n\n\n\n","\n\n\n\n// PilotQualificationsRisks group of pilot qualifications risk values\nexport class PilotQualificationsRisks {\n \n    // Captain with less than 200 hours in aircraft type \n    public captLess200Hr: number;\n \n    // Captain with less than 100 hours in the last 90 days \n    public captLess100Hr90d: number;\n \n    // First Officer with less than 200 hours in aircraft type \n    public firstOfLess200Hr: number;\n \n    // First Officer with less than 100 hours in the last 90 days \n    public firstOfLess100Hr90d: number;\n \n     constructor(captLess200Hr?: number, captLess100Hr90d?: number, firstOfLess200Hr?: number, firstOfLess100Hr90d?: number) { \n        if (captLess200Hr !== undefined) { this.captLess200Hr = captLess200Hr; }\n        if (captLess100Hr90d !== undefined) { this.captLess100Hr90d = captLess100Hr90d; }\n        if (firstOfLess200Hr !== undefined) { this.firstOfLess200Hr = firstOfLess200Hr; }\n        if (firstOfLess100Hr90d !== undefined) { this.firstOfLess100Hr90d = firstOfLess100Hr90d; }\n    }\n\n}\n\n\n\n","\nimport { BaseEntity } from '.';\nimport { UserTypeCode } from '.';\nimport { UserStatusCode } from '.';\n\n\n\n// User represents a human / system operator that has access to the system, and can perform operations\n// User authentication is done by an external identity provider\nexport class User extends BaseEntity {\n \n    // User name \n    public name: string;\n \n    // User email \n    public email: string;\n \n    // User mobile phone number (for notification and validation) \n    public mobile: string;\n \n    // User type: UNDEFINED | SYSADMIN | SUPPORT | USER \n    public type: UserTypeCode;\n \n    // User status: UNDEFINED | PENDING | ACTIVE |  BLOCKED | SUSPENDED \n    public status: UserStatusCode;\n \n \n}\n\n\n\n","\nimport { AccountStatusCode } from '.';\nimport { Address } from '.';\nimport { ValidationFlag } from '.';\nimport { BaseEntity } from '.';\n\n\n\n// Contact entity is a billing account in the system\nexport class Contact extends BaseEntity {\n \n    // First name \n    public firstName: string;\n \n    // Last name \n    public lastName: string;\n \n    // Contact description \n    public description: string;\n \n    // Title in the account \n    public title: string;\n \n    // Contact birthday \n    public birthDay: number;\n \n    // Contact status: UNDEFINED | ACTIVE | INACTIVE | BLOCKED | SUSPENDE \n    public status: AccountStatusCode;\n \n    // Office / Landline phone \n    public phone: string;\n \n    // Office / Landline fax \n    public fax: string;\n \n    // Mobile phone \n    public mobile: string;\n \n    // Primary address \n    public primaryAddress: Address;\n \n    // Total single engine hours \n    public singleEngineHours: number;\n \n    // Total dual engine hours \n    public dualEngineHours: number;\n \n    // Total flight hours \n    public totalFlightHours: number;\n \n    // Contact groups \n    public groups: string[];\n \n    // ID number \n    public idNumber: string;\n \n    // Start to fly on [epoch time milliseconds] \n    public startToFlyDate: number;\n \n    // Authorized to fly by user at time \n    public authorizedToFlyBy: string;\n \n    // Authorized photographer by user at timeValidations \n    public authorizedPhotographyBy: string;\n \n    // Pilot license number \n    public pilotLicense: string;\n \n    // Pilot license type \n    public licenseTypes: string[];\n \n    // Pilot license group \n    public licenseGroup: string;\n \n    // Medical certificate class \n    public medicalCertClass: string;\n \n    // Enum flags - list of certifications and validations \n    public validations: ValidationFlag;\n \n    // Flag indicating if this contact is a pilot \n    public isPilot: boolean;\n \n \n}\n\n\n\n","\nimport { Mitigation } from '.';\nimport { PilotQualificationsRisks } from '.';\nimport { CrewDutyDayRisks } from '.';\nimport { DepartureRisks } from '.';\nimport { DestinationRisks } from '.';\nimport { TripRisks } from '.';\nimport { WeatherRisks } from '.';\nimport { SpecialRisks } from '.';\n\n\n\n// RiskAssessment Risk Assessment Tool & Mitigation Strategies\nexport class RiskAssessment {\n \n    // Risk assessment time \n    public timestamp: number;\n \n    // Pilot Qualifications and and Experience risks \n    public pilotQualifications: PilotQualificationsRisks;\n \n    // Crew Duty Day risks \n    public crewDutyDay: CrewDutyDayRisks;\n \n    // Departure risks \n    public departure: DepartureRisks;\n \n    // Destination risks \n    public destination: DestinationRisks;\n \n    // Trip risks \n    public trip: TripRisks;\n \n    // Weather risks \n    public weather: WeatherRisks;\n \n    // Other special risks \n    public other: SpecialRisks;\n \n    // Risks mitigation strategy \n    public mitigation: Mitigation;\n \n     constructor(timestamp?: number, pilotQualifications?: PilotQualificationsRisks, crewDutyDay?: CrewDutyDayRisks, departure?: DepartureRisks, destination?: DestinationRisks, trip?: TripRisks, weather?: WeatherRisks, other?: SpecialRisks, mitigation?: Mitigation) { \n        if (timestamp !== undefined) { this.timestamp = timestamp; }\n        if (pilotQualifications !== undefined) { this.pilotQualifications = pilotQualifications; }\n        if (crewDutyDay !== undefined) { this.crewDutyDay = crewDutyDay; }\n        if (departure !== undefined) { this.departure = departure; }\n        if (destination !== undefined) { this.destination = destination; }\n        if (trip !== undefined) { this.trip = trip; }\n        if (weather !== undefined) { this.weather = weather; }\n        if (other !== undefined) { this.other = other; }\n        if (mitigation !== undefined) { this.mitigation = mitigation; }\n    }\n\n}\n\n\n\n","\n\n\n\n// Address model represents an address\nexport class Address {\n \n    // Street address \n    public street: string;\n \n    // City \n    public city: string;\n \n    // State (if applicable) \n    public state: string;\n \n    // Local zip code (postal cod) \n    public zipCode: string;\n \n    // Country name \n    public country: string;\n \n     constructor(street?: string, city?: string, state?: string, zipCode?: string, country?: string) { \n        if (street !== undefined) { this.street = street; }\n        if (city !== undefined) { this.city = city; }\n        if (state !== undefined) { this.state = state; }\n        if (zipCode !== undefined) { this.zipCode = zipCode; }\n        if (country !== undefined) { this.country = country; }\n    }\n\n}\n\n\n\n","\nimport { BaseEntity } from '.';\nimport { AirplaneStatusCode } from '.';\nimport { AirplaneValidationFlag } from '.';\nimport { Engine } from '.';\nimport { Magneto } from '.';\nimport { Propeller } from '.';\nimport { Fuel } from '.';\n\n\n\n// Airplane entity represents an airplane\nexport class Airplane extends BaseEntity {\n \n    // Name \n    public name: string;\n \n    // Description \n    public description: string;\n \n    // Airplane model \n    public model: string;\n \n    // Airplane serial number \n    public serialNo: string;\n \n    // Airplane status \n    public status: AirplaneStatusCode;\n \n    // Airplane hobs counter \n    public hobs: number;\n \n    // Airplane tachometer counter \n    public tach: number;\n \n    // Airplane next tachometer for inspection \n    public nextTach: number;\n \n    // Airplane air time (hours) \n    public airTime: number;\n \n    // Airplane customer number \n    public customerNo: string;\n \n    // Airworthiness flags \n    public airworthiness: AirplaneValidationFlag;\n \n    // Fixed value to first flight \n    public fixedValueToFirstFlight: number;\n \n    // AC total time \n    public acTotalTime: number;\n \n    // Single / Left Engine indicators \n    public engine: Engine;\n \n    // Left Magneto indicators \n    public leftMagneto: Magneto;\n \n    // Right Magneto indicators \n    public rightMagneto: Magneto;\n \n    // Single / Left Propeller indicators \n    public propeller: Propeller;\n \n    // Fuel indicators \n    public fuel: Fuel;\n \n    // Airplane related documents \n    public documents: string[];\n \n \n}\n\n\n\n","\n\n\n\n// Propeller model represents propeller metrics\nexport class Propeller {\n \n    // Propeller total time [hours] \n    public totalTime: number;\n \n    // Overhaul time frequency  [hours] \n    public overhaulFrequency: number;\n \n    // Overhaul next due [hours] \n    public overhaulNextDue: number;\n \n    // Time remaining till the next Overhaul [hours] \n    public hoursToOverhaul: number;\n \n    // Last airframe Overhaul [hours] \n    public lastAirframeOverhaul: number;\n \n     constructor(totalTime?: number, overhaulFrequency?: number, overhaulNextDue?: number, hoursToOverhaul?: number, lastAirframeOverhaul?: number) { \n        if (totalTime !== undefined) { this.totalTime = totalTime; }\n        if (overhaulFrequency !== undefined) { this.overhaulFrequency = overhaulFrequency; }\n        if (overhaulNextDue !== undefined) { this.overhaulNextDue = overhaulNextDue; }\n        if (hoursToOverhaul !== undefined) { this.hoursToOverhaul = hoursToOverhaul; }\n        if (lastAirframeOverhaul !== undefined) { this.lastAirframeOverhaul = lastAirframeOverhaul; }\n    }\n\n}\n\n\n\n","\n\n\n\n// DepartureRisks group of departure risk values\nexport class DepartureRisks {\n \n    // Mountainous airport \n    public mountainousAirport: number;\n \n    // Control tower not operational at ETD \n    public towerNotOperationalAtEtd: number;\n \n    // Departure - Non-towered airport \n    public nonToweredAirport: number;\n \n    // Departure - Wet Runway \n    public wetRunway: number;\n \n    // Departure - Contaminated Runway \n    public contaminatedRunway: number;\n \n     constructor(mountainousAirport?: number, towerNotOperationalAtEtd?: number, nonToweredAirport?: number, wetRunway?: number, contaminatedRunway?: number) { \n        if (mountainousAirport !== undefined) { this.mountainousAirport = mountainousAirport; }\n        if (towerNotOperationalAtEtd !== undefined) { this.towerNotOperationalAtEtd = towerNotOperationalAtEtd; }\n        if (nonToweredAirport !== undefined) { this.nonToweredAirport = nonToweredAirport; }\n        if (wetRunway !== undefined) { this.wetRunway = wetRunway; }\n        if (contaminatedRunway !== undefined) { this.contaminatedRunway = contaminatedRunway; }\n    }\n\n}\n\n\n\n","\nimport { BillingStatusCode } from '.';\nimport { BillingRecord } from '.';\n\n\n\n// Billing includes flight billing information\nexport class Billing {\n \n    // Billing status - status_c \n    public status: BillingStatusCode;\n \n    // Billing invoice records \n    public invoiceRecords: BillingRecord[];\n \n    // Billing invoice issue date [epoch time milliseconds] \n    public invoiceDate: number;\n \n    // Discount percentage (0 .. 100) - percentage_discount \n    public discountPercentage: number;\n \n    // Total before VAT - total_charge_c \n    public totalBeforeVat: number;\n \n    // Total including VAT - total_charge_inc_vat_bef_dis_c \n    public totalAfterVat: number;\n \n    // Total charge including VAT after discount - total_charge_includes_vat_c \n    public totalAfterDiscount: number;\n \n    // Pilot payment - pilot_requested_payment_c \n    public pilotPayment: number;\n \n    // Pilot payment status - pilot_payment_status_c \n    public pilotPaymentStatus: string;\n \n    // Pilot payment - lbl_first_officer_payment_c \n    public firstOfficerPayment: number;\n \n    // Pilot payment status - lbl_firts_officer_payment_st_c \n    public firstOfficerPaymentStatus: string;\n \n     constructor(status?: BillingStatusCode, invoiceRecords?: BillingRecord[], invoiceDate?: number, discountPercentage?: number, totalBeforeVAT?: number, totalAfterVAT?: number, totalAfterDiscount?: number, pilotPayment?: number, pilotPaymentStatus?: string, firstOfficerPayment?: number, firstOfficerPaymentStatus?: string) { \n        if (status !== undefined) { this.status = status; }\n        if (invoiceRecords !== undefined) { this.invoiceRecords = invoiceRecords; }\n        if (invoiceDate !== undefined) { this.invoiceDate = invoiceDate; }\n        if (discountPercentage !== undefined) { this.discountPercentage = discountPercentage; }\n        if (totalBeforeVAT !== undefined) { this.totalBeforeVat = totalBeforeVAT; }\n        if (totalAfterVAT !== undefined) { this.totalAfterVat = totalAfterVAT; }\n        if (totalAfterDiscount !== undefined) { this.totalAfterDiscount = totalAfterDiscount; }\n        if (pilotPayment !== undefined) { this.pilotPayment = pilotPayment; }\n        if (pilotPaymentStatus !== undefined) { this.pilotPaymentStatus = pilotPaymentStatus; }\n        if (firstOfficerPayment !== undefined) { this.firstOfficerPayment = firstOfficerPayment; }\n        if (firstOfficerPaymentStatus !== undefined) { this.firstOfficerPaymentStatus = firstOfficerPaymentStatus; }\n    }\n\n}\n\n\n\n","\n// BaseRestResponse is a common structure for all response types\nexport class BaseRestResponse {\n\n    // Error code (0 for success)\n    public code: number = 0;\n\n    // Error message\n    public error: string = '';\n}","import { BaseRestResponse } from './BaseRestResponse'\n\n// ActionResponse message is returned for any action on entity with no return data (e.d. delete)\nexport class ActionResponse extends BaseRestResponse {\n\n    // Entity key\n    public key: string = '';\n\n    // Additional data\n    public data: string = '';\n}\n\n\n","import { BaseRestResponse } from './BaseRestResponse'\n\n// EntitiesResponse message is returned for any action returning multiple entities\nexport class EntityResponse<T> extends BaseRestResponse {\n\n    // Current page (Bulk) number\n    public page: number = 0;\n\n    // Size of page (items in bulk)\n    public size: number = 0;\n\n    // Total number of pages\n    public pages: number = 0;\n\n    // Total number of items in the query\n    public total: number = 0;\n\n    // List of entities\n    public entity: T;\n}\n","import { BaseRestResponse } from './BaseRestResponse'\n\n// EntitiesResponse message is returned for any action returning multiple entities\nexport class EntitiesResponse<T> extends BaseRestResponse {\n\n    // Current page (Bulk) number\n    public page: number = 0;\n\n    // Size of page (items in bulk)\n    public size: number = 0;\n\n    // Total number of pages\n    public pages: number = 0;\n\n    // Total number of items in the query\n    public total: number = 0;\n\n    // List of entities\n    public list: T[] = [];\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpRequest } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json',\n    'Cache-Control': 'no-cache, no-store',\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Headers': 'Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, X-API-KEY, X-ACCESS-TOKEN, X-TIMEZONE, accept, origin, Cache-Control, X-Requested-With, Authorization, Content-Disposition, Content-Filename',\n    'Access-Control-Exposed-Headers': 'X-API-KEY, X-ACCESS-TOKEN, X-TIMEZONE, Content-Disposition, Content-Filename',\n  })\n};\n\n\n// Utility class for all REST services with common functions\n@Injectable()\nexport class RestUtil {\n\n  // Constructor with injected authentication service\n  constructor(private http: HttpClient) { }\n\n  // Upload is HTTP POST action but the body is File object\n  upload<T>(file: File, url: string, ...params: string[]) {\n\n    const resourceUrl = this.buildUrl(url, ...params);\n\n    const formData: FormData = new FormData();\n    formData.append('fileKey', file, file.name);\n\n    const req = new HttpRequest('POST', resourceUrl, formData, {\n      reportProgress: false,\n      responseType: 'json',\n    });\n    return this.http.request<T>(req);\n    //return this.http.request(req);\n  }\n\n  // Download is HTTP GET action but the content is blob\n  download(fileName: string, url: string, ...params: string[]) {\n    const resourceUrl = this.buildUrl(url, ...params);\n\n    let downloadLink = fileName\n\n    // extract file name\n    params.forEach(p => {\n      let arr = p.split('=');\n      if (arr.length > 1) {\n        if (arr[0].toLowerCase() === 'filename') {\n          downloadLink = arr[1];\n        }\n      }\n    });\n\n    // Set content type for: json / csv / xml / pdf /xslx\n    let contentType = this.getMimeType(downloadLink);\n\n    return this.http.get(resourceUrl, {\n      responseType: 'blob',\n      reportProgress: true,\n      observe: 'events',\n      headers: new HttpHeaders({ 'Content-Type': contentType })\n    });\n  }\n\n  // Download2 is an alternative option to download\n  download2(fileName: string, url: string, ...params: string[]) {\n\n    let downloadLink = fileName\n\n    // extract file name\n    params.forEach(p => {\n      let arr = p.split('=');\n      if (arr.length > 1) {\n        if (arr[0].toLowerCase() === 'filename') {\n          downloadLink = arr[1];\n        }\n      }\n    });\n\n    let contentType = this.getMimeType(fileName);\n\n    const link = document.createElement('a');\n    link.href = this.buildUrl(url, ...params);\n    link.download = downloadLink;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n\n  }\n\n  // HTTP GET action\n  get<T>(url: string, ...params: string[]): Observable<T> {\n    const resourceUrl = this.buildUrl(url, ...params);\n    return this.http.get<T>(resourceUrl, httpOptions)\n  }\n\n  // HTTP POST action\n  post<T>(url: string, body?: string, ...params: string[]): Observable<T> {\n    const resourceUrl = this.buildUrl(url, ...params);\n    return this.http.post<T>(resourceUrl, body, httpOptions)\n  }\n\n  // HTTP PUT action\n  put<T>(url: string, body?: string, ...params: string[]): Observable<T> {\n    const resourceUrl = this.buildUrl(url, ...params);\n    return this.http.put<T>(resourceUrl, body, httpOptions)\n  }\n\n  // HTTP PATCH action\n  patch<T>(url: string, body?: string, ...params: string[]): Observable<T> {\n    const resourceUrl = this.buildUrl(url, ...params);\n    return this.http.patch<T>(resourceUrl, body, httpOptions)\n  }\n\n  // HTTP DELETE action\n  delete<T>(url: string, ...params: string[]): Observable<T> {\n    const resourceUrl = this.buildUrl(url, ...params);\n    return this.http.delete<T>(resourceUrl, httpOptions)\n  }\n\n  // Construct URL with parameters\n  private buildUrl(url: string, ...params: string[]) {\n    return (params === null) ? url : (params.length === 0) ? url : `${url}${params && params.length > 0 ? '?'+params.join('&') : ''}`;\n  }\n\n  // Return MIME type based on file extension\n  private getMimeType(fileName: string): string {\n    // Set content type for: json / csv / xml / pdf /xslx\n    let contentType = 'application/json';\n    if (fileName.toLowerCase().endsWith('csv')) {\n      contentType = 'text/csv';\n    } else if (fileName.toLowerCase().endsWith('xml')) {\n      contentType = 'text/xml';\n    } else if (fileName.toLowerCase().endsWith('pdf')) {\n      contentType = 'application/pdf';\n    } else if (fileName.toLowerCase().endsWith('xlsx')) {\n      contentType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n    }\n    return contentType\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class GooxConfig {\n    api: string = '';\n}\n","\nimport { Injectable, Inject } from '@angular/core';\nimport { RestUtil, EntityResponse, EntitiesResponse, ActionResponse } from '../utils';\nimport { GooxConfig } from '../config';\n\nimport { Campaign } from '.';\n\n\n\n// CampaignsEndPoint Services for campaigns actions \n@Injectable()\nexport class CampaignsEndPoint {\n\n  // URL to web api\n  private baseUrl = '/campaigns';\n\n  // Class constructor\n  constructor(@Inject('config') private config: GooxConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Create new campaign\n   */\n  create(body?: Campaign) {\n    return this.rest.post<EntityResponse<Campaign>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Update existing campaign\n   */\n  update(body?: Campaign) {\n    return this.rest.put<EntityResponse<Campaign>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Delete campaign and all its content\n   */\n  delete(id?: string) {\n    return this.rest.delete<ActionResponse>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Get a single campaign by id\n   */\n  get(id?: string) {\n    return this.rest.get<EntityResponse<Campaign>>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Find campaigns by query\n   */\n  find(search?: string, sort?: string, page?: number, size?: number) {\n    const params = [];\t\t\n    if (search != null) { params.push(`search=${search}`); }\n    if (sort != null) { params.push(`sort=${sort}`); }\n    if (page != null) { params.push(`page=${page}`); }\n    if (size != null) { params.push(`size=${size}`); }\n\n\t\treturn this.rest.get<EntitiesResponse<Campaign>>(`${this.baseUrl}`, ...params);\n  }\n\n}\n","\nimport { Injectable, Inject } from '@angular/core';\nimport { RestUtil, EntityResponse, EntitiesResponse, ActionResponse } from '../utils';\nimport { GooxConfig } from '../config';\n\nimport { Lead } from '.';\n\n\n\n// LeadsEndPoint Services for leads actions \n@Injectable()\nexport class LeadsEndPoint {\n\n  // URL to web api\n  private baseUrl = '/leads';\n\n  // Class constructor\n  constructor(@Inject('config') private config: GooxConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Create new lead\n   */\n  create(body?: Lead) {\n    return this.rest.post<EntityResponse<Lead>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Update existing lead\n   */\n  update(body?: Lead) {\n    return this.rest.put<EntityResponse<Lead>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Delete lead and all its content\n   */\n  delete(id?: string) {\n    return this.rest.delete<ActionResponse>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Get a single lead by id\n   */\n  get(id?: string) {\n    return this.rest.get<EntityResponse<Lead>>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Find leads by query\n   */\n  find(search?: string, type?: [], sort?: string, page?: number, size?: number) {\n    const params = [];\t\t\n    if (search != null) { params.push(`search=${search}`); }\n    if (type != null) { params.push(`type=${type}`); }\n    if (sort != null) { params.push(`sort=${sort}`); }\n    if (page != null) { params.push(`page=${page}`); }\n    if (size != null) { params.push(`size=${size}`); }\n\n\t\treturn this.rest.get<EntitiesResponse<Lead>>(`${this.baseUrl}`, ...params);\n  }\n\n}\n","\nimport { Injectable, Inject } from '@angular/core';\nimport { RestUtil, EntityResponse, EntitiesResponse, ActionResponse } from '../utils';\nimport { GooxConfig } from '../config';\n\nimport { Maintenance } from '.';\n\n\n\n// MaintenancesEndPoint Services for maintenances actions \n@Injectable()\nexport class MaintenancesEndPoint {\n\n  // URL to web api\n  private baseUrl = '/maintenances';\n\n  // Class constructor\n  constructor(@Inject('config') private config: GooxConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Create new maintenance\n   */\n  create(body?: Maintenance) {\n    return this.rest.post<EntityResponse<Maintenance>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Update existing maintenance\n   */\n  update(body?: Maintenance) {\n    return this.rest.put<EntityResponse<Maintenance>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Delete maintenance and all its content\n   */\n  delete(id?: string) {\n    return this.rest.delete<ActionResponse>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Get a single maintenance by id\n   */\n  get(id?: string) {\n    return this.rest.get<EntityResponse<Maintenance>>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Find maintenances by query\n   */\n  find(search?: string, action?: [], status?: [], sort?: string, page?: number, size?: number) {\n    const params = [];\t\t\n    if (search != null) { params.push(`search=${search}`); }\n    if (action != null) { params.push(`action=${action}`); }\n    if (status != null) { params.push(`status=${status}`); }\n    if (sort != null) { params.push(`sort=${sort}`); }\n    if (page != null) { params.push(`page=${page}`); }\n    if (size != null) { params.push(`size=${size}`); }\n\n\t\treturn this.rest.get<EntitiesResponse<Maintenance>>(`${this.baseUrl}`, ...params);\n  }\n\n}\n","\nimport { Injectable, Inject } from '@angular/core';\nimport { RestUtil, EntityResponse, EntitiesResponse, ActionResponse } from '../utils';\nimport { GooxConfig } from '../config';\n\nimport { SystemMessage } from '.';\n\n\n\n// SystemMessagesEndPoint Services for systemMessages actions \n@Injectable()\nexport class SystemMessagesEndPoint {\n\n  // URL to web api\n  private baseUrl = '/system_messages';\n\n  // Class constructor\n  constructor(@Inject('config') private config: GooxConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Create new systemMessage\n   */\n  create(body?: SystemMessage) {\n    return this.rest.post<EntityResponse<SystemMessage>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Update existing systemMessage\n   */\n  update(body?: SystemMessage) {\n    return this.rest.put<EntityResponse<SystemMessage>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Delete systemMessage and all its content\n   */\n  delete(id?: string) {\n    return this.rest.delete<ActionResponse>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Get a single systemMessage by id\n   */\n  get(id?: string) {\n    return this.rest.get<EntityResponse<SystemMessage>>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Find systemMessages by query\n   */\n  find(search?: string, type?: [], sort?: string, page?: number, size?: number) {\n    const params = [];\t\t\n    if (search != null) { params.push(`search=${search}`); }\n    if (type != null) { params.push(`type=${type}`); }\n    if (sort != null) { params.push(`sort=${sort}`); }\n    if (page != null) { params.push(`page=${page}`); }\n    if (size != null) { params.push(`size=${size}`); }\n\n\t\treturn this.rest.get<EntitiesResponse<SystemMessage>>(`${this.baseUrl}`, ...params);\n  }\n\n}\n","\nimport { Injectable, Inject } from '@angular/core';\nimport { RestUtil, EntityResponse, EntitiesResponse, ActionResponse } from '../utils';\nimport { GooxConfig } from '../config';\n\nimport { LoginParams } from '.';\nimport { User } from '.';\n\n\n\n// UserEndPoint Services for user registration and login \n@Injectable()\nexport class UserEndPoint {\n\n  // URL to web api\n  private baseUrl = '/user';\n\n  // Class constructor\n  constructor(@Inject('config') private config: GooxConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Authorize user, verify user exists in the system\n   * The response includes access token valid for 20 minutes. The client side should renew the token before expiration using refresh-token method\n   */\n  authorize(body?: LoginParams) {\n    return this.rest.post<EntityResponse<User>>(`${this.baseUrl}/authorize`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n}\n","\nimport { Injectable, Inject } from '@angular/core';\nimport { RestUtil, EntityResponse, EntitiesResponse, ActionResponse } from '../utils';\nimport { GooxConfig } from '../config';\n\nimport { Account } from '.';\n\n\n\n// AccountsEndPoint Services for user registration and login \n@Injectable()\nexport class AccountsEndPoint {\n\n  // URL to web api\n  private baseUrl = '/accounts';\n\n  // Class constructor\n  constructor(@Inject('config') private config: GooxConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Create new account\n   */\n  create(body?: Account) {\n    return this.rest.post<EntityResponse<Account>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Update existing account\n   */\n  update(body?: Account) {\n    return this.rest.put<EntityResponse<Account>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Delete account and all its content\n   */\n  delete(id?: string) {\n    return this.rest.delete<ActionResponse>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Get a single account by id\n   */\n  get(id?: string) {\n    return this.rest.get<EntityResponse<Account>>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Find accounts by query\n   */\n  find(search?: string, status?: [], sort?: string, page?: number, size?: number) {\n    const params = [];\t\t\n    if (search != null) { params.push(`search=${search}`); }\n    if (status != null) { params.push(`status=${status}`); }\n    if (sort != null) { params.push(`sort=${sort}`); }\n    if (page != null) { params.push(`page=${page}`); }\n    if (size != null) { params.push(`size=${size}`); }\n\n\t\treturn this.rest.get<EntitiesResponse<Account>>(`${this.baseUrl}`, ...params);\n  }\n\n}\n","\nimport { Injectable, Inject } from '@angular/core';\nimport { RestUtil, EntityResponse, EntitiesResponse, ActionResponse } from '../utils';\nimport { GooxConfig } from '../config';\n\nimport { TimeSeries } from '.';\nimport { AuditLog } from '.';\n\n\n\n// AuditLogsEndPoint Services for auditLogs actions \n@Injectable()\nexport class AuditLogsEndPoint {\n\n  // URL to web api\n  private baseUrl = '/audit_logs';\n\n  // Class constructor\n  constructor(@Inject('config') private config: GooxConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Create new auditLog\n   */\n  create(body?: AuditLog) {\n    return this.rest.post<EntityResponse<AuditLog>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Get a single auditLog by id\n   */\n  get(id?: string) {\n    return this.rest.get<EntityResponse<AuditLog>>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Find auditLogs by query\n   */\n  find(from?: number, to?: number, userId?: string, action?: string, itemType?: string, itemId?: string, itemName?: string, search?: string, sort?: string, page?: number, size?: number) {\n    const params = [];\t\t\n    if (from != null) { params.push(`from=${from}`); }\n    if (to != null) { params.push(`to=${to}`); }\n    if (userId != null) { params.push(`userId=${userId}`); }\n    if (action != null) { params.push(`action=${action}`); }\n    if (itemType != null) { params.push(`itemType=${itemType}`); }\n    if (itemId != null) { params.push(`itemId=${itemId}`); }\n    if (itemName != null) { params.push(`itemName=${itemName}`); }\n    if (search != null) { params.push(`search=${search}`); }\n    if (sort != null) { params.push(`sort=${sort}`); }\n    if (page != null) { params.push(`page=${page}`); }\n    if (size != null) { params.push(`size=${size}`); }\n\n\t\treturn this.rest.get<EntitiesResponse<AuditLog>>(`${this.baseUrl}`, ...params);\n  }\n\n  /**\n   * Find auditLogs count histogram over time\n   */\n  histogram(from?: number, to?: number, userId?: string, action?: string, itemType?: string, itemId?: string, itemName?: string, search?: string, sort?: string, page?: number, size?: number) {\n    const params = [];\t\t\n    if (from != null) { params.push(`from=${from}`); }\n    if (to != null) { params.push(`to=${to}`); }\n    if (userId != null) { params.push(`userId=${userId}`); }\n    if (action != null) { params.push(`action=${action}`); }\n    if (itemType != null) { params.push(`itemType=${itemType}`); }\n    if (itemId != null) { params.push(`itemId=${itemId}`); }\n    if (itemName != null) { params.push(`itemName=${itemName}`); }\n    if (search != null) { params.push(`search=${search}`); }\n    if (sort != null) { params.push(`sort=${sort}`); }\n    if (page != null) { params.push(`page=${page}`); }\n    if (size != null) { params.push(`size=${size}`); }\n\n\t\treturn this.rest.get<EntityResponse<TimeSeries<number>>>(`${this.baseUrl}/histogram`, ...params);\n  }\n\n}\n","\nimport { Injectable, Inject } from '@angular/core';\nimport { RestUtil, EntityResponse, EntitiesResponse, ActionResponse } from '../utils';\nimport { GooxConfig } from '../config';\n\nimport { Booking } from '.';\n\n\n\n// BookingsEndPoint Services for bookings actions \n@Injectable()\nexport class BookingsEndPoint {\n\n  // URL to web api\n  private baseUrl = '/bookings';\n\n  // Class constructor\n  constructor(@Inject('config') private config: GooxConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Create new booking\n   */\n  create(body?: Booking) {\n    return this.rest.post<EntityResponse<Booking>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Update existing booking\n   */\n  update(body?: Booking) {\n    return this.rest.put<EntityResponse<Booking>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Delete booking and all its content\n   */\n  delete(id?: string) {\n    return this.rest.delete<ActionResponse>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Get a single booking by id\n   */\n  get(id?: string) {\n    return this.rest.get<EntityResponse<Booking>>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Find bookings by query\n   */\n  find(search?: string, sort?: string, page?: number, size?: number) {\n    const params = [];\t\t\n    if (search != null) { params.push(`search=${search}`); }\n    if (sort != null) { params.push(`sort=${sort}`); }\n    if (page != null) { params.push(`page=${page}`); }\n    if (size != null) { params.push(`size=${size}`); }\n\n\t\treturn this.rest.get<EntitiesResponse<Booking>>(`${this.baseUrl}`, ...params);\n  }\n\n}\n","\nimport { Injectable, Inject } from '@angular/core';\nimport { RestUtil, EntityResponse, EntitiesResponse, ActionResponse } from '../utils';\nimport { GooxConfig } from '../config';\n\nimport { Document } from '.';\n\n\n\n// DocumentsEndPoint Services for documents actions \n@Injectable()\nexport class DocumentsEndPoint {\n\n  // URL to web api\n  private baseUrl = '/documents';\n\n  // Class constructor\n  constructor(@Inject('config') private config: GooxConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Create new document\n   */\n  create(body?: Document) {\n    return this.rest.post<EntityResponse<Document>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Update existing document\n   */\n  update(body?: Document) {\n    return this.rest.put<EntityResponse<Document>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Delete document and all its content\n   */\n  delete(id?: string) {\n    return this.rest.delete<ActionResponse>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Get a single document by id\n   */\n  get(id?: string) {\n    return this.rest.get<EntityResponse<Document>>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Find documents by query\n   */\n  find(search?: string, sort?: string, page?: number, size?: number) {\n    const params = [];\t\t\n    if (search != null) { params.push(`search=${search}`); }\n    if (sort != null) { params.push(`sort=${sort}`); }\n    if (page != null) { params.push(`page=${page}`); }\n    if (size != null) { params.push(`size=${size}`); }\n\n\t\treturn this.rest.get<EntitiesResponse<Document>>(`${this.baseUrl}`, ...params);\n  }\n\n}\n","\nimport { Injectable, Inject } from '@angular/core';\nimport { RestUtil, EntityResponse, EntitiesResponse, ActionResponse } from '../utils';\nimport { GooxConfig } from '../config';\n\nimport { MessageConfirm } from '.';\n\n\n\n// MessageConfirmsEndPoint Services for messageConfirms actions \n@Injectable()\nexport class MessageConfirmsEndPoint {\n\n  // URL to web api\n  private baseUrl = '/message_confirms';\n\n  // Class constructor\n  constructor(@Inject('config') private config: GooxConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Create new messageConfirm\n   */\n  create(body?: MessageConfirm) {\n    return this.rest.post<EntityResponse<MessageConfirm>>(`${this.baseUrl}/{id}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Update existing messageConfirm\n   */\n  update(body?: MessageConfirm) {\n    return this.rest.put<EntityResponse<MessageConfirm>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Delete messageConfirm and all its content\n   */\n  delete(id?: string) {\n    return this.rest.delete<ActionResponse>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Get a single messageConfirm by id\n   */\n  get(id?: string) {\n    return this.rest.get<EntityResponse<MessageConfirm>>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Find messageConfirms by query\n   */\n  find(search?: string, type?: [], status?: [], sort?: string, page?: number, size?: number) {\n    const params = [];\t\t\n    if (search != null) { params.push(`search=${search}`); }\n    if (type != null) { params.push(`type=${type}`); }\n    if (status != null) { params.push(`status=${status}`); }\n    if (sort != null) { params.push(`sort=${sort}`); }\n    if (page != null) { params.push(`page=${page}`); }\n    if (size != null) { params.push(`size=${size}`); }\n\n\t\treturn this.rest.get<EntitiesResponse<MessageConfirm>>(`${this.baseUrl}`, ...params);\n  }\n\n}\n","\nimport { Injectable, Inject } from '@angular/core';\nimport { RestUtil, EntityResponse, EntitiesResponse, ActionResponse } from '../utils';\nimport { GooxConfig } from '../config';\n\nimport { User } from '.';\n\n\n\n// UsersEndPoint Services for users actions \n@Injectable()\nexport class UsersEndPoint {\n\n  // URL to web api\n  private baseUrl = '/users';\n\n  // Class constructor\n  constructor(@Inject('config') private config: GooxConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Create new user\n   */\n  create(body?: User) {\n    return this.rest.post<EntityResponse<User>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Update existing user\n   */\n  update(body?: User) {\n    return this.rest.put<EntityResponse<User>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Delete user and all its content\n   */\n  delete(id?: string) {\n    return this.rest.delete<ActionResponse>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Get a single user by id\n   */\n  get(id?: string) {\n    return this.rest.get<EntityResponse<User>>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Find users by query\n   */\n  find(search?: string, type?: [], status?: [], sort?: string, page?: number, size?: number) {\n    const params = [];\t\t\n    if (search != null) { params.push(`search=${search}`); }\n    if (type != null) { params.push(`type=${type}`); }\n    if (status != null) { params.push(`status=${status}`); }\n    if (sort != null) { params.push(`sort=${sort}`); }\n    if (page != null) { params.push(`page=${page}`); }\n    if (size != null) { params.push(`size=${size}`); }\n\n\t\treturn this.rest.get<EntitiesResponse<User>>(`${this.baseUrl}`, ...params);\n  }\n\n}\n","\nimport { Injectable, Inject } from '@angular/core';\nimport { RestUtil, EntityResponse, EntitiesResponse, ActionResponse } from '../utils';\nimport { GooxConfig } from '../config';\n\nimport { Airplane } from '.';\n\n\n\n// AirplanesEndPoint Services for airplanes actions \n@Injectable()\nexport class AirplanesEndPoint {\n\n  // URL to web api\n  private baseUrl = '/airplanes';\n\n  // Class constructor\n  constructor(@Inject('config') private config: GooxConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Create new airplane\n   */\n  create(body?: Airplane) {\n    return this.rest.post<EntityResponse<Airplane>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Update existing airplane\n   */\n  update(body?: Airplane) {\n    return this.rest.put<EntityResponse<Airplane>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Delete airplane and all its content\n   */\n  delete(id?: string) {\n    return this.rest.delete<ActionResponse>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Get a single airplane by id\n   */\n  get(id?: string) {\n    return this.rest.get<EntityResponse<Airplane>>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Find airplanes by query\n   */\n  find(search?: string, status?: [], sort?: string, page?: number, size?: number) {\n    const params = [];\t\t\n    if (search != null) { params.push(`search=${search}`); }\n    if (status != null) { params.push(`status=${status}`); }\n    if (sort != null) { params.push(`sort=${sort}`); }\n    if (page != null) { params.push(`page=${page}`); }\n    if (size != null) { params.push(`size=${size}`); }\n\n\t\treturn this.rest.get<EntitiesResponse<Airplane>>(`${this.baseUrl}`, ...params);\n  }\n\n}\n","\nimport { Injectable, Inject } from '@angular/core';\nimport { RestUtil, EntityResponse, EntitiesResponse, ActionResponse } from '../utils';\nimport { GooxConfig } from '../config';\n\nimport { Contact } from '.';\n\n\n\n// ContactsEndPoint Services for contacts actions \n@Injectable()\nexport class ContactsEndPoint {\n\n  // URL to web api\n  private baseUrl = '/contacts';\n\n  // Class constructor\n  constructor(@Inject('config') private config: GooxConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Create new contact\n   */\n  create(body?: Contact) {\n    return this.rest.post<EntityResponse<Contact>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Update existing contact\n   */\n  update(body?: Contact) {\n    return this.rest.put<EntityResponse<Contact>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Delete contact and all its content\n   */\n  delete(id?: string) {\n    return this.rest.delete<ActionResponse>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Get a single contact by id\n   */\n  get(id?: string) {\n    return this.rest.get<EntityResponse<Contact>>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Find contacts by query\n   */\n  find(search?: string, status?: [], sort?: string, page?: number, size?: number) {\n    const params = [];\t\t\n    if (search != null) { params.push(`search=${search}`); }\n    if (status != null) { params.push(`status=${status}`); }\n    if (sort != null) { params.push(`sort=${sort}`); }\n    if (page != null) { params.push(`page=${page}`); }\n    if (size != null) { params.push(`size=${size}`); }\n\n\t\treturn this.rest.get<EntitiesResponse<Contact>>(`${this.baseUrl}`, ...params);\n  }\n\n}\n","\nimport { Injectable, Inject } from '@angular/core';\nimport { RestUtil, EntityResponse, EntitiesResponse, ActionResponse } from '../utils';\nimport { GooxConfig } from '../config';\n\nimport { Credit } from '.';\n\n\n\n// CreditsEndPoint Services for credits actions \n@Injectable()\nexport class CreditsEndPoint {\n\n  // URL to web api\n  private baseUrl = '/credits';\n\n  // Class constructor\n  constructor(@Inject('config') private config: GooxConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Create new credit\n   */\n  create(body?: Credit) {\n    return this.rest.post<EntityResponse<Credit>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Update existing credit\n   */\n  update(body?: Credit) {\n    return this.rest.put<EntityResponse<Credit>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Delete credit and all its content\n   */\n  delete(id?: string) {\n    return this.rest.delete<ActionResponse>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Get a single credit by id\n   */\n  get(id?: string) {\n    return this.rest.get<EntityResponse<Credit>>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Find credits by query\n   */\n  find(search?: string, sort?: string, page?: number, size?: number) {\n    const params = [];\t\t\n    if (search != null) { params.push(`search=${search}`); }\n    if (sort != null) { params.push(`sort=${sort}`); }\n    if (page != null) { params.push(`page=${page}`); }\n    if (size != null) { params.push(`size=${size}`); }\n\n\t\treturn this.rest.get<EntitiesResponse<Credit>>(`${this.baseUrl}`, ...params);\n  }\n\n}\n","\nimport { Injectable, Inject } from '@angular/core';\nimport { RestUtil, EntityResponse, EntitiesResponse, ActionResponse } from '../utils';\nimport { GooxConfig } from '../config';\n\nimport { Certificate } from '.';\n\n\n\n// CertificatesEndPoint Services for certificates actions \n@Injectable()\nexport class CertificatesEndPoint {\n\n  // URL to web api\n  private baseUrl = '/certificates';\n\n  // Class constructor\n  constructor(@Inject('config') private config: GooxConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Create new certificate\n   */\n  create(body?: Certificate) {\n    return this.rest.post<EntityResponse<Certificate>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Update existing certificate\n   */\n  update(body?: Certificate) {\n    return this.rest.put<EntityResponse<Certificate>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Delete certificate and all its content\n   */\n  delete(id?: string) {\n    return this.rest.delete<ActionResponse>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Get a single certificate by id\n   */\n  get(id?: string) {\n    return this.rest.get<EntityResponse<Certificate>>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Find certificates by query\n   */\n  find(search?: string, status?: [], sort?: string, page?: number, size?: number) {\n    const params = [];\t\t\n    if (search != null) { params.push(`search=${search}`); }\n    if (status != null) { params.push(`status=${status}`); }\n    if (sort != null) { params.push(`sort=${sort}`); }\n    if (page != null) { params.push(`page=${page}`); }\n    if (size != null) { params.push(`size=${size}`); }\n\n\t\treturn this.rest.get<EntitiesResponse<Certificate>>(`${this.baseUrl}`, ...params);\n  }\n\n}\n","\nimport { Injectable, Inject } from '@angular/core';\nimport { RestUtil, EntityResponse, EntitiesResponse, ActionResponse } from '../utils';\nimport { GooxConfig } from '../config';\n\nimport { FlightTicket } from '.';\n\n\n\n// FlightTicketsEndPoint Services for flightTickets actions \n@Injectable()\nexport class FlightTicketsEndPoint {\n\n  // URL to web api\n  private baseUrl = '/flight_tickets';\n\n  // Class constructor\n  constructor(@Inject('config') private config: GooxConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Create new flightTicket\n   */\n  create(body?: FlightTicket) {\n    return this.rest.post<EntityResponse<FlightTicket>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Update existing flightTicket\n   */\n  update(body?: FlightTicket) {\n    return this.rest.put<EntityResponse<FlightTicket>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Delete flightTicket and all its content\n   */\n  delete(id?: string) {\n    return this.rest.delete<ActionResponse>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Get a single flightTicket by id\n   */\n  get(id?: string) {\n    return this.rest.get<EntityResponse<FlightTicket>>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Find flightTickets by query\n   */\n  find(search?: string, status?: [], sort?: string, page?: number, size?: number) {\n    const params = [];\t\t\n    if (search != null) { params.push(`search=${search}`); }\n    if (status != null) { params.push(`status=${status}`); }\n    if (sort != null) { params.push(`sort=${sort}`); }\n    if (page != null) { params.push(`page=${page}`); }\n    if (size != null) { params.push(`size=${size}`); }\n\n\t\treturn this.rest.get<EntitiesResponse<FlightTicket>>(`${this.baseUrl}`, ...params);\n  }\n\n}\n","\nimport { Injectable, Inject } from '@angular/core';\nimport { RestUtil, EntityResponse, EntitiesResponse, ActionResponse } from '../utils';\nimport { GooxConfig } from '../config';\n\nimport { Flight } from '.';\n\n\n\n// FlightsEndPoint Services for flights actions \n@Injectable()\nexport class FlightsEndPoint {\n\n  // URL to web api\n  private baseUrl = '/flights';\n\n  // Class constructor\n  constructor(@Inject('config') private config: GooxConfig, private rest: RestUtil) {\n    this.baseUrl = this.config.api + this.baseUrl;\n  }\n\n\n  /**\n   * Create new flight\n   */\n  create(body?: Flight) {\n    return this.rest.post<EntityResponse<Flight>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Update existing flight\n   */\n  update(body?: Flight) {\n    return this.rest.put<EntityResponse<Flight>>(`${this.baseUrl}`, typeof body === 'object' ? JSON.stringify(body) : body);\n  }\n\n  /**\n   * Delete flight and all its content\n   */\n  delete(id?: string) {\n    return this.rest.delete<ActionResponse>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Get a single flight by id\n   */\n  get(id?: string) {\n    return this.rest.get<EntityResponse<Flight>>(`${this.baseUrl}/${id}`);\n  }\n\n  /**\n   * Find flights by query\n   */\n  find(search?: string, type?: [], status?: [], sort?: string, page?: number, size?: number) {\n    const params = [];\t\t\n    if (search != null) { params.push(`search=${search}`); }\n    if (type != null) { params.push(`type=${type}`); }\n    if (status != null) { params.push(`status=${status}`); }\n    if (sort != null) { params.push(`sort=${sort}`); }\n    if (page != null) { params.push(`page=${page}`); }\n    if (size != null) { params.push(`size=${size}`); }\n\n\t\treturn this.rest.get<EntitiesResponse<Flight>>(`${this.baseUrl}`, ...params);\n  }\n\n}\n","\nimport { MessageConfirmsEndPoint } from '.';\nimport { UsersEndPoint } from '.';\nimport { AccountsEndPoint } from '.';\nimport { AuditLogsEndPoint } from '.';\nimport { BookingsEndPoint } from '.';\nimport { DocumentsEndPoint } from '.';\nimport { AirplanesEndPoint } from '.';\nimport { ContactsEndPoint } from '.';\nimport { CreditsEndPoint } from '.';\nimport { CertificatesEndPoint } from '.';\nimport { FlightTicketsEndPoint } from '.';\nimport { FlightsEndPoint } from '.';\nimport { UserEndPoint } from '.';\nimport { CampaignsEndPoint } from '.';\nimport { LeadsEndPoint } from '.';\nimport { MaintenancesEndPoint } from '.';\nimport { SystemMessagesEndPoint } from '.';\n\nexport const Services = [\n    MessageConfirmsEndPoint,\n    UsersEndPoint,\n    AccountsEndPoint,\n    AuditLogsEndPoint,\n    BookingsEndPoint,\n    DocumentsEndPoint,\n    AirplanesEndPoint,\n    ContactsEndPoint,\n    CreditsEndPoint,\n    CertificatesEndPoint,\n    FlightTicketsEndPoint,\n    FlightsEndPoint,\n    UserEndPoint,\n    CampaignsEndPoint,\n    LeadsEndPoint,\n    MaintenancesEndPoint,\n    SystemMessagesEndPoint,\n    \n]\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Services } from './lib/services.export';\nimport { RestUtil } from './utils/rest-util';\nimport { GooxConfig } from './config';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule]\n})\nexport class NgxGooxLibModule {\n  static forRoot(config: GooxConfig): ModuleWithProviders<NgxGooxLibModule> {\n    return {\n      ngModule: NgxGooxLibModule,\n      providers: [\n        { provide: 'config', useValue: config },\n        RestUtil,\n        ...Services\n      ]\n    };\n  }\n}\n\n","/*\n * Public API Surface of ngx-goox-lib\n */\n\nexport * from './ngx-goox-lib.module';\nexport * from './lib';\nexport * from './utils';\nexport * from './config';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.RestUtil"],"mappings":"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"}
import { BaseEntity } from '.';
import { ColumnDef } from '.';
// Account entity is a billing account in the system
export class Account extends BaseEntity {
}
export function GetAccountColumnsDef() {
    let result = [];
    result.push(new ColumnDef("id", "string", ""));
    result.push(new ColumnDef("createdOn", "number", "datetime"));
    result.push(new ColumnDef("updatedOn", "number", "datetime"));
    result.push(new ColumnDef("name", "string", ""));
    result.push(new ColumnDef("description", "string", ""));
    result.push(new ColumnDef("status", "AccountStatusCode", ""));
    result.push(new ColumnDef("phone", "string", ""));
    result.push(new ColumnDef("fax", "string", ""));
    result.push(new ColumnDef("mobile", "string", ""));
    result.push(new ColumnDef("billingAddress", "Address", ""));
    result.push(new ColumnDef("shippingAddress", "Address", ""));
    result.push(new ColumnDef("campaignId", "string", ""));
    result.push(new ColumnDef("enableCredit", "boolean", ""));
    result.push(new ColumnDef("currentCredit", "number", "decimal"));
    result.push(new ColumnDef("baseRate", "number", "decimal"));
    result.push(new ColumnDef("percentageDiscount", "number", ""));
    result.push(new ColumnDef("invoiceId", "string", ""));
    result.push(new ColumnDef("documents", "Document", ""));
    return result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWNjb3VudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1nb294LWxpYi9zcmMvbGliL0FjY291bnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLEdBQUcsQ0FBQztBQUMvQixPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sR0FBRyxDQUFDO0FBSTlCLG9EQUFvRDtBQUNwRCxNQUFNLE9BQU8sT0FBUSxTQUFRLFVBQVU7Q0FnRHRDO0FBRUQsTUFBTSxVQUFVLG9CQUFvQjtJQUNoQyxJQUFJLE1BQU0sR0FBaUIsRUFBRSxDQUFDO0lBQ2pDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsSUFBSSxFQUFFLFFBQVEsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQy9DLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsV0FBVyxFQUFFLFFBQVEsRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDO0lBQzlELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsV0FBVyxFQUFFLFFBQVEsRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDO0lBQzlELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsTUFBTSxFQUFFLFFBQVEsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ2pELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsYUFBYSxFQUFFLFFBQVEsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3hELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsUUFBUSxFQUFFLG1CQUFtQixFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDOUQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDbEQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxLQUFLLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDaEQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxRQUFRLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDbkQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxnQkFBZ0IsRUFBRSxTQUFTLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUM1RCxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksU0FBUyxDQUFDLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzdELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsWUFBWSxFQUFFLFFBQVEsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3ZELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsY0FBYyxFQUFFLFNBQVMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzFELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsZUFBZSxFQUFFLFFBQVEsRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDO0lBQ2pFLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsVUFBVSxFQUFFLFFBQVEsRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDO0lBQzVELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsb0JBQW9CLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDL0QsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxXQUFXLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDdEQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxXQUFXLEVBQUUsVUFBVSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFHeEQsT0FBTyxNQUFNLENBQUM7QUFDZixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBBY2NvdW50U3RhdHVzQ29kZSB9IGZyb20gJy4nO1xuaW1wb3J0IHsgQWRkcmVzcyB9IGZyb20gJy4nO1xuaW1wb3J0IHsgRG9jdW1lbnQgfSBmcm9tICcuJztcbmltcG9ydCB7IEJhc2VFbnRpdHkgfSBmcm9tICcuJztcbmltcG9ydCB7IENvbHVtbkRlZiB9IGZyb20gJy4nO1xuXG5cblxuLy8gQWNjb3VudCBlbnRpdHkgaXMgYSBiaWxsaW5nIGFjY291bnQgaW4gdGhlIHN5c3RlbVxuZXhwb3J0IGNsYXNzIEFjY291bnQgZXh0ZW5kcyBCYXNlRW50aXR5IHtcbiBcbiAgICAvLyBBY2NvdW50IG5hbWUgXG4gICAgcHVibGljIG5hbWU6IHN0cmluZztcbiBcbiAgICAvLyBBY2NvdW50IGRlc2NyaXB0aW9uIFxuICAgIHB1YmxpYyBkZXNjcmlwdGlvbjogc3RyaW5nO1xuIFxuICAgIC8vIEFjY291bnQgc3RhdHVzOiBVTkRFRklORUQgfCBBQ1RJVkUgfCBJTkFDVElWRSB8IEJMT0NLRUQgfCBTVVNQRU5ERUQgXG4gICAgcHVibGljIHN0YXR1czogQWNjb3VudFN0YXR1c0NvZGU7XG4gXG4gICAgLy8gT2ZmaWNlIC8gTGFuZGxpbmUgcGhvbmUgXG4gICAgcHVibGljIHBob25lOiBzdHJpbmc7XG4gXG4gICAgLy8gT2ZmaWNlIC8gTGFuZGxpbmUgZmF4IFxuICAgIHB1YmxpYyBmYXg6IHN0cmluZztcbiBcbiAgICAvLyBNb2JpbGUgcGhvbmUgXG4gICAgcHVibGljIG1vYmlsZTogc3RyaW5nO1xuIFxuICAgIC8vIEJpbGxpbmcgYWRkcmVzcyBcbiAgICBwdWJsaWMgYmlsbGluZ0FkZHJlc3M6IEFkZHJlc3M7XG4gXG4gICAgLy8gU2hpcHBpbmcgYWRkcmVzcyBcbiAgICBwdWJsaWMgc2hpcHBpbmdBZGRyZXNzOiBBZGRyZXNzO1xuIFxuICAgIC8vIENhbXBhaWduIElkIFxuICAgIHB1YmxpYyBjYW1wYWlnbklkOiBzdHJpbmc7XG4gXG4gICAgLy8gSXMgY3JlZGl0IGVuYWJsZWQgZm9yIHRoaXMgYWNjb3VudCBcbiAgICBwdWJsaWMgZW5hYmxlQ3JlZGl0OiBib29sZWFuO1xuIFxuICAgIC8vIEN1cnJlbnQgYWNjb3VudCBjcmVkaXQgXG4gICAgcHVibGljIGN1cnJlbnRDcmVkaXQ6IG51bWJlcjtcbiBcbiAgICAvLyBCYXNlIHJhdGUgZm9yIGJpbGxpbmcgXG4gICAgcHVibGljIGJhc2VSYXRlOiBudW1iZXI7XG4gXG4gICAgLy8gUGVybWFuZW50IGRpc2NvdW50IChwZXJjZW50YWdlKSBcbiAgICBwdWJsaWMgcGVyY2VudGFnZURpc2NvdW50OiBudW1iZXI7XG4gXG4gICAgLy8gR3JlZW4gaW52b2ljZSBJZCBcbiAgICBwdWJsaWMgaW52b2ljZUlkOiBzdHJpbmc7XG4gXG4gICAgLy8gUmVsYXRlZCBhY2NvdW50IGRvY3VtZW50cyBcbiAgICBwdWJsaWMgZG9jdW1lbnRzOiBEb2N1bWVudFtdO1xuIFxuIFxufVxuXG5leHBvcnQgZnVuY3Rpb24gR2V0QWNjb3VudENvbHVtbnNEZWYoKSA6IENvbHVtbkRlZltdIHtcbiAgICBsZXQgcmVzdWx0IDogQ29sdW1uRGVmW10gPSBbXTtcblx0cmVzdWx0LnB1c2gobmV3IENvbHVtbkRlZihcImlkXCIsIFwic3RyaW5nXCIsIFwiXCIpKTtcblx0cmVzdWx0LnB1c2gobmV3IENvbHVtbkRlZihcImNyZWF0ZWRPblwiLCBcIm51bWJlclwiLCBcImRhdGV0aW1lXCIpKTtcblx0cmVzdWx0LnB1c2gobmV3IENvbHVtbkRlZihcInVwZGF0ZWRPblwiLCBcIm51bWJlclwiLCBcImRhdGV0aW1lXCIpKTtcblx0cmVzdWx0LnB1c2gobmV3IENvbHVtbkRlZihcIm5hbWVcIiwgXCJzdHJpbmdcIiwgXCJcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwiZGVzY3JpcHRpb25cIiwgXCJzdHJpbmdcIiwgXCJcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwic3RhdHVzXCIsIFwiQWNjb3VudFN0YXR1c0NvZGVcIiwgXCJcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwicGhvbmVcIiwgXCJzdHJpbmdcIiwgXCJcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwiZmF4XCIsIFwic3RyaW5nXCIsIFwiXCIpKTtcblx0cmVzdWx0LnB1c2gobmV3IENvbHVtbkRlZihcIm1vYmlsZVwiLCBcInN0cmluZ1wiLCBcIlwiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJiaWxsaW5nQWRkcmVzc1wiLCBcIkFkZHJlc3NcIiwgXCJcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwic2hpcHBpbmdBZGRyZXNzXCIsIFwiQWRkcmVzc1wiLCBcIlwiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJjYW1wYWlnbklkXCIsIFwic3RyaW5nXCIsIFwiXCIpKTtcblx0cmVzdWx0LnB1c2gobmV3IENvbHVtbkRlZihcImVuYWJsZUNyZWRpdFwiLCBcImJvb2xlYW5cIiwgXCJcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwiY3VycmVudENyZWRpdFwiLCBcIm51bWJlclwiLCBcImRlY2ltYWxcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwiYmFzZVJhdGVcIiwgXCJudW1iZXJcIiwgXCJkZWNpbWFsXCIpKTtcblx0cmVzdWx0LnB1c2gobmV3IENvbHVtbkRlZihcInBlcmNlbnRhZ2VEaXNjb3VudFwiLCBcIm51bWJlclwiLCBcIlwiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJpbnZvaWNlSWRcIiwgXCJzdHJpbmdcIiwgXCJcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwiZG9jdW1lbnRzXCIsIFwiRG9jdW1lbnRcIiwgXCJcIikpO1xuXHRcblxuXHRyZXR1cm4gcmVzdWx0O1xufVxuXG5cblxuXG5cblxuIl19
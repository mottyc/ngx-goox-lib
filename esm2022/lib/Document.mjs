import { BaseEntity } from '.';
import { ColumnDef } from '.';
// Document entity represents a document in the system
export class Document extends BaseEntity {
}
export function GetDocumentColumnsDef() {
    let result = [];
    result.push(new ColumnDef("id", "string", ""));
    result.push(new ColumnDef("createdOn", "number", "datetime"));
    result.push(new ColumnDef("updatedOn", "number", "datetime"));
    result.push(new ColumnDef("name", "string", ""));
    result.push(new ColumnDef("description", "string", ""));
    result.push(new ColumnDef("createdBy", "string", ""));
    result.push(new ColumnDef("activeFrom", "number", "datetime"));
    result.push(new ColumnDef("activeUntil", "number", "datetime"));
    result.push(new ColumnDef("category", "string", ""));
    result.push(new ColumnDef("revisions", "DocumentRevision", ""));
    result.push(new ColumnDef("activeRevision", "string", ""));
    result.push(new ColumnDef("activeUrl", "string", ""));
    result.push(new ColumnDef("activeMimeType", "string", ""));
    return result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRG9jdW1lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtZ29veC1saWIvc3JjL2xpYi9Eb2N1bWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sR0FBRyxDQUFDO0FBQy9CLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxHQUFHLENBQUM7QUFJOUIsc0RBQXNEO0FBQ3RELE1BQU0sT0FBTyxRQUFTLFNBQVEsVUFBVTtDQWlDdkM7QUFFRCxNQUFNLFVBQVUscUJBQXFCO0lBQ2pDLElBQUksTUFBTSxHQUFpQixFQUFFLENBQUM7SUFDakMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxJQUFJLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDL0MsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxXQUFXLEVBQUUsUUFBUSxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFDOUQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxXQUFXLEVBQUUsUUFBUSxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFDOUQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxNQUFNLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDakQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxhQUFhLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDeEQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxXQUFXLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDdEQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxZQUFZLEVBQUUsUUFBUSxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFDL0QsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxhQUFhLEVBQUUsUUFBUSxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFDaEUsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxVQUFVLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDckQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxXQUFXLEVBQUUsa0JBQWtCLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNoRSxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksU0FBUyxDQUFDLGdCQUFnQixFQUFFLFFBQVEsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzNELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsV0FBVyxFQUFFLFFBQVEsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3RELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsZ0JBQWdCLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFHM0QsT0FBTyxNQUFNLENBQUM7QUFDZixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBEb2N1bWVudFJldmlzaW9uIH0gZnJvbSAnLic7XG5pbXBvcnQgeyBCYXNlRW50aXR5IH0gZnJvbSAnLic7XG5pbXBvcnQgeyBDb2x1bW5EZWYgfSBmcm9tICcuJztcblxuXG5cbi8vIERvY3VtZW50IGVudGl0eSByZXByZXNlbnRzIGEgZG9jdW1lbnQgaW4gdGhlIHN5c3RlbVxuZXhwb3J0IGNsYXNzIERvY3VtZW50IGV4dGVuZHMgQmFzZUVudGl0eSB7XG4gXG4gICAgLy8gRG9jdW1lbnQgbmFtZSBcbiAgICBwdWJsaWMgbmFtZTogc3RyaW5nO1xuIFxuICAgIC8vIERvY3VtZW50IGRlc2NyaXB0aW9uIFxuICAgIHB1YmxpYyBkZXNjcmlwdGlvbjogc3RyaW5nO1xuIFxuICAgIC8vIERvY3VtZW50IGNyZWF0b3IgXG4gICAgcHVibGljIGNyZWF0ZWRCeTogc3RyaW5nO1xuIFxuICAgIC8vIERvY3VtZW50IGFjdGl2ZSBmcm9tIFtlcG9jaCB0aW1lIG1pbGxpc2Vjb25kc10gXG4gICAgcHVibGljIGFjdGl2ZUZyb206IG51bWJlcjtcbiBcbiAgICAvLyBEb2N1bWVudCBhY3RpdmUgdW50aWwgW2Vwb2NoIHRpbWUgbWlsbGlzZWNvbmRzXSBcbiAgICBwdWJsaWMgYWN0aXZlVW50aWw6IG51bWJlcjtcbiBcbiAgICAvLyBEb2N1bWVudCBjYXRlZ29yeSBcbiAgICBwdWJsaWMgY2F0ZWdvcnk6IHN0cmluZztcbiBcbiAgICAvLyBEb2N1bWVudCBSZXZpc2lvbnMgXG4gICAgcHVibGljIHJldmlzaW9uczogRG9jdW1lbnRSZXZpc2lvbltdO1xuIFxuICAgIC8vIEFjdGl2ZSAoY3VycmVudCkgcmV2aXNpb24gXG4gICAgcHVibGljIGFjdGl2ZVJldmlzaW9uOiBzdHJpbmc7XG4gXG4gICAgLy8gQWN0aXZlIHJldmlzaW9uIFVSTCBcbiAgICBwdWJsaWMgYWN0aXZlVXJsOiBzdHJpbmc7XG4gXG4gICAgLy8gQWN0aXZlIHJldmlzaW9uIE1JTUUgdHlwZSBcbiAgICBwdWJsaWMgYWN0aXZlTWltZVR5cGU6IHN0cmluZztcbiBcbiBcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIEdldERvY3VtZW50Q29sdW1uc0RlZigpIDogQ29sdW1uRGVmW10ge1xuICAgIGxldCByZXN1bHQgOiBDb2x1bW5EZWZbXSA9IFtdO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwiaWRcIiwgXCJzdHJpbmdcIiwgXCJcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwiY3JlYXRlZE9uXCIsIFwibnVtYmVyXCIsIFwiZGF0ZXRpbWVcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwidXBkYXRlZE9uXCIsIFwibnVtYmVyXCIsIFwiZGF0ZXRpbWVcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwibmFtZVwiLCBcInN0cmluZ1wiLCBcIlwiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJkZXNjcmlwdGlvblwiLCBcInN0cmluZ1wiLCBcIlwiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJjcmVhdGVkQnlcIiwgXCJzdHJpbmdcIiwgXCJcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwiYWN0aXZlRnJvbVwiLCBcIm51bWJlclwiLCBcImRhdGV0aW1lXCIpKTtcblx0cmVzdWx0LnB1c2gobmV3IENvbHVtbkRlZihcImFjdGl2ZVVudGlsXCIsIFwibnVtYmVyXCIsIFwiZGF0ZXRpbWVcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwiY2F0ZWdvcnlcIiwgXCJzdHJpbmdcIiwgXCJcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwicmV2aXNpb25zXCIsIFwiRG9jdW1lbnRSZXZpc2lvblwiLCBcIlwiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJhY3RpdmVSZXZpc2lvblwiLCBcInN0cmluZ1wiLCBcIlwiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJhY3RpdmVVcmxcIiwgXCJzdHJpbmdcIiwgXCJcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwiYWN0aXZlTWltZVR5cGVcIiwgXCJzdHJpbmdcIiwgXCJcIikpO1xuXHRcblxuXHRyZXR1cm4gcmVzdWx0O1xufVxuXG5cblxuXG5cblxuIl19
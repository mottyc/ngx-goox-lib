import { ColumnDef } from '.';
import { BaseEntity } from '.';
// Flight entity is a single flight in the airplane
export class Flight extends BaseEntity {
}
export function GetFlightColumnsDef() {
    let result = [];
    result.push(new ColumnDef("name", "string"));
    result.push(new ColumnDef("description", "string"));
    result.push(new ColumnDef("flightString", "string"));
    result.push(new ColumnDef("destination", "string"));
    result.push(new ColumnDef("accountId", "string"));
    result.push(new ColumnDef("airplaneId", "string"));
    result.push(new ColumnDef("purposeOt", "string"));
    result.push(new ColumnDef("attendingTime", "string"));
    result.push(new ColumnDef("boardingTime", "string"));
    result.push(new ColumnDef("wbConfig", "string"));
    result.push(new ColumnDef("wbManual", "string"));
    result.push(new ColumnDef("preFlightNotes", "string"));
    result.push(new ColumnDef("operationNotes", "string"));
    return result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmxpZ2h0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWdvb3gtbGliL3NyYy9saWIvRmxpZ2h0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUlBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxHQUFHLENBQUM7QUFNOUIsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLEdBQUcsQ0FBQztBQU0vQixtREFBbUQ7QUFDbkQsTUFBTSxPQUFPLE1BQU8sU0FBUSxVQUFVO0NBMEZyQztBQUVELE1BQU0sVUFBVSxtQkFBbUI7SUFDL0IsSUFBSSxNQUFNLEdBQWlCLEVBQUUsQ0FBQztJQUNqQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksU0FBUyxDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQzdDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsYUFBYSxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFFcEQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxjQUFjLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUNyRCxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksU0FBUyxDQUFDLGFBQWEsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ3BELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsV0FBVyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDbEQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxZQUFZLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUtuRCxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksU0FBUyxDQUFDLFdBQVcsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBRWxELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsZUFBZSxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDdEQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxjQUFjLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUdyRCxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksU0FBUyxDQUFDLFVBQVUsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ2pELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsVUFBVSxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFHakQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxnQkFBZ0IsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ3ZELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsZ0JBQWdCLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQztJQVN2RCxPQUFPLE1BQU0sQ0FBQztBQUNmLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IFJlRnVlbCB9IGZyb20gJy4nO1xuaW1wb3J0IHsgQmlsbGluZyB9IGZyb20gJy4nO1xuaW1wb3J0IHsgUmlza0Fzc2Vzc21lbnQgfSBmcm9tICcuJztcbmltcG9ydCB7IENvbHVtbkRlZiB9IGZyb20gJy4nO1xuaW1wb3J0IHsgRmxpZ2h0U3RhdHVzQ29kZSB9IGZyb20gJy4nO1xuaW1wb3J0IHsgT25Cb2FyZCB9IGZyb20gJy4nO1xuaW1wb3J0IHsgRmxpZ2h0UHVycG9zZUNvZGUgfSBmcm9tICcuJztcbmltcG9ydCB7IFRPTERhdGEgfSBmcm9tICcuJztcbmltcG9ydCB7IExlc3NvbiB9IGZyb20gJy4nO1xuaW1wb3J0IHsgQmFzZUVudGl0eSB9IGZyb20gJy4nO1xuaW1wb3J0IHsgRmxpZ2h0VHlwZUNvZGUgfSBmcm9tICcuJztcbmltcG9ydCB7IEZsaWdodFN0YXRlQ29kZSB9IGZyb20gJy4nO1xuXG5cblxuLy8gRmxpZ2h0IGVudGl0eSBpcyBhIHNpbmdsZSBmbGlnaHQgaW4gdGhlIGFpcnBsYW5lXG5leHBvcnQgY2xhc3MgRmxpZ2h0IGV4dGVuZHMgQmFzZUVudGl0eSB7XG4gXG4gICAgLy8gRmxpZ2h0IG5hbWUgXG4gICAgcHVibGljIG5hbWU6IHN0cmluZztcbiBcbiAgICAvLyBGbGlnaHQgZGVzY3JpcHRpb24gXG4gICAgcHVibGljIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG4gXG4gICAgLy8gRmxpZ2h0IG51bWJlciBcbiAgICBwdWJsaWMgZmxpZ2h0TnVtYmVyOiBudW1iZXI7XG4gXG4gICAgLy8gRmxpZ2h0IG51bWJlciBhcyBzdHJpbmcgXG4gICAgcHVibGljIGZsaWdodFN0cmluZzogc3RyaW5nO1xuIFxuICAgIC8vIEZsaWdodCBkZXN0aW5hdGlvbiBcbiAgICBwdWJsaWMgZGVzdGluYXRpb246IHN0cmluZztcbiBcbiAgICAvLyBBY2NvdW50IElEIFxuICAgIHB1YmxpYyBhY2NvdW50SWQ6IHN0cmluZztcbiBcbiAgICAvLyBBaXJwbGFuZSBJRCBcbiAgICBwdWJsaWMgYWlycGxhbmVJZDogc3RyaW5nO1xuIFxuICAgIC8vIEZsaWdodCB0eXBlOiBQUklWQVRFIHwgQ09NTUVSQ0lBTCAgLi4uIFxuICAgIHB1YmxpYyB0eXBlOiBGbGlnaHRUeXBlQ29kZTtcbiBcbiAgICAvLyBGbGlnaHQgc3RhdHVzOiBSRUdJU1RFUkVEIHwgREVMRVRFIHwgQ0FOQ0VMTEVEIC4uLiBcbiAgICBwdWJsaWMgc3RhdHVzOiBGbGlnaHRTdGF0dXNDb2RlO1xuIFxuICAgIC8vIEZsaWdodCBhY3R1YWwgc3RhdGUgUEVORElORyB8IEFDVElWRSB8IENPTVBMRVRFRCAoY2FuJ3QgYmUgbWFudWFsbHkgbW9kaWZpZWQpOiAgIC4uLiBcbiAgICBwdWJsaWMgc3RhdGU6IEZsaWdodFN0YXRlQ29kZTtcbiBcbiAgICAvLyBQdXJwb3NlIG9mIHRoZSBmbGlnaHQgXG4gICAgcHVibGljIHB1cnBvc2U6IEZsaWdodFB1cnBvc2VDb2RlO1xuIFxuICAgIC8vIEluIGNhc2Ugb2YgT1RIRVIsIFB1cnBvc2Ugb2YgdGhlIGZsaWdodCBcbiAgICBwdWJsaWMgcHVycG9zZU90OiBzdHJpbmc7XG4gXG4gICAgLy8gQ3JldyBhbmQgUGFzc2VuZ2VycyBvbiBib2FyZCBcbiAgICBwdWJsaWMgb25Cb2FyZDogT25Cb2FyZDtcbiBcbiAgICAvLyBGbGlnaHQgYXR0ZW5kaW5nIHRpbWUgW2hoOm1tXSBcbiAgICBwdWJsaWMgYXR0ZW5kaW5nVGltZTogc3RyaW5nO1xuIFxuICAgIC8vIEZsaWdodCBib2FyZGluZyB0aW1lIFtoaDptbV0gXG4gICAgcHVibGljIGJvYXJkaW5nVGltZTogc3RyaW5nO1xuIFxuICAgIC8vIFRha2VvZmYgZGF0YSBcbiAgICBwdWJsaWMgdGFrZW9mZjogVE9MRGF0YTtcbiBcbiAgICAvLyBMYW5kaW5nIGRhdGEgXG4gICAgcHVibGljIGxhbmRpbmc6IFRPTERhdGE7XG4gXG4gICAgLy8gV2VpZ2h0IGFuZCBCYWxhbmNlIGNvbmZpZ3VyYXRpb24gXG4gICAgcHVibGljIHdiQ29uZmlnOiBzdHJpbmc7XG4gXG4gICAgLy8gV2VpZ2h0IGFuZCBCYWxhbmNlIG1hbnVhbCBzcGVjaWZpY2F0aW9uIFxuICAgIHB1YmxpYyB3Yk1hbnVhbDogc3RyaW5nO1xuIFxuICAgIC8vIEZsaWdodCBoYXMgY29tcGV0ZW5jeSBjZXJ0aWZpY2F0aW9uIFxuICAgIHB1YmxpYyBoYXNDb21wZXRlbmN5OiBib29sZWFuO1xuIFxuICAgIC8vIEZsaWdodCBoYXMgYSBmbGlnaHQgcGxhbiBcbiAgICBwdWJsaWMgaGFzRmxpZ2h0UGxhbjogYm9vbGVhbjtcbiBcbiAgICAvLyBQcmUgRmxpZ2h0IG5vdGVzIFxuICAgIHB1YmxpYyBwcmVGbGlnaHROb3Rlczogc3RyaW5nO1xuIFxuICAgIC8vIEZsaWdodCBvcGVyYXRpb24gbm90ZXMgXG4gICAgcHVibGljIG9wZXJhdGlvbk5vdGVzOiBzdHJpbmc7XG4gXG4gICAgLy8gRnVlbCBzdGF0dXMgYmVmb3JlIGFuZCBhZnRlciBmbGlnaHQgXG4gICAgcHVibGljIGZ1ZWxTdGF0dXM6IFJlRnVlbDtcbiBcbiAgICAvLyBPaWwgc3RhdHVzIGJlZm9yZSBhbmQgYWZ0ZXIgZmxpZ2h0IFxuICAgIHB1YmxpYyBvaWxTdGF0dXM6IFJlRnVlbDtcbiBcbiAgICAvLyBGbGlnaHQgbGVzc29uIGF0dHJpYnV0ZXMgXG4gICAgcHVibGljIGxlc3NvbjogTGVzc29uO1xuIFxuICAgIC8vIEZsaWdodCBiaWxsaW5nIGluZm9ybWF0aW9uIFxuICAgIHB1YmxpYyBiaWxsaW5nOiBCaWxsaW5nO1xuIFxuICAgIC8vIFBpbG90IGNlcnRpZmljYXRpb24gY2hlY2sgPyBcbiAgICBwdWJsaWMgcGlsb3RDZXJ0Q2hlY2s6IG51bWJlcjtcbiBcbiAgICAvLyBSaXNrIEFzc2Vzc21lbnQgVG9vbCAmIE1pdGlnYXRpb24gU3RyYXRlZ2llcyBcbiAgICBwdWJsaWMgcmlza0Fzc2Vzc21lbnQ6IFJpc2tBc3Nlc3NtZW50O1xuIFxuIFxufVxuXG5leHBvcnQgZnVuY3Rpb24gR2V0RmxpZ2h0Q29sdW1uc0RlZigpIDogQ29sdW1uRGVmW10ge1xuICAgIGxldCByZXN1bHQgOiBDb2x1bW5EZWZbXSA9IFtdO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwibmFtZVwiLCBcInN0cmluZ1wiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJkZXNjcmlwdGlvblwiLCBcInN0cmluZ1wiKSk7XG5cdFxuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwiZmxpZ2h0U3RyaW5nXCIsIFwic3RyaW5nXCIpKTtcblx0cmVzdWx0LnB1c2gobmV3IENvbHVtbkRlZihcImRlc3RpbmF0aW9uXCIsIFwic3RyaW5nXCIpKTtcblx0cmVzdWx0LnB1c2gobmV3IENvbHVtbkRlZihcImFjY291bnRJZFwiLCBcInN0cmluZ1wiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJhaXJwbGFuZUlkXCIsIFwic3RyaW5nXCIpKTtcblx0XG5cdFxuXHRcblx0XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJwdXJwb3NlT3RcIiwgXCJzdHJpbmdcIikpO1xuXHRcblx0cmVzdWx0LnB1c2gobmV3IENvbHVtbkRlZihcImF0dGVuZGluZ1RpbWVcIiwgXCJzdHJpbmdcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwiYm9hcmRpbmdUaW1lXCIsIFwic3RyaW5nXCIpKTtcblx0XG5cdFxuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwid2JDb25maWdcIiwgXCJzdHJpbmdcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwid2JNYW51YWxcIiwgXCJzdHJpbmdcIikpO1xuXHRcblx0XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJwcmVGbGlnaHROb3Rlc1wiLCBcInN0cmluZ1wiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJvcGVyYXRpb25Ob3Rlc1wiLCBcInN0cmluZ1wiKSk7XG5cdFxuXHRcblx0XG5cdFxuXHRcblx0XG5cdFxuXG5cdHJldHVybiByZXN1bHQ7XG59XG5cblxuXG5cblxuXG4iXX0=
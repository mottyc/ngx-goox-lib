import { BaseEntityEx } from '.';
import { ColumnDef } from '.';
// Flight entity is a single flight in the airplane
export class Flight extends BaseEntityEx {
}
export function GetFlightColumnsDef() {
    let result = [];
    result.push(new ColumnDef("id", "string", ""));
    result.push(new ColumnDef("createdOn", "number", "datetime"));
    result.push(new ColumnDef("updatedOn", "number", "datetime"));
    result.push(new ColumnDef("name", "string", ""));
    result.push(new ColumnDef("description", "string", ""));
    result.push(new ColumnDef("flightNumber", "number", ""));
    result.push(new ColumnDef("flightString", "string", ""));
    result.push(new ColumnDef("destination", "string", ""));
    result.push(new ColumnDef("accountId", "string", ""));
    result.push(new ColumnDef("airplaneId", "string", ""));
    result.push(new ColumnDef("type", "FlightTypeCode", ""));
    result.push(new ColumnDef("status", "FlightStatusCode", ""));
    result.push(new ColumnDef("state", "FlightStateCode", ""));
    result.push(new ColumnDef("purpose", "FlightPurposeCode", ""));
    result.push(new ColumnDef("purposeOt", "string", ""));
    result.push(new ColumnDef("onBoard", "OnBoard", ""));
    result.push(new ColumnDef("attendingTime", "string", ""));
    result.push(new ColumnDef("boardingTime", "string", ""));
    result.push(new ColumnDef("takeoff", "TOLData", ""));
    result.push(new ColumnDef("landing", "TOLData", ""));
    result.push(new ColumnDef("wbConfig", "string", ""));
    result.push(new ColumnDef("wbManual", "string", ""));
    result.push(new ColumnDef("hasCompetency", "boolean", ""));
    result.push(new ColumnDef("hasFlightPlan", "boolean", ""));
    result.push(new ColumnDef("preFlightNotes", "string", ""));
    result.push(new ColumnDef("operationNotes", "string", ""));
    result.push(new ColumnDef("fuelStatus", "ReFuel", ""));
    result.push(new ColumnDef("oilStatus", "ReFuel", ""));
    result.push(new ColumnDef("lesson", "Lesson", ""));
    result.push(new ColumnDef("billing", "Billing", ""));
    result.push(new ColumnDef("pilotCertCheck", "number", "datetime"));
    result.push(new ColumnDef("riskAssessment", "RiskAssessment", ""));
    return result;
}
//# sourceMappingURL=data:application/json;base64,
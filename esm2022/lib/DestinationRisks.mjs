// DestinationRisks group of destination risk values
export class DestinationRisks {
    constructor(mountainousAirport, towerNotOperationalAtEta, nonToweredAirport, wetRunway, contaminatedRunway, stoppingDistanceOver80p, runwayBreakingLessGood, approachWoVerticalGuide, circlingApproach, noPublishedApproaches, noAlternateAirport, airportElevOver5KFts) {
        if (mountainousAirport !== undefined) {
            this.mountainousAirport = mountainousAirport;
        }
        if (towerNotOperationalAtEta !== undefined) {
            this.towerNotOperationalAtEta = towerNotOperationalAtEta;
        }
        if (nonToweredAirport !== undefined) {
            this.nonToweredAirport = nonToweredAirport;
        }
        if (wetRunway !== undefined) {
            this.wetRunway = wetRunway;
        }
        if (contaminatedRunway !== undefined) {
            this.contaminatedRunway = contaminatedRunway;
        }
        if (stoppingDistanceOver80p !== undefined) {
            this.stoppingDistanceOver80p = stoppingDistanceOver80p;
        }
        if (runwayBreakingLessGood !== undefined) {
            this.runwayBreakingLessGood = runwayBreakingLessGood;
        }
        if (approachWoVerticalGuide !== undefined) {
            this.approachWoVerticalGuide = approachWoVerticalGuide;
        }
        if (circlingApproach !== undefined) {
            this.circlingApproach = circlingApproach;
        }
        if (noPublishedApproaches !== undefined) {
            this.noPublishedApproaches = noPublishedApproaches;
        }
        if (noAlternateAirport !== undefined) {
            this.noAlternateAirport = noAlternateAirport;
        }
        if (airportElevOver5KFts !== undefined) {
            this.airportElevOver5KFts = airportElevOver5KFts;
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGVzdGluYXRpb25SaXNrcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1nb294LWxpYi9zcmMvbGliL0Rlc3RpbmF0aW9uUmlza3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUEsb0RBQW9EO0FBQ3BELE1BQU0sT0FBTyxnQkFBZ0I7SUFzQ3hCLFlBQVksa0JBQTJCLEVBQUUsd0JBQWlDLEVBQUUsaUJBQTBCLEVBQUUsU0FBa0IsRUFBRSxrQkFBMkIsRUFBRSx1QkFBZ0MsRUFBRSxzQkFBK0IsRUFBRSx1QkFBZ0MsRUFBRSxnQkFBeUIsRUFBRSxxQkFBOEIsRUFBRSxrQkFBMkIsRUFBRSxvQkFBNkI7UUFDaFgsSUFBSSxrQkFBa0IsS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUFDLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxrQkFBa0IsQ0FBQztRQUFDLENBQUM7UUFDdkYsSUFBSSx3QkFBd0IsS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUFDLElBQUksQ0FBQyx3QkFBd0IsR0FBRyx3QkFBd0IsQ0FBQztRQUFDLENBQUM7UUFDekcsSUFBSSxpQkFBaUIsS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUFDLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxpQkFBaUIsQ0FBQztRQUFDLENBQUM7UUFDcEYsSUFBSSxTQUFTLEtBQUssU0FBUyxFQUFFLENBQUM7WUFBQyxJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztRQUFDLENBQUM7UUFDNUQsSUFBSSxrQkFBa0IsS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUFDLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxrQkFBa0IsQ0FBQztRQUFDLENBQUM7UUFDdkYsSUFBSSx1QkFBdUIsS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUFDLElBQUksQ0FBQyx1QkFBdUIsR0FBRyx1QkFBdUIsQ0FBQztRQUFDLENBQUM7UUFDdEcsSUFBSSxzQkFBc0IsS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUFDLElBQUksQ0FBQyxzQkFBc0IsR0FBRyxzQkFBc0IsQ0FBQztRQUFDLENBQUM7UUFDbkcsSUFBSSx1QkFBdUIsS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUFDLElBQUksQ0FBQyx1QkFBdUIsR0FBRyx1QkFBdUIsQ0FBQztRQUFDLENBQUM7UUFDdEcsSUFBSSxnQkFBZ0IsS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUFDLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxnQkFBZ0IsQ0FBQztRQUFDLENBQUM7UUFDakYsSUFBSSxxQkFBcUIsS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUFDLElBQUksQ0FBQyxxQkFBcUIsR0FBRyxxQkFBcUIsQ0FBQztRQUFDLENBQUM7UUFDaEcsSUFBSSxrQkFBa0IsS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUFDLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxrQkFBa0IsQ0FBQztRQUFDLENBQUM7UUFDdkYsSUFBSSxvQkFBb0IsS0FBSyxTQUFTLEVBQUUsQ0FBQztZQUFDLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxvQkFBb0IsQ0FBQztRQUFDLENBQUM7SUFDakcsQ0FBQztDQUVKIiwic291cmNlc0NvbnRlbnQiOlsiXG5cblxuXG4vLyBEZXN0aW5hdGlvblJpc2tzIGdyb3VwIG9mIGRlc3RpbmF0aW9uIHJpc2sgdmFsdWVzXG5leHBvcnQgY2xhc3MgRGVzdGluYXRpb25SaXNrcyB7XG4gXG4gICAgLy8gTW91bnRhaW5vdXMgYWlycG9ydCBcbiAgICBwdWJsaWMgbW91bnRhaW5vdXNBaXJwb3J0OiBudW1iZXI7XG4gXG4gICAgLy8gQ29udHJvbCB0b3dlciBub3Qgb3BlcmF0aW9uYWwgYXQgRVRBIFxuICAgIHB1YmxpYyB0b3dlck5vdE9wZXJhdGlvbmFsQXRFdGE6IG51bWJlcjtcbiBcbiAgICAvLyBEZXN0aW5hdGlvbiAtIE5vbi10b3dlcmVkIGFpcnBvcnQgXG4gICAgcHVibGljIG5vblRvd2VyZWRBaXJwb3J0OiBudW1iZXI7XG4gXG4gICAgLy8gRGVzdGluYXRpb24gLSBXZXQgUnVud2F5IFxuICAgIHB1YmxpYyB3ZXRSdW53YXk6IG51bWJlcjtcbiBcbiAgICAvLyBEZXN0aW5hdGlvbiAtIENvbnRhbWluYXRlZCBSdW53YXkgXG4gICAgcHVibGljIGNvbnRhbWluYXRlZFJ1bndheTogbnVtYmVyO1xuIFxuICAgIC8vIFN0b3BwaW5nIGRpc3RhbmNlIGdyZWF0ZXIgdGhhbiA4MCUgb2YgYXZhaWxhYmxlIHJ1bndheSBcbiAgICBwdWJsaWMgc3RvcHBpbmdEaXN0YW5jZU92ZXI4MHA6IG51bWJlcjtcbiBcbiAgICAvLyBSdW53YXkgYnJha2luZyBhY3Rpb24gbGVzcyB0aGFuIGdvb2QgLSBydl9ydW53X2JyYWtpbl9hY3Rpb25sZXNzX3RfYyBcbiAgICBwdWJsaWMgcnVud2F5QnJlYWtpbmdMZXNzR29vZDogbnVtYmVyO1xuIFxuICAgIC8vIEFwcHJvYWNoIHcvbyB2ZXJ0aWNhbCBndWlkYW5jZSAoYmVzdCBhdmFpbGFibGUgYXBwcm9hY2gpIC0gcnZfYXBwcm9hY2hfd19vX3ZlcnRpY2FsX2d1aV9jIFxuICAgIHB1YmxpYyBhcHByb2FjaFdvVmVydGljYWxHdWlkZTogbnVtYmVyO1xuIFxuICAgIC8vIENpcmNsaW5nIGFwcHJvYWNoIChiZXN0IGF2YWlsYWJsZSBhcHByb2FjaCkgLSBydl9jaXJjbGluZ19hcHByb2FjaF9iZXN0X2F2X2MgXG4gICAgcHVibGljIGNpcmNsaW5nQXBwcm9hY2g6IG51bWJlcjtcbiBcbiAgICAvLyBObyBwdWJsaXNoZWQgYXBwcm9hY2hlcyAtIHJ2X25vX3B1Ymxpc2hlZF9hcHByb2FjaGVzX2MgXG4gICAgcHVibGljIG5vUHVibGlzaGVkQXBwcm9hY2hlczogbnVtYmVyO1xuIFxuICAgIC8vIEFsdGVybmF0ZSBhaXJwb3J0IG5vdCBzZWxlY3RlZCAtIHJ2X2FsdGVybmF0ZV9haXJwb3J0X25vdF9zZWxfYyBcbiAgICBwdWJsaWMgbm9BbHRlcm5hdGVBaXJwb3J0OiBudW1iZXI7XG4gXG4gICAgLy8gRGVzdGluYXRpb24gLSBFbGV2YXRpb24gb2YgcHJpbWFyeSBhaXJwb3J0IGdyZWF0ZXIgdGhhbiA1LDAwMCBmdC4gTVNMIC0gcnZfZGVzdGVsZXZ0aW9fb2ZfcHJpbWFyeV9haV9jIFxuICAgIHB1YmxpYyBhaXJwb3J0RWxldk92ZXI1S0Z0czogbnVtYmVyO1xuIFxuICAgICBjb25zdHJ1Y3Rvcihtb3VudGFpbm91c0FpcnBvcnQ/OiBudW1iZXIsIHRvd2VyTm90T3BlcmF0aW9uYWxBdEV0YT86IG51bWJlciwgbm9uVG93ZXJlZEFpcnBvcnQ/OiBudW1iZXIsIHdldFJ1bndheT86IG51bWJlciwgY29udGFtaW5hdGVkUnVud2F5PzogbnVtYmVyLCBzdG9wcGluZ0Rpc3RhbmNlT3ZlcjgwcD86IG51bWJlciwgcnVud2F5QnJlYWtpbmdMZXNzR29vZD86IG51bWJlciwgYXBwcm9hY2hXb1ZlcnRpY2FsR3VpZGU/OiBudW1iZXIsIGNpcmNsaW5nQXBwcm9hY2g/OiBudW1iZXIsIG5vUHVibGlzaGVkQXBwcm9hY2hlcz86IG51bWJlciwgbm9BbHRlcm5hdGVBaXJwb3J0PzogbnVtYmVyLCBhaXJwb3J0RWxldk92ZXI1S0Z0cz86IG51bWJlcikgeyBcbiAgICAgICAgaWYgKG1vdW50YWlub3VzQWlycG9ydCAhPT0gdW5kZWZpbmVkKSB7IHRoaXMubW91bnRhaW5vdXNBaXJwb3J0ID0gbW91bnRhaW5vdXNBaXJwb3J0OyB9XG4gICAgICAgIGlmICh0b3dlck5vdE9wZXJhdGlvbmFsQXRFdGEgIT09IHVuZGVmaW5lZCkgeyB0aGlzLnRvd2VyTm90T3BlcmF0aW9uYWxBdEV0YSA9IHRvd2VyTm90T3BlcmF0aW9uYWxBdEV0YTsgfVxuICAgICAgICBpZiAobm9uVG93ZXJlZEFpcnBvcnQgIT09IHVuZGVmaW5lZCkgeyB0aGlzLm5vblRvd2VyZWRBaXJwb3J0ID0gbm9uVG93ZXJlZEFpcnBvcnQ7IH1cbiAgICAgICAgaWYgKHdldFJ1bndheSAhPT0gdW5kZWZpbmVkKSB7IHRoaXMud2V0UnVud2F5ID0gd2V0UnVud2F5OyB9XG4gICAgICAgIGlmIChjb250YW1pbmF0ZWRSdW53YXkgIT09IHVuZGVmaW5lZCkgeyB0aGlzLmNvbnRhbWluYXRlZFJ1bndheSA9IGNvbnRhbWluYXRlZFJ1bndheTsgfVxuICAgICAgICBpZiAoc3RvcHBpbmdEaXN0YW5jZU92ZXI4MHAgIT09IHVuZGVmaW5lZCkgeyB0aGlzLnN0b3BwaW5nRGlzdGFuY2VPdmVyODBwID0gc3RvcHBpbmdEaXN0YW5jZU92ZXI4MHA7IH1cbiAgICAgICAgaWYgKHJ1bndheUJyZWFraW5nTGVzc0dvb2QgIT09IHVuZGVmaW5lZCkgeyB0aGlzLnJ1bndheUJyZWFraW5nTGVzc0dvb2QgPSBydW53YXlCcmVha2luZ0xlc3NHb29kOyB9XG4gICAgICAgIGlmIChhcHByb2FjaFdvVmVydGljYWxHdWlkZSAhPT0gdW5kZWZpbmVkKSB7IHRoaXMuYXBwcm9hY2hXb1ZlcnRpY2FsR3VpZGUgPSBhcHByb2FjaFdvVmVydGljYWxHdWlkZTsgfVxuICAgICAgICBpZiAoY2lyY2xpbmdBcHByb2FjaCAhPT0gdW5kZWZpbmVkKSB7IHRoaXMuY2lyY2xpbmdBcHByb2FjaCA9IGNpcmNsaW5nQXBwcm9hY2g7IH1cbiAgICAgICAgaWYgKG5vUHVibGlzaGVkQXBwcm9hY2hlcyAhPT0gdW5kZWZpbmVkKSB7IHRoaXMubm9QdWJsaXNoZWRBcHByb2FjaGVzID0gbm9QdWJsaXNoZWRBcHByb2FjaGVzOyB9XG4gICAgICAgIGlmIChub0FsdGVybmF0ZUFpcnBvcnQgIT09IHVuZGVmaW5lZCkgeyB0aGlzLm5vQWx0ZXJuYXRlQWlycG9ydCA9IG5vQWx0ZXJuYXRlQWlycG9ydDsgfVxuICAgICAgICBpZiAoYWlycG9ydEVsZXZPdmVyNUtGdHMgIT09IHVuZGVmaW5lZCkgeyB0aGlzLmFpcnBvcnRFbGV2T3ZlcjVLRnRzID0gYWlycG9ydEVsZXZPdmVyNUtGdHM7IH1cbiAgICB9XG5cbn1cblxuXG5cblxuXG5cbiJdfQ==
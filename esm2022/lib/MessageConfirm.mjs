import { BaseEntity } from '.';
import { ColumnDef } from '.';
// MessageConfirm entity is a system message confirmation by users
export class MessageConfirm extends BaseEntity {
}
export function GetMessageConfirmColumnsDef() {
    let result = [];
    result.push(new ColumnDef("id", "string", ""));
    result.push(new ColumnDef("createdOn", "number", "datetime"));
    result.push(new ColumnDef("updatedOn", "number", "datetime"));
    result.push(new ColumnDef("messageId", "string", ""));
    result.push(new ColumnDef("contactId", "string", ""));
    result.push(new ColumnDef("replyStatus", "ConfirmStatusCode", ""));
    result.push(new ColumnDef("replyOn", "number", "datetime"));
    result.push(new ColumnDef("replyUrl", "string", ""));
    result.push(new ColumnDef("subject", "string", ""));
    result.push(new ColumnDef("description", "string", ""));
    result.push(new ColumnDef("type", "MessageTypeCode", ""));
    result.push(new ColumnDef("priority", "PriorityCode", ""));
    result.push(new ColumnDef("props", "Map<string,object>", ""));
    return result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWVzc2FnZUNvbmZpcm0uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtZ29veC1saWIvc3JjL2xpYi9NZXNzYWdlQ29uZmlybS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sR0FBRyxDQUFDO0FBQy9CLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxHQUFHLENBQUM7QUFJOUIsa0VBQWtFO0FBQ2xFLE1BQU0sT0FBTyxjQUFlLFNBQVEsVUFBVTtDQWlDN0M7QUFFRCxNQUFNLFVBQVUsMkJBQTJCO0lBQ3ZDLElBQUksTUFBTSxHQUFpQixFQUFFLENBQUM7SUFDakMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxJQUFJLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDL0MsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxXQUFXLEVBQUUsUUFBUSxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFDOUQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxXQUFXLEVBQUUsUUFBUSxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFDOUQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxXQUFXLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDdEQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxXQUFXLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDdEQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxhQUFhLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNuRSxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksU0FBUyxDQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQztJQUM1RCxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksU0FBUyxDQUFDLFVBQVUsRUFBRSxRQUFRLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNyRCxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksU0FBUyxDQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNwRCxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksU0FBUyxDQUFDLGFBQWEsRUFBRSxRQUFRLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUN4RCxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksU0FBUyxDQUFDLE1BQU0sRUFBRSxpQkFBaUIsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzFELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsVUFBVSxFQUFFLGNBQWMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzNELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsT0FBTyxFQUFFLG9CQUFvQixFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFHOUQsT0FBTyxNQUFNLENBQUM7QUFDZixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBDb25maXJtU3RhdHVzQ29kZSB9IGZyb20gJy4nO1xuaW1wb3J0IHsgTWVzc2FnZVR5cGVDb2RlIH0gZnJvbSAnLic7XG5pbXBvcnQgeyBQcmlvcml0eUNvZGUgfSBmcm9tICcuJztcbmltcG9ydCB7IEJhc2VFbnRpdHkgfSBmcm9tICcuJztcbmltcG9ydCB7IENvbHVtbkRlZiB9IGZyb20gJy4nO1xuXG5cblxuLy8gTWVzc2FnZUNvbmZpcm0gZW50aXR5IGlzIGEgc3lzdGVtIG1lc3NhZ2UgY29uZmlybWF0aW9uIGJ5IHVzZXJzXG5leHBvcnQgY2xhc3MgTWVzc2FnZUNvbmZpcm0gZXh0ZW5kcyBCYXNlRW50aXR5IHtcbiBcbiAgICAvLyBTeXN0ZW0gTWVzc2FnZSBJRCBcbiAgICBwdWJsaWMgbWVzc2FnZUlkOiBzdHJpbmc7XG4gXG4gICAgLy8gTGlua2VkIGNvbnRhY3QgSUQgXG4gICAgcHVibGljIGNvbnRhY3RJZDogc3RyaW5nO1xuIFxuICAgIC8vIENvbnRhY3QgcmVwbHkgc3RhdHVzIFxuICAgIHB1YmxpYyByZXBseVN0YXR1czogQ29uZmlybVN0YXR1c0NvZGU7XG4gXG4gICAgLy8gVGltZSBvZiByZXBseSBzZW50IGJ5IHRoZSBjb250YWN0IFtlcG9jaCB0aW1lIG1pbGxpc2Vjb25kc10gXG4gICAgcHVibGljIHJlcGx5T246IG51bWJlcjtcbiBcbiAgICAvLyBSZWFkIGFuZCBzaWduIGZvcm0gbGluayBcbiAgICBwdWJsaWMgcmVwbHlVcmw6IHN0cmluZztcbiBcbiAgICAvLyBNZXNzYWdlIHN1YmplY3QgW0NhbGN1bGF0ZWQgZmllbGQsIG5vdCBzdG9yZWRdIFxuICAgIHB1YmxpYyBzdWJqZWN0OiBzdHJpbmc7XG4gXG4gICAgLy8gTWVzc2FnZSBkZXNjcmlwdGlvbiBbQ2FsY3VsYXRlZCBmaWVsZCwgbm90IHN0b3JlZF0gXG4gICAgcHVibGljIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG4gXG4gICAgLy8gTWVzc2FnZSB0eXBlIFtDYWxjdWxhdGVkIGZpZWxkLCBub3Qgc3RvcmVkXSBcbiAgICBwdWJsaWMgdHlwZTogTWVzc2FnZVR5cGVDb2RlO1xuIFxuICAgIC8vIE1lc3NhZ2UgcHJpb3JpdHkgW0NhbGN1bGF0ZWQgZmllbGQsIG5vdCBzdG9yZWRdIFxuICAgIHB1YmxpYyBwcmlvcml0eTogUHJpb3JpdHlDb2RlO1xuIFxuICAgIC8vIEFkZGl0aW9uYWwgcHJvcGVydGllcyBcbiAgICBwdWJsaWMgcHJvcHM6IE1hcDxzdHJpbmcsb2JqZWN0PjtcbiBcbiBcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIEdldE1lc3NhZ2VDb25maXJtQ29sdW1uc0RlZigpIDogQ29sdW1uRGVmW10ge1xuICAgIGxldCByZXN1bHQgOiBDb2x1bW5EZWZbXSA9IFtdO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwiaWRcIiwgXCJzdHJpbmdcIiwgXCJcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwiY3JlYXRlZE9uXCIsIFwibnVtYmVyXCIsIFwiZGF0ZXRpbWVcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwidXBkYXRlZE9uXCIsIFwibnVtYmVyXCIsIFwiZGF0ZXRpbWVcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwibWVzc2FnZUlkXCIsIFwic3RyaW5nXCIsIFwiXCIpKTtcblx0cmVzdWx0LnB1c2gobmV3IENvbHVtbkRlZihcImNvbnRhY3RJZFwiLCBcInN0cmluZ1wiLCBcIlwiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJyZXBseVN0YXR1c1wiLCBcIkNvbmZpcm1TdGF0dXNDb2RlXCIsIFwiXCIpKTtcblx0cmVzdWx0LnB1c2gobmV3IENvbHVtbkRlZihcInJlcGx5T25cIiwgXCJudW1iZXJcIiwgXCJkYXRldGltZVwiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJyZXBseVVybFwiLCBcInN0cmluZ1wiLCBcIlwiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJzdWJqZWN0XCIsIFwic3RyaW5nXCIsIFwiXCIpKTtcblx0cmVzdWx0LnB1c2gobmV3IENvbHVtbkRlZihcImRlc2NyaXB0aW9uXCIsIFwic3RyaW5nXCIsIFwiXCIpKTtcblx0cmVzdWx0LnB1c2gobmV3IENvbHVtbkRlZihcInR5cGVcIiwgXCJNZXNzYWdlVHlwZUNvZGVcIiwgXCJcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwicHJpb3JpdHlcIiwgXCJQcmlvcml0eUNvZGVcIiwgXCJcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwicHJvcHNcIiwgXCJNYXA8c3RyaW5nLG9iamVjdD5cIiwgXCJcIikpO1xuXHRcblxuXHRyZXR1cm4gcmVzdWx0O1xufVxuXG5cblxuXG5cblxuIl19
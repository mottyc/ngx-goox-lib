import { ColumnDef } from '.';
import { BaseEntityEx } from '.';
// Certificate entity is a contact certificate required for active pilot
export class Certificate extends BaseEntityEx {
    get(field) {
        if (!this.props) {
            return "";
        }
        let val = this.props.get(field);
        return String(val);
    }
}
export function GetCertificateColumnsDef() {
    let result = [];
    result.push(new ColumnDef("id", "string", ""));
    result.push(new ColumnDef("createdOn", "number", "datetime"));
    result.push(new ColumnDef("updatedOn", "number", "datetime"));
    result.push(new ColumnDef("name", "string", ""));
    result.push(new ColumnDef("description", "string", ""));
    result.push(new ColumnDef("contactId", "string", ""));
    result.push(new ColumnDef("documentId", "string", ""));
    result.push(new ColumnDef("validUntil", "number", "datetime"));
    result.push(new ColumnDef("status", "StatusCode", ""));
    result.push(new ColumnDef("notifyAt", "number", "datetime"));
    result.push(new ColumnDef("subject", "string", ""));
    result.push(new ColumnDef("message", "string", ""));
    return result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2VydGlmaWNhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtZ29veC1saWIvc3JjL2xpYi9DZXJ0aWZpY2F0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sR0FBRyxDQUFDO0FBRTlCLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxHQUFHLENBQUM7QUFJakMsd0VBQXdFO0FBQ3hFLE1BQU0sT0FBTyxXQUFZLFNBQVEsWUFBWTtJQWdDNUMsR0FBRyxDQUFDLEtBQWE7UUFDaEIsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUNqQixPQUFPLEVBQUUsQ0FBQztRQUNYLENBQUM7UUFDRCxJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNoQyxPQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNwQixDQUFDO0NBR0Q7QUFHRCxNQUFNLFVBQVUsd0JBQXdCO0lBQ3BDLElBQUksTUFBTSxHQUFpQixFQUFFLENBQUM7SUFDakMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxJQUFJLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDL0MsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxXQUFXLEVBQUUsUUFBUSxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFDOUQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxXQUFXLEVBQUUsUUFBUSxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFDOUQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxNQUFNLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDakQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxhQUFhLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDeEQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxXQUFXLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDdEQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxZQUFZLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDdkQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxZQUFZLEVBQUUsUUFBUSxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFDL0QsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxRQUFRLEVBQUUsWUFBWSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDdkQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxVQUFVLEVBQUUsUUFBUSxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFDN0QsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxTQUFTLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDcEQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxTQUFTLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFHcEQsT0FBTyxNQUFNLENBQUM7QUFDZixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBDb2x1bW5EZWYgfSBmcm9tICcuJztcbmltcG9ydCB7IFN0YXR1c0NvZGUgfSBmcm9tICcuJztcbmltcG9ydCB7IEJhc2VFbnRpdHlFeCB9IGZyb20gJy4nO1xuXG5cblxuLy8gQ2VydGlmaWNhdGUgZW50aXR5IGlzIGEgY29udGFjdCBjZXJ0aWZpY2F0ZSByZXF1aXJlZCBmb3IgYWN0aXZlIHBpbG90XG5leHBvcnQgY2xhc3MgQ2VydGlmaWNhdGUgZXh0ZW5kcyBCYXNlRW50aXR5RXgge1xuIFxuICAgIC8vIENlcnRpZmljYXRlIG5hbWUgXG4gICAgcHVibGljIG5hbWU6IHN0cmluZztcbiBcbiAgICAvLyBDZXJ0aWZpY2F0ZSBkZXNjcmlwdGlvbiBcbiAgICBwdWJsaWMgZGVzY3JpcHRpb246IHN0cmluZztcbiBcbiAgICAvLyBMaW5rZWQgY29udGFjdCBJRCBcbiAgICBwdWJsaWMgY29udGFjdElkOiBzdHJpbmc7XG4gXG4gICAgLy8gTGlua2VkIGRvY3VtZW50IElEIFxuICAgIHB1YmxpYyBkb2N1bWVudElkOiBzdHJpbmc7XG4gXG4gICAgLy8gQ2VydGlmaWNhdGUgaXMgdmFsaWQgdW50aWwgdGhlIHRpbWVzdGFtcCBbZXBvY2ggdGltZSBtaWxsaXNlY29uZHNdIFxuICAgIHB1YmxpYyB2YWxpZFVudGlsOiBudW1iZXI7XG4gXG4gICAgLy8gQ2VydGlmaWNhdGUgd29ya2Zsb3cgc3RhdHVzOiBVTkRFRklORUQgfCBQRU5ESU5HIHwgSU5fUFJPQ0VTUyB8IENPTVBMRVRFRCAuLi4gXG4gICAgcHVibGljIHN0YXR1czogU3RhdHVzQ29kZTtcbiBcbiAgICAvLyBUaW1lIG9mIG5vdGlmaWNhdGlvbiBzZW50IHRvIGNvbnRhY3QgW2Vwb2NoIHRpbWUgbWlsbGlzZWNvbmRzXSBcbiAgICBwdWJsaWMgbm90aWZ5QXQ6IG51bWJlcjtcbiBcbiAgICAvLyBOb3RpZmljYXRpb24gc3ViamVjdCBcbiAgICBwdWJsaWMgc3ViamVjdDogc3RyaW5nO1xuIFxuICAgIC8vIE5vdGlmaWNhdGlvbiBtZXNzYWdlIFxuICAgIHB1YmxpYyBtZXNzYWdlOiBzdHJpbmc7XG4gXG4gXG5cbiBcblx0Z2V0KGZpZWxkOiBzdHJpbmcpIDogYW55IHtcblx0XHRpZiAoIXRoaXMucHJvcHMpIHtcblx0XHRcdHJldHVybiBcIlwiO1xuXHRcdH1cblx0XHRsZXQgdmFsID0gdGhpcy5wcm9wcy5nZXQoZmllbGQpO1xuXHRcdHJldHVybiBTdHJpbmcodmFsKTtcblx0fVxuIFxuXG59XG5cblxuZXhwb3J0IGZ1bmN0aW9uIEdldENlcnRpZmljYXRlQ29sdW1uc0RlZigpIDogQ29sdW1uRGVmW10ge1xuICAgIGxldCByZXN1bHQgOiBDb2x1bW5EZWZbXSA9IFtdO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwiaWRcIiwgXCJzdHJpbmdcIiwgXCJcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwiY3JlYXRlZE9uXCIsIFwibnVtYmVyXCIsIFwiZGF0ZXRpbWVcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwidXBkYXRlZE9uXCIsIFwibnVtYmVyXCIsIFwiZGF0ZXRpbWVcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwibmFtZVwiLCBcInN0cmluZ1wiLCBcIlwiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJkZXNjcmlwdGlvblwiLCBcInN0cmluZ1wiLCBcIlwiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJjb250YWN0SWRcIiwgXCJzdHJpbmdcIiwgXCJcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwiZG9jdW1lbnRJZFwiLCBcInN0cmluZ1wiLCBcIlwiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJ2YWxpZFVudGlsXCIsIFwibnVtYmVyXCIsIFwiZGF0ZXRpbWVcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwic3RhdHVzXCIsIFwiU3RhdHVzQ29kZVwiLCBcIlwiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJub3RpZnlBdFwiLCBcIm51bWJlclwiLCBcImRhdGV0aW1lXCIpKTtcblx0cmVzdWx0LnB1c2gobmV3IENvbHVtbkRlZihcInN1YmplY3RcIiwgXCJzdHJpbmdcIiwgXCJcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwibWVzc2FnZVwiLCBcInN0cmluZ1wiLCBcIlwiKSk7XG5cdFxuXG5cdHJldHVybiByZXN1bHQ7XG59XG5cblxuXG5cblxuXG4iXX0=
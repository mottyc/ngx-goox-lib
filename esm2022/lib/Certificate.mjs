import { ColumnDef } from '.';
import { BaseEntity } from '.';
// Certificate entity is a contact certificate required for active pilot
export class Certificate extends BaseEntity {
}
export function GetCertificateColumnsDef() {
    let result = [];
    result.push(new ColumnDef("id", "string", ""));
    result.push(new ColumnDef("createdOn", "number", "datetime"));
    result.push(new ColumnDef("updatedOn", "number", "datetime"));
    result.push(new ColumnDef("name", "string", ""));
    result.push(new ColumnDef("description", "string", ""));
    result.push(new ColumnDef("contactId", "string", ""));
    result.push(new ColumnDef("documentId", "string", ""));
    result.push(new ColumnDef("validUntil", "number", "datetime"));
    result.push(new ColumnDef("status", "StatusCode", ""));
    result.push(new ColumnDef("notifyAt", "number", "datetime"));
    result.push(new ColumnDef("subject", "string", ""));
    result.push(new ColumnDef("message", "string", ""));
    return result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2VydGlmaWNhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtZ29veC1saWIvc3JjL2xpYi9DZXJ0aWZpY2F0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sR0FBRyxDQUFDO0FBRTlCLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxHQUFHLENBQUM7QUFJL0Isd0VBQXdFO0FBQ3hFLE1BQU0sT0FBTyxXQUFZLFNBQVEsVUFBVTtDQThCMUM7QUFFRCxNQUFNLFVBQVUsd0JBQXdCO0lBQ3BDLElBQUksTUFBTSxHQUFpQixFQUFFLENBQUM7SUFDakMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxJQUFJLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDL0MsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxXQUFXLEVBQUUsUUFBUSxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFDOUQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxXQUFXLEVBQUUsUUFBUSxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFDOUQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxNQUFNLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDakQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxhQUFhLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDeEQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxXQUFXLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDdEQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxZQUFZLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDdkQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxZQUFZLEVBQUUsUUFBUSxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFDL0QsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxRQUFRLEVBQUUsWUFBWSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDdkQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxVQUFVLEVBQUUsUUFBUSxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFDN0QsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxTQUFTLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDcEQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxTQUFTLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFHcEQsT0FBTyxNQUFNLENBQUM7QUFDZixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBDb2x1bW5EZWYgfSBmcm9tICcuJztcbmltcG9ydCB7IFN0YXR1c0NvZGUgfSBmcm9tICcuJztcbmltcG9ydCB7IEJhc2VFbnRpdHkgfSBmcm9tICcuJztcblxuXG5cbi8vIENlcnRpZmljYXRlIGVudGl0eSBpcyBhIGNvbnRhY3QgY2VydGlmaWNhdGUgcmVxdWlyZWQgZm9yIGFjdGl2ZSBwaWxvdFxuZXhwb3J0IGNsYXNzIENlcnRpZmljYXRlIGV4dGVuZHMgQmFzZUVudGl0eSB7XG4gXG4gICAgLy8gQ2VydGlmaWNhdGUgbmFtZSBcbiAgICBwdWJsaWMgbmFtZTogc3RyaW5nO1xuIFxuICAgIC8vIENlcnRpZmljYXRlIGRlc2NyaXB0aW9uIFxuICAgIHB1YmxpYyBkZXNjcmlwdGlvbjogc3RyaW5nO1xuIFxuICAgIC8vIExpbmtlZCBjb250YWN0IElEIFxuICAgIHB1YmxpYyBjb250YWN0SWQ6IHN0cmluZztcbiBcbiAgICAvLyBMaW5rZWQgZG9jdW1lbnQgSUQgXG4gICAgcHVibGljIGRvY3VtZW50SWQ6IHN0cmluZztcbiBcbiAgICAvLyBDZXJ0aWZpY2F0ZSBpcyB2YWxpZCB1bnRpbCB0aGUgdGltZXN0YW1wIFtlcG9jaCB0aW1lIG1pbGxpc2Vjb25kc10gXG4gICAgcHVibGljIHZhbGlkVW50aWw6IG51bWJlcjtcbiBcbiAgICAvLyBDZXJ0aWZpY2F0ZSB3b3JrZmxvdyBzdGF0dXM6IFVOREVGSU5FRCB8IFBFTkRJTkcgfCBJTl9QUk9DRVNTIHwgQ09NUExFVEVEIC4uLiBcbiAgICBwdWJsaWMgc3RhdHVzOiBTdGF0dXNDb2RlO1xuIFxuICAgIC8vIFRpbWUgb2Ygbm90aWZpY2F0aW9uIHNlbnQgdG8gY29udGFjdCBbZXBvY2ggdGltZSBtaWxsaXNlY29uZHNdIFxuICAgIHB1YmxpYyBub3RpZnlBdDogbnVtYmVyO1xuIFxuICAgIC8vIE5vdGlmaWNhdGlvbiBzdWJqZWN0IFxuICAgIHB1YmxpYyBzdWJqZWN0OiBzdHJpbmc7XG4gXG4gICAgLy8gTm90aWZpY2F0aW9uIG1lc3NhZ2UgXG4gICAgcHVibGljIG1lc3NhZ2U6IHN0cmluZztcbiBcbiBcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIEdldENlcnRpZmljYXRlQ29sdW1uc0RlZigpIDogQ29sdW1uRGVmW10ge1xuICAgIGxldCByZXN1bHQgOiBDb2x1bW5EZWZbXSA9IFtdO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwiaWRcIiwgXCJzdHJpbmdcIiwgXCJcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwiY3JlYXRlZE9uXCIsIFwibnVtYmVyXCIsIFwiZGF0ZXRpbWVcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwidXBkYXRlZE9uXCIsIFwibnVtYmVyXCIsIFwiZGF0ZXRpbWVcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwibmFtZVwiLCBcInN0cmluZ1wiLCBcIlwiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJkZXNjcmlwdGlvblwiLCBcInN0cmluZ1wiLCBcIlwiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJjb250YWN0SWRcIiwgXCJzdHJpbmdcIiwgXCJcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwiZG9jdW1lbnRJZFwiLCBcInN0cmluZ1wiLCBcIlwiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJ2YWxpZFVudGlsXCIsIFwibnVtYmVyXCIsIFwiZGF0ZXRpbWVcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwic3RhdHVzXCIsIFwiU3RhdHVzQ29kZVwiLCBcIlwiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJub3RpZnlBdFwiLCBcIm51bWJlclwiLCBcImRhdGV0aW1lXCIpKTtcblx0cmVzdWx0LnB1c2gobmV3IENvbHVtbkRlZihcInN1YmplY3RcIiwgXCJzdHJpbmdcIiwgXCJcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwibWVzc2FnZVwiLCBcInN0cmluZ1wiLCBcIlwiKSk7XG5cdFxuXG5cdHJldHVybiByZXN1bHQ7XG59XG5cblxuXG5cblxuXG4iXX0=
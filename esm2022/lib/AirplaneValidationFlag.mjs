import { Tuple } from '.';
// AirplaneValidationFlag represents combination of airplane validations
export var AirplaneValidationFlag;
(function (AirplaneValidationFlag) {
    // Undefined [0] 
    AirplaneValidationFlag[AirplaneValidationFlag["UNDEFINED"] = 0] = "UNDEFINED";
    // Valid airworthiness (isairplanevalidairworthiness_c) [1] 
    AirplaneValidationFlag[AirplaneValidationFlag["AIRWORTHINESS"] = 1] = "AIRWORTHINESS";
    // Valid airplane insurance (isairplanevalidinsurance_c)  [2] 
    AirplaneValidationFlag[AirplaneValidationFlag["INSURANCE"] = 2] = "INSURANCE";
    // Valid flight manual (isairplanevalidflightmanual_c) [4] 
    AirplaneValidationFlag[AirplaneValidationFlag["FLIGHT_MANUAL"] = 4] = "FLIGHT_MANUAL";
    // Valid radio station license (isairplanevalidradiostation_c) [8] 
    AirplaneValidationFlag[AirplaneValidationFlag["RADIO_STATION"] = 8] = "RADIO_STATION";
    // Certification Of Registration (isairplanevalidcertofregis_c)[16] 
    AirplaneValidationFlag[AirplaneValidationFlag["REGISTRATION_CERT"] = 16] = "REGISTRATION_CERT";
    // Valid first-aid kit (isairplanevalidfirstaidkit_c) [32] 
    AirplaneValidationFlag[AirplaneValidationFlag["FIRST_AID_KIT"] = 32] = "FIRST_AID_KIT";
    // Valid fire extinguisher (isairplanevalidfireextinguis_c) [64] 
    AirplaneValidationFlag[AirplaneValidationFlag["FIRE_EXTINGUISHER"] = 64] = "FIRE_EXTINGUISHER";
    // Valid operation spec (isairplanevalidoperationspec_c) [128] 
    AirplaneValidationFlag[AirplaneValidationFlag["OPERATION_SPEC"] = 128] = "OPERATION_SPEC";
    // Valid 337 certificate for camera hole (isairplanevalid337cameraho_c) [256] 
    AirplaneValidationFlag[AirplaneValidationFlag["VALID_337_CAMERA"] = 256] = "VALID_337_CAMERA";
    // Valid 337 certificate for exhaust (isairplanevalid337exhaust_c) [512] 
    AirplaneValidationFlag[AirplaneValidationFlag["VALID_337_EXHAUST"] = 512] = "VALID_337_EXHAUST";
    // Valid stc camera hole (isairplanevalidstccameraho_c) [1024] 
    AirplaneValidationFlag[AirplaneValidationFlag["VALID_STC_CAMERA"] = 1024] = "VALID_STC_CAMERA";
    // Valid stc certificate for exhaust (isairplanevalidstcexhaust_c) [2048] 
    AirplaneValidationFlag[AirplaneValidationFlag["VALID_STC_EXHAUST"] = 2048] = "VALID_STC_EXHAUST";
    // Valid flight logbook (isairplanevalidflightlogboo_c) [4096] 
    AirplaneValidationFlag[AirplaneValidationFlag["FLIGHT_LOGBOOK"] = 4096] = "FLIGHT_LOGBOOK";
    // Valid air operator certificate AOC (isairplanevalidairoperatorce_c) [8192] 
    AirplaneValidationFlag[AirplaneValidationFlag["AIR_OPERATOR"] = 8192] = "AIR_OPERATOR";
    // Aircraft weight certificate (isairplanevalidaircraftweigh_c) [16384] 
    AirplaneValidationFlag[AirplaneValidationFlag["AIRCRAFT_WEIGHT"] = 16384] = "AIRCRAFT_WEIGHT";
    // Valid propeller overhaul (isairplanevalidpropellerover_c) [32768] 
    AirplaneValidationFlag[AirplaneValidationFlag["PROPELLER_OVERHAUL"] = 32768] = "PROPELLER_OVERHAUL";
    // Single engine overhaul (isairplanevalidsingleengineo_c) [65536] 
    AirplaneValidationFlag[AirplaneValidationFlag["SINGLE_ENGINE_OVERHAUL"] = 65536] = "SINGLE_ENGINE_OVERHAUL";
    // Left engine overhaul (isairplanevalidleftengineove_c) [131072] 
    AirplaneValidationFlag[AirplaneValidationFlag["LEFT_ENGINE_OVERHAUL"] = 131072] = "LEFT_ENGINE_OVERHAUL";
    // Right engine overhaul (isairplanevalidrightengineov_c) [262144] 
    AirplaneValidationFlag[AirplaneValidationFlag["RIGHT_ENGINE_OVERHAUL"] = 262144] = "RIGHT_ENGINE_OVERHAUL";
    // Left engine propeller overhaul (isairplanevalidleftenginepro_c) [524288] 
    AirplaneValidationFlag[AirplaneValidationFlag["LEFT_PROPELLER_OVERHAUL"] = 524288] = "LEFT_PROPELLER_OVERHAUL";
    // Right engine propeller overhaul (isairplanevalidrightenginepr_c) [1048576] 
    AirplaneValidationFlag[AirplaneValidationFlag["RIGHT_PROPELLER_OVERHAUL"] = 1048576] = "RIGHT_PROPELLER_OVERHAUL";
    // CVFR_ATS aeronautical maps (isairplanevalidcvfr_atsaeron_c) [2097152] 
    AirplaneValidationFlag[AirplaneValidationFlag["CVFR_ATS"] = 2097152] = "CVFR_ATS";
    // Weight and Balance Form (isairplanevalidweightandbaln_c) [4194304] 
    AirplaneValidationFlag[AirplaneValidationFlag["WEIGHT_BALANCE_FORM"] = 4194304] = "WEIGHT_BALANCE_FORM";
    // Airplane checklist (isairplanevalidairplanechec_c) [8388608] 
    AirplaneValidationFlag[AirplaneValidationFlag["CHECK_LIST"] = 8388608] = "CHECK_LIST";
    // Noise Certificate (isairplanevalidnoisecertifi_c) [16777216] 
    AirplaneValidationFlag[AirplaneValidationFlag["NOISE_CERT"] = 16777216] = "NOISE_CERT";
})(AirplaneValidationFlag || (AirplaneValidationFlag = {}));
// Return list of AirplaneValidationFlag values and their display names
export function GetAirplaneValidationFlags() {
    let result = [];
    result.push(new Tuple(AirplaneValidationFlag.AIRWORTHINESS, 'AirplaneValidationFlag.AIRWORTHINESS'));
    result.push(new Tuple(AirplaneValidationFlag.INSURANCE, 'AirplaneValidationFlag.INSURANCE'));
    result.push(new Tuple(AirplaneValidationFlag.FLIGHT_MANUAL, 'AirplaneValidationFlag.FLIGHT_MANUAL'));
    result.push(new Tuple(AirplaneValidationFlag.RADIO_STATION, 'AirplaneValidationFlag.RADIO_STATION'));
    result.push(new Tuple(AirplaneValidationFlag.REGISTRATION_CERT, 'AirplaneValidationFlag.REGISTRATION_CERT'));
    result.push(new Tuple(AirplaneValidationFlag.FIRST_AID_KIT, 'AirplaneValidationFlag.FIRST_AID_KIT'));
    result.push(new Tuple(AirplaneValidationFlag.FIRE_EXTINGUISHER, 'AirplaneValidationFlag.FIRE_EXTINGUISHER'));
    result.push(new Tuple(AirplaneValidationFlag.OPERATION_SPEC, 'AirplaneValidationFlag.OPERATION_SPEC'));
    result.push(new Tuple(AirplaneValidationFlag.VALID_337_CAMERA, 'AirplaneValidationFlag.VALID_337_CAMERA'));
    result.push(new Tuple(AirplaneValidationFlag.VALID_337_EXHAUST, 'AirplaneValidationFlag.VALID_337_EXHAUST'));
    result.push(new Tuple(AirplaneValidationFlag.VALID_STC_CAMERA, 'AirplaneValidationFlag.VALID_STC_CAMERA'));
    result.push(new Tuple(AirplaneValidationFlag.VALID_STC_EXHAUST, 'AirplaneValidationFlag.VALID_STC_EXHAUST'));
    result.push(new Tuple(AirplaneValidationFlag.FLIGHT_LOGBOOK, 'AirplaneValidationFlag.FLIGHT_LOGBOOK'));
    result.push(new Tuple(AirplaneValidationFlag.AIR_OPERATOR, 'AirplaneValidationFlag.AIR_OPERATOR'));
    result.push(new Tuple(AirplaneValidationFlag.AIRCRAFT_WEIGHT, 'AirplaneValidationFlag.AIRCRAFT_WEIGHT'));
    result.push(new Tuple(AirplaneValidationFlag.PROPELLER_OVERHAUL, 'AirplaneValidationFlag.PROPELLER_OVERHAUL'));
    result.push(new Tuple(AirplaneValidationFlag.SINGLE_ENGINE_OVERHAUL, 'AirplaneValidationFlag.SINGLE_ENGINE_OVERHAUL'));
    result.push(new Tuple(AirplaneValidationFlag.LEFT_ENGINE_OVERHAUL, 'AirplaneValidationFlag.LEFT_ENGINE_OVERHAUL'));
    result.push(new Tuple(AirplaneValidationFlag.RIGHT_ENGINE_OVERHAUL, 'AirplaneValidationFlag.RIGHT_ENGINE_OVERHAUL'));
    result.push(new Tuple(AirplaneValidationFlag.LEFT_PROPELLER_OVERHAUL, 'AirplaneValidationFlag.LEFT_PROPELLER_OVERHAUL'));
    result.push(new Tuple(AirplaneValidationFlag.RIGHT_PROPELLER_OVERHAUL, 'AirplaneValidationFlag.RIGHT_PROPELLER_OVERHAUL'));
    result.push(new Tuple(AirplaneValidationFlag.CVFR_ATS, 'AirplaneValidationFlag.CVFR_ATS'));
    result.push(new Tuple(AirplaneValidationFlag.WEIGHT_BALANCE_FORM, 'AirplaneValidationFlag.WEIGHT_BALANCE_FORM'));
    result.push(new Tuple(AirplaneValidationFlag.CHECK_LIST, 'AirplaneValidationFlag.CHECK_LIST'));
    result.push(new Tuple(AirplaneValidationFlag.NOISE_CERT, 'AirplaneValidationFlag.NOISE_CERT'));
    return result;
}
// Return map of AirplaneValidationFlag values and their display names
export function MapAirplaneValidationFlags() {
    let result = new Map();
    result.set(AirplaneValidationFlag.UNDEFINED, 'Undefined');
    result.set(AirplaneValidationFlag.AIRWORTHINESS, 'Airworthiness');
    result.set(AirplaneValidationFlag.INSURANCE, 'Insurance');
    result.set(AirplaneValidationFlag.FLIGHT_MANUAL, 'Flight Manual');
    result.set(AirplaneValidationFlag.RADIO_STATION, 'Radio Station');
    result.set(AirplaneValidationFlag.REGISTRATION_CERT, 'Registration Cert');
    result.set(AirplaneValidationFlag.FIRST_AID_KIT, 'First Aid Kit');
    result.set(AirplaneValidationFlag.FIRE_EXTINGUISHER, 'Fire Extinguisher');
    result.set(AirplaneValidationFlag.OPERATION_SPEC, 'Operation Spec');
    result.set(AirplaneValidationFlag.VALID_337_CAMERA, 'Valid 337 Camera');
    result.set(AirplaneValidationFlag.VALID_337_EXHAUST, 'Valid 337 Exhaust');
    result.set(AirplaneValidationFlag.VALID_STC_CAMERA, 'Valid Stc Camera');
    result.set(AirplaneValidationFlag.VALID_STC_EXHAUST, 'Valid Stc Exhaust');
    result.set(AirplaneValidationFlag.FLIGHT_LOGBOOK, 'Flight Logbook');
    result.set(AirplaneValidationFlag.AIR_OPERATOR, 'Air Operator');
    result.set(AirplaneValidationFlag.AIRCRAFT_WEIGHT, 'Aircraft Weight');
    result.set(AirplaneValidationFlag.PROPELLER_OVERHAUL, 'Propeller Overhaul');
    result.set(AirplaneValidationFlag.SINGLE_ENGINE_OVERHAUL, 'Single Engine Overhaul');
    result.set(AirplaneValidationFlag.LEFT_ENGINE_OVERHAUL, 'Left Engine Overhaul');
    result.set(AirplaneValidationFlag.RIGHT_ENGINE_OVERHAUL, 'Right Engine Overhaul');
    result.set(AirplaneValidationFlag.LEFT_PROPELLER_OVERHAUL, 'Left Propeller Overhaul');
    result.set(AirplaneValidationFlag.RIGHT_PROPELLER_OVERHAUL, 'Right Propeller Overhaul');
    result.set(AirplaneValidationFlag.CVFR_ATS, 'Cvfr Ats');
    result.set(AirplaneValidationFlag.WEIGHT_BALANCE_FORM, 'Weight Balance Form');
    result.set(AirplaneValidationFlag.CHECK_LIST, 'Check List');
    result.set(AirplaneValidationFlag.NOISE_CERT, 'Noise Cert');
    return result;
}
//# sourceMappingURL=data:application/json;base64,
import { BaseEntityEx } from '.';
import { ColumnDef } from '.';
// Lookup entity is a key-value string lookup (used as a configurable, open enum)
// Id of the lookup is in the format of [key]@[domain]
export class Lookup extends BaseEntityEx {
    get(field) {
        if (!this.props) {
            return "";
        }
        let val = this.props.get(field);
        return String(val);
    }
}
export function GetLookupColumnsDef() {
    let result = [];
    result.push(new ColumnDef("id", "string", ""));
    result.push(new ColumnDef("createdOn", "number", "datetime"));
    result.push(new ColumnDef("updatedOn", "number", "datetime"));
    result.push(new ColumnDef("domain", "string", ""));
    result.push(new ColumnDef("key", "string", ""));
    result.push(new ColumnDef("value", "string", ""));
    return result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTG9va3VwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWdvb3gtbGliL3NyYy9saWIvTG9va3VwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxHQUFHLENBQUM7QUFDakMsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEdBQUcsQ0FBQztBQUk5QixpRkFBaUY7QUFDakYsc0RBQXNEO0FBQ3RELE1BQU0sT0FBTyxNQUFPLFNBQVEsWUFBWTtJQWN2QyxHQUFHLENBQUMsS0FBYTtRQUNoQixJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO1lBQ2pCLE9BQU8sRUFBRSxDQUFDO1FBQ1gsQ0FBQztRQUNELElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ2hDLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3BCLENBQUM7Q0FHRDtBQUdELE1BQU0sVUFBVSxtQkFBbUI7SUFDL0IsSUFBSSxNQUFNLEdBQWlCLEVBQUUsQ0FBQztJQUNqQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksU0FBUyxDQUFDLElBQUksRUFBRSxRQUFRLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUMvQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksU0FBUyxDQUFDLFdBQVcsRUFBRSxRQUFRLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQztJQUM5RCxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksU0FBUyxDQUFDLFdBQVcsRUFBRSxRQUFRLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQztJQUM5RCxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksU0FBUyxDQUFDLFFBQVEsRUFBRSxRQUFRLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNuRCxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksU0FBUyxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNoRCxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksU0FBUyxDQUFDLE9BQU8sRUFBRSxRQUFRLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUdsRCxPQUFPLE1BQU0sQ0FBQztBQUNmLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEJhc2VFbnRpdHlFeCB9IGZyb20gJy4nO1xuaW1wb3J0IHsgQ29sdW1uRGVmIH0gZnJvbSAnLic7XG5cblxuXG4vLyBMb29rdXAgZW50aXR5IGlzIGEga2V5LXZhbHVlIHN0cmluZyBsb29rdXAgKHVzZWQgYXMgYSBjb25maWd1cmFibGUsIG9wZW4gZW51bSlcbi8vIElkIG9mIHRoZSBsb29rdXAgaXMgaW4gdGhlIGZvcm1hdCBvZiBba2V5XUBbZG9tYWluXVxuZXhwb3J0IGNsYXNzIExvb2t1cCBleHRlbmRzIEJhc2VFbnRpdHlFeCB7XG4gXG4gICAgLy8gTG9va3VwIGRvbWFpbiBcbiAgICBwdWJsaWMgZG9tYWluOiBzdHJpbmc7XG4gXG4gICAgLy8gQWN0aW9uIHRoYXQgd2FzIHBlcmZvcm1lZCBcbiAgICBwdWJsaWMga2V5OiBzdHJpbmc7XG4gXG4gICAgLy8gSXRlbSB0eXBlIFxuICAgIHB1YmxpYyB2YWx1ZTogc3RyaW5nO1xuIFxuIFxuXG4gXG5cdGdldChmaWVsZDogc3RyaW5nKSA6IGFueSB7XG5cdFx0aWYgKCF0aGlzLnByb3BzKSB7XG5cdFx0XHRyZXR1cm4gXCJcIjtcblx0XHR9XG5cdFx0bGV0IHZhbCA9IHRoaXMucHJvcHMuZ2V0KGZpZWxkKTtcblx0XHRyZXR1cm4gU3RyaW5nKHZhbCk7XG5cdH1cbiBcblxufVxuXG5cbmV4cG9ydCBmdW5jdGlvbiBHZXRMb29rdXBDb2x1bW5zRGVmKCkgOiBDb2x1bW5EZWZbXSB7XG4gICAgbGV0IHJlc3VsdCA6IENvbHVtbkRlZltdID0gW107XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJpZFwiLCBcInN0cmluZ1wiLCBcIlwiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJjcmVhdGVkT25cIiwgXCJudW1iZXJcIiwgXCJkYXRldGltZVwiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJ1cGRhdGVkT25cIiwgXCJudW1iZXJcIiwgXCJkYXRldGltZVwiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJkb21haW5cIiwgXCJzdHJpbmdcIiwgXCJcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwia2V5XCIsIFwic3RyaW5nXCIsIFwiXCIpKTtcblx0cmVzdWx0LnB1c2gobmV3IENvbHVtbkRlZihcInZhbHVlXCIsIFwic3RyaW5nXCIsIFwiXCIpKTtcblx0XG5cblx0cmV0dXJuIHJlc3VsdDtcbn1cblxuXG5cblxuXG5cbiJdfQ==
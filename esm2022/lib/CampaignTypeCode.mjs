import { Tuple } from '.';
// CampaignTypeCode represents the campaign type: WEB | EMAIL | TELESALES
export var CampaignTypeCode;
(function (CampaignTypeCode) {
    // Undefined [0] 
    CampaignTypeCode[CampaignTypeCode["UNDEFINED"] = 0] = "UNDEFINED";
    // Web [1] 
    CampaignTypeCode[CampaignTypeCode["WEB"] = 1] = "WEB";
    // Mail [2] 
    CampaignTypeCode[CampaignTypeCode["EMAIL"] = 2] = "EMAIL";
    // Telephone Sales [3] 
    CampaignTypeCode[CampaignTypeCode["TELESALES"] = 3] = "TELESALES";
})(CampaignTypeCode || (CampaignTypeCode = {}));
// Return list of CampaignTypeCode values and their display names
export function GetCampaignTypeCodes() {
    let result = [];
    result.push(new Tuple(CampaignTypeCode.WEB, 'CampaignTypeCode.WEB'));
    result.push(new Tuple(CampaignTypeCode.EMAIL, 'CampaignTypeCode.EMAIL'));
    result.push(new Tuple(CampaignTypeCode.TELESALES, 'CampaignTypeCode.TELESALES'));
    return result;
}
// Return map of CampaignTypeCode values and their display names
export function MapCampaignTypeCodes() {
    let result = new Map();
    result.set(CampaignTypeCode.UNDEFINED, 'Undefined');
    result.set(CampaignTypeCode.WEB, 'Web');
    result.set(CampaignTypeCode.EMAIL, 'Email');
    result.set(CampaignTypeCode.TELESALES, 'Telesales');
    return result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2FtcGFpZ25UeXBlQ29kZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1nb294LWxpYi9zcmMvbGliL0NhbXBhaWduVHlwZUNvZGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLEdBQUcsQ0FBQztBQUcxQix5RUFBeUU7QUFDekUsTUFBTSxDQUFOLElBQVksZ0JBY1g7QUFkRCxXQUFZLGdCQUFnQjtJQUV4QixpQkFBaUI7SUFDakIsaUVBQWEsQ0FBQTtJQUViLFdBQVc7SUFDWCxxREFBTyxDQUFBO0lBRVAsWUFBWTtJQUNaLHlEQUFTLENBQUE7SUFFVCx1QkFBdUI7SUFDdkIsaUVBQWEsQ0FBQTtBQUVqQixDQUFDLEVBZFcsZ0JBQWdCLEtBQWhCLGdCQUFnQixRQWMzQjtBQUVELGlFQUFpRTtBQUNqRSxNQUFNLFVBQVUsb0JBQW9CO0lBQ25DLElBQUksTUFBTSxHQUF1QyxFQUFFLENBQUM7SUFHcEQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLEtBQUssQ0FBMkIsZ0JBQWdCLENBQUMsR0FBRyxFQUFFLHNCQUFzQixDQUFDLENBQUMsQ0FBQTtJQUU5RixNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksS0FBSyxDQUEyQixnQkFBZ0IsQ0FBQyxLQUFLLEVBQUUsd0JBQXdCLENBQUMsQ0FBQyxDQUFBO0lBRWxHLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxLQUFLLENBQTJCLGdCQUFnQixDQUFDLFNBQVMsRUFBRSw0QkFBNEIsQ0FBQyxDQUFDLENBQUE7SUFHdkcsT0FBTyxNQUFNLENBQUM7QUFDbEIsQ0FBQztBQUVELGdFQUFnRTtBQUNoRSxNQUFNLFVBQVUsb0JBQW9CO0lBQ2hDLElBQUksTUFBTSxHQUFHLElBQUksR0FBRyxFQUE0QixDQUFDO0lBR3BELE1BQU0sQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBRXBELE1BQU0sQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBRXhDLE1BQU0sQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBRTVDLE1BQU0sQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBR2pELE9BQU8sTUFBTSxDQUFDO0FBQ2xCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IFR1cGxlIH0gZnJvbSAnLic7XG5cblxuLy8gQ2FtcGFpZ25UeXBlQ29kZSByZXByZXNlbnRzIHRoZSBjYW1wYWlnbiB0eXBlOiBXRUIgfCBFTUFJTCB8IFRFTEVTQUxFU1xuZXhwb3J0IGVudW0gQ2FtcGFpZ25UeXBlQ29kZSB7XG4gXG4gICAgLy8gVW5kZWZpbmVkIFswXSBcbiAgICBVTkRFRklORUQgPSAwLFxuIFxuICAgIC8vIFdlYiBbMV0gXG4gICAgV0VCID0gMSxcbiBcbiAgICAvLyBNYWlsIFsyXSBcbiAgICBFTUFJTCA9IDIsXG4gXG4gICAgLy8gVGVsZXBob25lIFNhbGVzIFszXSBcbiAgICBURUxFU0FMRVMgPSAzLFxuIFxufVxuXG4vLyBSZXR1cm4gbGlzdCBvZiBDYW1wYWlnblR5cGVDb2RlIHZhbHVlcyBhbmQgdGhlaXIgZGlzcGxheSBuYW1lc1xuZXhwb3J0IGZ1bmN0aW9uIEdldENhbXBhaWduVHlwZUNvZGVzKCkgOiBUdXBsZTxDYW1wYWlnblR5cGVDb2RlLCBzdHJpbmc+W10ge1xuXHRsZXQgcmVzdWx0IDogVHVwbGU8Q2FtcGFpZ25UeXBlQ29kZSwgc3RyaW5nPltdID0gW107XG5cbiAgICBcblx0cmVzdWx0LnB1c2gobmV3IFR1cGxlPENhbXBhaWduVHlwZUNvZGUsIHN0cmluZz4oQ2FtcGFpZ25UeXBlQ29kZS5XRUIsICdDYW1wYWlnblR5cGVDb2RlLldFQicpKVxuXHRcblx0cmVzdWx0LnB1c2gobmV3IFR1cGxlPENhbXBhaWduVHlwZUNvZGUsIHN0cmluZz4oQ2FtcGFpZ25UeXBlQ29kZS5FTUFJTCwgJ0NhbXBhaWduVHlwZUNvZGUuRU1BSUwnKSlcblx0XG5cdHJlc3VsdC5wdXNoKG5ldyBUdXBsZTxDYW1wYWlnblR5cGVDb2RlLCBzdHJpbmc+KENhbXBhaWduVHlwZUNvZGUuVEVMRVNBTEVTLCAnQ2FtcGFpZ25UeXBlQ29kZS5URUxFU0FMRVMnKSlcblx0XG5cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuXG4vLyBSZXR1cm4gbWFwIG9mIENhbXBhaWduVHlwZUNvZGUgdmFsdWVzIGFuZCB0aGVpciBkaXNwbGF5IG5hbWVzXG5leHBvcnQgZnVuY3Rpb24gTWFwQ2FtcGFpZ25UeXBlQ29kZXMoKSA6IE1hcDxDYW1wYWlnblR5cGVDb2RlLCBzdHJpbmc+IHtcbiAgICBsZXQgcmVzdWx0ID0gbmV3IE1hcDxDYW1wYWlnblR5cGVDb2RlLCBzdHJpbmc+KCk7XG5cbiAgICBcblx0cmVzdWx0LnNldChDYW1wYWlnblR5cGVDb2RlLlVOREVGSU5FRCwgJ1VuZGVmaW5lZCcpO1xuXHRcblx0cmVzdWx0LnNldChDYW1wYWlnblR5cGVDb2RlLldFQiwgJ1dlYicpO1xuXHRcblx0cmVzdWx0LnNldChDYW1wYWlnblR5cGVDb2RlLkVNQUlMLCAnRW1haWwnKTtcblx0XG5cdHJlc3VsdC5zZXQoQ2FtcGFpZ25UeXBlQ29kZS5URUxFU0FMRVMsICdUZWxlc2FsZXMnKTtcblx0XG5cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuIl19
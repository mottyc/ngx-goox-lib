import { BaseEntity } from '.';
import { ColumnDef } from '.';
// Contact entity is a billing account in the system
export class Contact extends BaseEntity {
}
export function GetContactColumnsDef() {
    let result = [];
    result.push(new ColumnDef("firstName", "string"));
    result.push(new ColumnDef("lastName", "string"));
    result.push(new ColumnDef("description", "string"));
    result.push(new ColumnDef("title", "string"));
    result.push(new ColumnDef("birthDay", "number"));
    result.push(new ColumnDef("status", "AccountStatusCode"));
    result.push(new ColumnDef("phone", "string"));
    result.push(new ColumnDef("fax", "string"));
    result.push(new ColumnDef("mobile", "string"));
    result.push(new ColumnDef("primaryAddress", "Address"));
    result.push(new ColumnDef("singleEngineHours", "number"));
    result.push(new ColumnDef("dualEngineHours", "number"));
    result.push(new ColumnDef("totalFlightHours", "number"));
    result.push(new ColumnDef("groups", "string"));
    result.push(new ColumnDef("idNumber", "string"));
    result.push(new ColumnDef("startToFlyDate", "number"));
    result.push(new ColumnDef("authorizedToFlyBy", "string"));
    result.push(new ColumnDef("authorizedPhotographyBy", "string"));
    result.push(new ColumnDef("pilotLicense", "string"));
    result.push(new ColumnDef("licenseTypes", "string"));
    result.push(new ColumnDef("licenseGroup", "string"));
    result.push(new ColumnDef("medicalCertClass", "string"));
    result.push(new ColumnDef("validations", "ValidationFlag"));
    result.push(new ColumnDef("isPilot", "boolean"));
    return result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udGFjdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1nb294LWxpYi9zcmMvbGliL0NvbnRhY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLEdBQUcsQ0FBQztBQUMvQixPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sR0FBRyxDQUFDO0FBSTlCLG9EQUFvRDtBQUNwRCxNQUFNLE9BQU8sT0FBUSxTQUFRLFVBQVU7Q0EyRXRDO0FBRUQsTUFBTSxVQUFVLG9CQUFvQjtJQUNoQyxJQUFJLE1BQU0sR0FBaUIsRUFBRSxDQUFDO0lBQ2pDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsV0FBVyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDbEQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxVQUFVLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUNqRCxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksU0FBUyxDQUFDLGFBQWEsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ3BELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDOUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxVQUFVLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUNqRCxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksU0FBUyxDQUFDLFFBQVEsRUFBRSxtQkFBbUIsQ0FBQyxDQUFDLENBQUM7SUFDMUQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUM5QyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksU0FBUyxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQzVDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDL0MsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxnQkFBZ0IsRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDO0lBQ3hELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsbUJBQW1CLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUMxRCxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksU0FBUyxDQUFDLGlCQUFpQixFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDeEQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxrQkFBa0IsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ3pELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDL0MsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxVQUFVLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUNqRCxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksU0FBUyxDQUFDLGdCQUFnQixFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDdkQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxtQkFBbUIsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQzFELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMseUJBQXlCLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUNoRSxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksU0FBUyxDQUFDLGNBQWMsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ3JELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsY0FBYyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDckQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxjQUFjLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUNyRCxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksU0FBUyxDQUFDLGtCQUFrQixFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDekQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLFNBQVMsQ0FBQyxhQUFhLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDO0lBQzVELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxTQUFTLENBQUMsU0FBUyxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUM7SUFHakQsT0FBTyxNQUFNLENBQUM7QUFDZixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBBY2NvdW50U3RhdHVzQ29kZSB9IGZyb20gJy4nO1xuaW1wb3J0IHsgQWRkcmVzcyB9IGZyb20gJy4nO1xuaW1wb3J0IHsgVmFsaWRhdGlvbkZsYWcgfSBmcm9tICcuJztcbmltcG9ydCB7IEJhc2VFbnRpdHkgfSBmcm9tICcuJztcbmltcG9ydCB7IENvbHVtbkRlZiB9IGZyb20gJy4nO1xuXG5cblxuLy8gQ29udGFjdCBlbnRpdHkgaXMgYSBiaWxsaW5nIGFjY291bnQgaW4gdGhlIHN5c3RlbVxuZXhwb3J0IGNsYXNzIENvbnRhY3QgZXh0ZW5kcyBCYXNlRW50aXR5IHtcbiBcbiAgICAvLyBGaXJzdCBuYW1lIFxuICAgIHB1YmxpYyBmaXJzdE5hbWU6IHN0cmluZztcbiBcbiAgICAvLyBMYXN0IG5hbWUgXG4gICAgcHVibGljIGxhc3ROYW1lOiBzdHJpbmc7XG4gXG4gICAgLy8gQ29udGFjdCBkZXNjcmlwdGlvbiBcbiAgICBwdWJsaWMgZGVzY3JpcHRpb246IHN0cmluZztcbiBcbiAgICAvLyBUaXRsZSBpbiB0aGUgYWNjb3VudCBcbiAgICBwdWJsaWMgdGl0bGU6IHN0cmluZztcbiBcbiAgICAvLyBDb250YWN0IGJpcnRoZGF5IFxuICAgIHB1YmxpYyBiaXJ0aERheTogbnVtYmVyO1xuIFxuICAgIC8vIENvbnRhY3Qgc3RhdHVzOiBVTkRFRklORUQgfCBBQ1RJVkUgfCBJTkFDVElWRSB8IEJMT0NLRUQgfCBTVVNQRU5ERSBcbiAgICBwdWJsaWMgc3RhdHVzOiBBY2NvdW50U3RhdHVzQ29kZTtcbiBcbiAgICAvLyBPZmZpY2UgLyBMYW5kbGluZSBwaG9uZSBcbiAgICBwdWJsaWMgcGhvbmU6IHN0cmluZztcbiBcbiAgICAvLyBPZmZpY2UgLyBMYW5kbGluZSBmYXggXG4gICAgcHVibGljIGZheDogc3RyaW5nO1xuIFxuICAgIC8vIE1vYmlsZSBwaG9uZSBcbiAgICBwdWJsaWMgbW9iaWxlOiBzdHJpbmc7XG4gXG4gICAgLy8gUHJpbWFyeSBhZGRyZXNzIFxuICAgIHB1YmxpYyBwcmltYXJ5QWRkcmVzczogQWRkcmVzcztcbiBcbiAgICAvLyBUb3RhbCBzaW5nbGUgZW5naW5lIGhvdXJzIFxuICAgIHB1YmxpYyBzaW5nbGVFbmdpbmVIb3VyczogbnVtYmVyO1xuIFxuICAgIC8vIFRvdGFsIGR1YWwgZW5naW5lIGhvdXJzIFxuICAgIHB1YmxpYyBkdWFsRW5naW5lSG91cnM6IG51bWJlcjtcbiBcbiAgICAvLyBUb3RhbCBmbGlnaHQgaG91cnMgXG4gICAgcHVibGljIHRvdGFsRmxpZ2h0SG91cnM6IG51bWJlcjtcbiBcbiAgICAvLyBDb250YWN0IGdyb3VwcyBcbiAgICBwdWJsaWMgZ3JvdXBzOiBzdHJpbmdbXTtcbiBcbiAgICAvLyBJRCBudW1iZXIgXG4gICAgcHVibGljIGlkTnVtYmVyOiBzdHJpbmc7XG4gXG4gICAgLy8gU3RhcnQgdG8gZmx5IG9uIFtlcG9jaCB0aW1lIG1pbGxpc2Vjb25kc10gXG4gICAgcHVibGljIHN0YXJ0VG9GbHlEYXRlOiBudW1iZXI7XG4gXG4gICAgLy8gQXV0aG9yaXplZCB0byBmbHkgYnkgdXNlciBhdCB0aW1lIFxuICAgIHB1YmxpYyBhdXRob3JpemVkVG9GbHlCeTogc3RyaW5nO1xuIFxuICAgIC8vIEF1dGhvcml6ZWQgcGhvdG9ncmFwaGVyIGJ5IHVzZXIgYXQgdGltZVZhbGlkYXRpb25zIFxuICAgIHB1YmxpYyBhdXRob3JpemVkUGhvdG9ncmFwaHlCeTogc3RyaW5nO1xuIFxuICAgIC8vIFBpbG90IGxpY2Vuc2UgbnVtYmVyIFxuICAgIHB1YmxpYyBwaWxvdExpY2Vuc2U6IHN0cmluZztcbiBcbiAgICAvLyBQaWxvdCBsaWNlbnNlIHR5cGUgXG4gICAgcHVibGljIGxpY2Vuc2VUeXBlczogc3RyaW5nW107XG4gXG4gICAgLy8gUGlsb3QgbGljZW5zZSBncm91cCBcbiAgICBwdWJsaWMgbGljZW5zZUdyb3VwOiBzdHJpbmc7XG4gXG4gICAgLy8gTWVkaWNhbCBjZXJ0aWZpY2F0ZSBjbGFzcyBcbiAgICBwdWJsaWMgbWVkaWNhbENlcnRDbGFzczogc3RyaW5nO1xuIFxuICAgIC8vIEVudW0gZmxhZ3MgLSBsaXN0IG9mIGNlcnRpZmljYXRpb25zIGFuZCB2YWxpZGF0aW9ucyBcbiAgICBwdWJsaWMgdmFsaWRhdGlvbnM6IFZhbGlkYXRpb25GbGFnO1xuIFxuICAgIC8vIEZsYWcgaW5kaWNhdGluZyBpZiB0aGlzIGNvbnRhY3QgaXMgYSBwaWxvdCBcbiAgICBwdWJsaWMgaXNQaWxvdDogYm9vbGVhbjtcbiBcbiBcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIEdldENvbnRhY3RDb2x1bW5zRGVmKCkgOiBDb2x1bW5EZWZbXSB7XG4gICAgbGV0IHJlc3VsdCA6IENvbHVtbkRlZltdID0gW107XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJmaXJzdE5hbWVcIiwgXCJzdHJpbmdcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwibGFzdE5hbWVcIiwgXCJzdHJpbmdcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwiZGVzY3JpcHRpb25cIiwgXCJzdHJpbmdcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwidGl0bGVcIiwgXCJzdHJpbmdcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwiYmlydGhEYXlcIiwgXCJudW1iZXJcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwic3RhdHVzXCIsIFwiQWNjb3VudFN0YXR1c0NvZGVcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwicGhvbmVcIiwgXCJzdHJpbmdcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwiZmF4XCIsIFwic3RyaW5nXCIpKTtcblx0cmVzdWx0LnB1c2gobmV3IENvbHVtbkRlZihcIm1vYmlsZVwiLCBcInN0cmluZ1wiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJwcmltYXJ5QWRkcmVzc1wiLCBcIkFkZHJlc3NcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwic2luZ2xlRW5naW5lSG91cnNcIiwgXCJudW1iZXJcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwiZHVhbEVuZ2luZUhvdXJzXCIsIFwibnVtYmVyXCIpKTtcblx0cmVzdWx0LnB1c2gobmV3IENvbHVtbkRlZihcInRvdGFsRmxpZ2h0SG91cnNcIiwgXCJudW1iZXJcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwiZ3JvdXBzXCIsIFwic3RyaW5nXCIpKTtcblx0cmVzdWx0LnB1c2gobmV3IENvbHVtbkRlZihcImlkTnVtYmVyXCIsIFwic3RyaW5nXCIpKTtcblx0cmVzdWx0LnB1c2gobmV3IENvbHVtbkRlZihcInN0YXJ0VG9GbHlEYXRlXCIsIFwibnVtYmVyXCIpKTtcblx0cmVzdWx0LnB1c2gobmV3IENvbHVtbkRlZihcImF1dGhvcml6ZWRUb0ZseUJ5XCIsIFwic3RyaW5nXCIpKTtcblx0cmVzdWx0LnB1c2gobmV3IENvbHVtbkRlZihcImF1dGhvcml6ZWRQaG90b2dyYXBoeUJ5XCIsIFwic3RyaW5nXCIpKTtcblx0cmVzdWx0LnB1c2gobmV3IENvbHVtbkRlZihcInBpbG90TGljZW5zZVwiLCBcInN0cmluZ1wiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJsaWNlbnNlVHlwZXNcIiwgXCJzdHJpbmdcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwibGljZW5zZUdyb3VwXCIsIFwic3RyaW5nXCIpKTtcblx0cmVzdWx0LnB1c2gobmV3IENvbHVtbkRlZihcIm1lZGljYWxDZXJ0Q2xhc3NcIiwgXCJzdHJpbmdcIikpO1xuXHRyZXN1bHQucHVzaChuZXcgQ29sdW1uRGVmKFwidmFsaWRhdGlvbnNcIiwgXCJWYWxpZGF0aW9uRmxhZ1wiKSk7XG5cdHJlc3VsdC5wdXNoKG5ldyBDb2x1bW5EZWYoXCJpc1BpbG90XCIsIFwiYm9vbGVhblwiKSk7XG5cdFxuXG5cdHJldHVybiByZXN1bHQ7XG59XG5cblxuXG5cblxuXG4iXX0=
// UserTypeCode represents the user type: SYSADMIN | SUPPORT | USER ...
export var UserTypeCode;
(function (UserTypeCode) {
    // Undefined [0] 
    UserTypeCode[UserTypeCode["UNDEFINED"] = 0] = "UNDEFINED";
    // System administrator has access to all accounts and permissions to perform all actions [1] 
    UserTypeCode[UserTypeCode["SYSADMIN"] = 1] = "SYSADMIN";
    // Support user has view permissions only for all accounts that enabled option Enable Support [2] 
    UserTypeCode[UserTypeCode["SUPPORT"] = 2] = "SUPPORT";
    // Account user - has access to specific accounts with role based access control [3] 
    UserTypeCode[UserTypeCode["USER"] = 3] = "USER";
    // Service Account - to be used by other systems to perform actions using the API (can't login as a user to the portal) [4] 
    UserTypeCode[UserTypeCode["SERVICE"] = 4] = "SERVICE";
})(UserTypeCode || (UserTypeCode = {}));
// Return list of UserTypeCode values and their display names
export function GetUserTypeCodes() {
    let result = new Map();
    result.set(UserTypeCode.UNDEFINED, 'Undefined');
    result.set(UserTypeCode.SYSADMIN, 'Sysadmin');
    result.set(UserTypeCode.SUPPORT, 'Support');
    result.set(UserTypeCode.USER, 'User');
    result.set(UserTypeCode.SERVICE, 'Service');
    return result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXNlclR5cGVDb2RlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWdvb3gtbGliL3NyYy9saWIvVXNlclR5cGVDb2RlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLHVFQUF1RTtBQUN2RSxNQUFNLENBQU4sSUFBWSxZQWlCWDtBQWpCRCxXQUFZLFlBQVk7SUFFcEIsaUJBQWlCO0lBQ2pCLHlEQUFhLENBQUE7SUFFYiw4RkFBOEY7SUFDOUYsdURBQVksQ0FBQTtJQUVaLGtHQUFrRztJQUNsRyxxREFBVyxDQUFBO0lBRVgscUZBQXFGO0lBQ3JGLCtDQUFRLENBQUE7SUFFUiw0SEFBNEg7SUFDNUgscURBQVcsQ0FBQTtBQUVmLENBQUMsRUFqQlcsWUFBWSxLQUFaLFlBQVksUUFpQnZCO0FBRUQsNkRBQTZEO0FBQzdELE1BQU0sVUFBVSxnQkFBZ0I7SUFFNUIsSUFBSSxNQUFNLEdBQUcsSUFBSSxHQUFHLEVBQXdCLENBQUM7SUFHN0MsTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsU0FBUyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBRWhELE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLFFBQVEsRUFBRSxVQUFVLENBQUMsQ0FBQztJQUU5QyxNQUFNLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFFNUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBRXRDLE1BQU0sQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDLE9BQU8sRUFBRSxTQUFTLENBQUMsQ0FBQztJQUc1QyxPQUFPLE1BQU0sQ0FBQztBQUNsQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXG5cbi8vIFVzZXJUeXBlQ29kZSByZXByZXNlbnRzIHRoZSB1c2VyIHR5cGU6IFNZU0FETUlOIHwgU1VQUE9SVCB8IFVTRVIgLi4uXG5leHBvcnQgZW51bSBVc2VyVHlwZUNvZGUge1xuIFxuICAgIC8vIFVuZGVmaW5lZCBbMF0gXG4gICAgVU5ERUZJTkVEID0gMCxcbiBcbiAgICAvLyBTeXN0ZW0gYWRtaW5pc3RyYXRvciBoYXMgYWNjZXNzIHRvIGFsbCBhY2NvdW50cyBhbmQgcGVybWlzc2lvbnMgdG8gcGVyZm9ybSBhbGwgYWN0aW9ucyBbMV0gXG4gICAgU1lTQURNSU4gPSAxLFxuIFxuICAgIC8vIFN1cHBvcnQgdXNlciBoYXMgdmlldyBwZXJtaXNzaW9ucyBvbmx5IGZvciBhbGwgYWNjb3VudHMgdGhhdCBlbmFibGVkIG9wdGlvbiBFbmFibGUgU3VwcG9ydCBbMl0gXG4gICAgU1VQUE9SVCA9IDIsXG4gXG4gICAgLy8gQWNjb3VudCB1c2VyIC0gaGFzIGFjY2VzcyB0byBzcGVjaWZpYyBhY2NvdW50cyB3aXRoIHJvbGUgYmFzZWQgYWNjZXNzIGNvbnRyb2wgWzNdIFxuICAgIFVTRVIgPSAzLFxuIFxuICAgIC8vIFNlcnZpY2UgQWNjb3VudCAtIHRvIGJlIHVzZWQgYnkgb3RoZXIgc3lzdGVtcyB0byBwZXJmb3JtIGFjdGlvbnMgdXNpbmcgdGhlIEFQSSAoY2FuJ3QgbG9naW4gYXMgYSB1c2VyIHRvIHRoZSBwb3J0YWwpIFs0XSBcbiAgICBTRVJWSUNFID0gNCxcbiBcbn1cblxuLy8gUmV0dXJuIGxpc3Qgb2YgVXNlclR5cGVDb2RlIHZhbHVlcyBhbmQgdGhlaXIgZGlzcGxheSBuYW1lc1xuZXhwb3J0IGZ1bmN0aW9uIEdldFVzZXJUeXBlQ29kZXMoKSA6IE1hcDxVc2VyVHlwZUNvZGUsIHN0cmluZz4ge1xuXG4gICAgbGV0IHJlc3VsdCA9IG5ldyBNYXA8VXNlclR5cGVDb2RlLCBzdHJpbmc+KCk7XG5cbiAgICBcbiAgICByZXN1bHQuc2V0KFVzZXJUeXBlQ29kZS5VTkRFRklORUQsICdVbmRlZmluZWQnKTtcbiAgICBcbiAgICByZXN1bHQuc2V0KFVzZXJUeXBlQ29kZS5TWVNBRE1JTiwgJ1N5c2FkbWluJyk7XG4gICAgXG4gICAgcmVzdWx0LnNldChVc2VyVHlwZUNvZGUuU1VQUE9SVCwgJ1N1cHBvcnQnKTtcbiAgICBcbiAgICByZXN1bHQuc2V0KFVzZXJUeXBlQ29kZS5VU0VSLCAnVXNlcicpO1xuICAgIFxuICAgIHJlc3VsdC5zZXQoVXNlclR5cGVDb2RlLlNFUlZJQ0UsICdTZXJ2aWNlJyk7XG4gICAgXG5cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuIl19
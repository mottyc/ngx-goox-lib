import { Tuple } from '.';
// TicketStatusCode represents a flight ticket status:  ...
export var TicketStatusCode;
(function (TicketStatusCode) {
    // Undefined [0] 
    TicketStatusCode[TicketStatusCode["UNDEFINED"] = 0] = "UNDEFINED";
    // Pending [1] 
    TicketStatusCode[TicketStatusCode["PENDING"] = 1] = "PENDING";
    // Sent to client [2] 
    TicketStatusCode[TicketStatusCode["SENT"] = 2] = "SENT";
})(TicketStatusCode || (TicketStatusCode = {}));
// Return list of TicketStatusCode values and their display names
export function GetTicketStatusCodes() {
    let result = [];
    result.push(new Tuple(TicketStatusCode.PENDING, 'TicketStatusCode.PENDING'));
    result.push(new Tuple(TicketStatusCode.SENT, 'TicketStatusCode.SENT'));
    return result;
}
// Return map of TicketStatusCode values and their display names
export function MapTicketStatusCodes() {
    let result = new Map();
    result.set(TicketStatusCode.UNDEFINED, 'Undefined');
    result.set(TicketStatusCode.PENDING, 'Pending');
    result.set(TicketStatusCode.SENT, 'Sent');
    return result;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGlja2V0U3RhdHVzQ29kZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1nb294LWxpYi9zcmMvbGliL1RpY2tldFN0YXR1c0NvZGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLEdBQUcsQ0FBQztBQUcxQiwyREFBMkQ7QUFDM0QsTUFBTSxDQUFOLElBQVksZ0JBV1g7QUFYRCxXQUFZLGdCQUFnQjtJQUV4QixpQkFBaUI7SUFDakIsaUVBQWEsQ0FBQTtJQUViLGVBQWU7SUFDZiw2REFBVyxDQUFBO0lBRVgsc0JBQXNCO0lBQ3RCLHVEQUFRLENBQUE7QUFFWixDQUFDLEVBWFcsZ0JBQWdCLEtBQWhCLGdCQUFnQixRQVczQjtBQUVELGlFQUFpRTtBQUNqRSxNQUFNLFVBQVUsb0JBQW9CO0lBQ25DLElBQUksTUFBTSxHQUF1QyxFQUFFLENBQUM7SUFHcEQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLEtBQUssQ0FBMkIsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLDBCQUEwQixDQUFDLENBQUMsQ0FBQTtJQUV0RyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksS0FBSyxDQUEyQixnQkFBZ0IsQ0FBQyxJQUFJLEVBQUUsdUJBQXVCLENBQUMsQ0FBQyxDQUFBO0lBRzdGLE9BQU8sTUFBTSxDQUFDO0FBQ2xCLENBQUM7QUFFRCxnRUFBZ0U7QUFDaEUsTUFBTSxVQUFVLG9CQUFvQjtJQUNoQyxJQUFJLE1BQU0sR0FBRyxJQUFJLEdBQUcsRUFBNEIsQ0FBQztJQUdwRCxNQUFNLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLFNBQVMsRUFBRSxXQUFXLENBQUMsQ0FBQztJQUVwRCxNQUFNLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxTQUFTLENBQUMsQ0FBQztJQUVoRCxNQUFNLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQztJQUd2QyxPQUFPLE1BQU0sQ0FBQztBQUNsQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBUdXBsZSB9IGZyb20gJy4nO1xuXG5cbi8vIFRpY2tldFN0YXR1c0NvZGUgcmVwcmVzZW50cyBhIGZsaWdodCB0aWNrZXQgc3RhdHVzOiAgLi4uXG5leHBvcnQgZW51bSBUaWNrZXRTdGF0dXNDb2RlIHtcbiBcbiAgICAvLyBVbmRlZmluZWQgWzBdIFxuICAgIFVOREVGSU5FRCA9IDAsXG4gXG4gICAgLy8gUGVuZGluZyBbMV0gXG4gICAgUEVORElORyA9IDEsXG4gXG4gICAgLy8gU2VudCB0byBjbGllbnQgWzJdIFxuICAgIFNFTlQgPSAyLFxuIFxufVxuXG4vLyBSZXR1cm4gbGlzdCBvZiBUaWNrZXRTdGF0dXNDb2RlIHZhbHVlcyBhbmQgdGhlaXIgZGlzcGxheSBuYW1lc1xuZXhwb3J0IGZ1bmN0aW9uIEdldFRpY2tldFN0YXR1c0NvZGVzKCkgOiBUdXBsZTxUaWNrZXRTdGF0dXNDb2RlLCBzdHJpbmc+W10ge1xuXHRsZXQgcmVzdWx0IDogVHVwbGU8VGlja2V0U3RhdHVzQ29kZSwgc3RyaW5nPltdID0gW107XG5cbiAgICBcblx0cmVzdWx0LnB1c2gobmV3IFR1cGxlPFRpY2tldFN0YXR1c0NvZGUsIHN0cmluZz4oVGlja2V0U3RhdHVzQ29kZS5QRU5ESU5HLCAnVGlja2V0U3RhdHVzQ29kZS5QRU5ESU5HJykpXG5cdFxuXHRyZXN1bHQucHVzaChuZXcgVHVwbGU8VGlja2V0U3RhdHVzQ29kZSwgc3RyaW5nPihUaWNrZXRTdGF0dXNDb2RlLlNFTlQsICdUaWNrZXRTdGF0dXNDb2RlLlNFTlQnKSlcblx0XG5cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuXG4vLyBSZXR1cm4gbWFwIG9mIFRpY2tldFN0YXR1c0NvZGUgdmFsdWVzIGFuZCB0aGVpciBkaXNwbGF5IG5hbWVzXG5leHBvcnQgZnVuY3Rpb24gTWFwVGlja2V0U3RhdHVzQ29kZXMoKSA6IE1hcDxUaWNrZXRTdGF0dXNDb2RlLCBzdHJpbmc+IHtcbiAgICBsZXQgcmVzdWx0ID0gbmV3IE1hcDxUaWNrZXRTdGF0dXNDb2RlLCBzdHJpbmc+KCk7XG5cbiAgICBcblx0cmVzdWx0LnNldChUaWNrZXRTdGF0dXNDb2RlLlVOREVGSU5FRCwgJ1VuZGVmaW5lZCcpO1xuXHRcblx0cmVzdWx0LnNldChUaWNrZXRTdGF0dXNDb2RlLlBFTkRJTkcsICdQZW5kaW5nJyk7XG5cdFxuXHRyZXN1bHQuc2V0KFRpY2tldFN0YXR1c0NvZGUuU0VOVCwgJ1NlbnQnKTtcblx0XG5cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuIl19